/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica2;

import Automatas.AFD;
import Ficheros.ficheros;
import Grafico.grafica;
import com.mxgraph.swing.mxGraphComponent;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cuest
 */
public class Frame extends javax.swing.JFrame {

    DefaultTableModel tablaestado = new DefaultTableModel();
    private AFD automata;
    Grafico.grafica grafica = new grafica();

    public Frame() {
        initComponents();
        String[] columnasTabla = {"Estado/Simbolo", "0", "1"};
        tablaestado.setColumnIdentifiers(columnasTabla);
        Jtablaestados.getTableHeader().setResizingAllowed(false);
        Jtablaestados.setModel(tablaestado);

        //Jtablaestados.getColumnModel().getColumn(0).setPreferredWidth(25);
        //Jtablaestados.getColumnModel().getColumn(1).setPreferredWidth(140);
        //Jtablaestados.getColumnModel().getColumn(2).setPreferredWidth(80);
    }

    public void limpiartabla() {

        while (tablaestado.getRowCount() > 0) {
            tablaestado.removeRow(0);
        }

    }

    public void actualizartabla() {

        limpiartabla();

        String transiciones[] = new String[automata.getTransiciones().size()];

        automata.getTransiciones().toArray(transiciones);

        for (int i = 0; i < transiciones.length; i++) {

            String partes[] = transiciones[i].split(" ");
            boolean encontrado = false;
            int lugar = 0;
            for (int x = 0; x < tablaestado.getRowCount(); x++) {
                if (partes[0].equals(tablaestado.getValueAt(x, 0))) {
                    encontrado = true;
                    lugar = x;
                }
            }

            if (partes[1].equals("0")) {
                String[] columnasTabla = {partes[0], partes[2], " "};
                if (!encontrado) {
                    tablaestado.addRow(columnasTabla);
                } else {
                    tablaestado.setValueAt(partes[2], lugar, 1);
                }
            } else if (partes[1].equals("1")) {
                String[] columnasTabla = {partes[0], " ", partes[2]};
                if (!encontrado) {
                    tablaestado.addRow(columnasTabla);
                } else {
                    tablaestado.setValueAt(partes[2], lugar, 2);
                }
                
            }

        }

        System.out.println(automata.getTransiciones().toArray(transiciones));

    }

    public void actualizargrafica() {

        mxGraphComponent gr = null;
        gr = grafica.generaAFD(automata, automata.getEstados());
        scrollrepresentacion.add(gr);
        scrollrepresentacion.getViewport().add(gr);
        scrollrepresentacion.revalidate();
        scrollrepresentacion.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Jtablaestados = new javax.swing.JTable();
        scrollrepresentacion = new javax.swing.JScrollPane();
        Salir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Abrir Fichero");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Jtablaestados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Jtablaestados);

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                        .addComponent(scrollrepresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scrollrepresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(Salir))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String ruta = null;
        JFileChooser filec = new JFileChooser();
        filec.showOpenDialog(filec);
        try {
            ruta = filec.getSelectedFile().getAbsolutePath();
        } catch (NullPointerException ex) {
            System.out.println("ERROR: No se ha seleccionado ning√∫n fichero");
        } catch (Exception ex) {
            System.out.println("ERROR: " + ex.getMessage());
        }
        ficheros f = new ficheros();

        try {
            automata = f.cargafichero(ruta);
            
            actualizartabla();
            actualizargrafica();

        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Frame f = new Frame();
        f.setVisible(true);
        f.setLocationRelativeTo(null);
        f.setTitle("Practica 2        Manuel Cuesta Rojas | Jorge Lara Ochoa");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Jtablaestados;
    private javax.swing.JButton Salir;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane scrollrepresentacion;
    // End of variables declaration//GEN-END:variables
}
