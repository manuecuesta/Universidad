

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed May 06 18:27:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.10
    58                           ; Generated 31/07/2019 GMT
    59                           ; 
    60                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F887 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001B                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001D                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  0081                     	;# 
   127  0085                     	;# 
   128  0086                     	;# 
   129  0087                     	;# 
   130  0088                     	;# 
   131  0089                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  008F                     	;# 
   136  0090                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0097                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009A                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  0105                     	;# 
   155  0107                     	;# 
   156  0108                     	;# 
   157  0109                     	;# 
   158  010C                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0185                     	;# 
   164  0187                     	;# 
   165  0188                     	;# 
   166  0189                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  0105                     	;# 
   233  0107                     	;# 
   234  0108                     	;# 
   235  0109                     	;# 
   236  010C                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  0185                     	;# 
   242  0187                     	;# 
   243  0188                     	;# 
   244  0189                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247                           
   248                           	psect	idataBANK1
   249  0802                     __pidataBANK1:	
   250                           
   251                           ;initializer for _rowAddr
   252  0802  3480               	retlw	128
   253  0803  34C0               	retlw	192
   254  0804  3494               	retlw	148
   255  0805  34D4               	retlw	212
   256                           
   257                           	psect	strings
   258  1000                     __pstrings:	
   259  1000                     stringtab:	
   260  1000                     __stringtab:	
   261  1000                     stringcode:	
   262                           ;	String table - string pointers are 1 byte each
   263                           
   264  1000                     stringdir:	
   265  1000  3010               	movlw	high stringdir
   266  1001  008A               	movwf	10
   267  1002  0804               	movf	4,w
   268  1003  0A84               	incf	4,f
   269  1004  0782               	addwf	2,f
   270  1005                     __stringbase:	
   271  1005  3400               	retlw	0
   272  1006                     __end_of__stringtab:	
   273  1006                     __powers_:	
   274  1006  3400               	retlw	0
   275  1007  3400               	retlw	0
   276  1008  3480               	retlw	128
   277  1009  343F               	retlw	63
   278  100A  3400               	retlw	0
   279  100B  3400               	retlw	0
   280  100C  3420               	retlw	32
   281  100D  3441               	retlw	65
   282  100E  3400               	retlw	0
   283  100F  3400               	retlw	0
   284  1010  34C8               	retlw	200
   285  1011  3442               	retlw	66
   286  1012  3400               	retlw	0
   287  1013  3400               	retlw	0
   288  1014  347A               	retlw	122
   289  1015  3444               	retlw	68
   290  1016  3400               	retlw	0
   291  1017  3440               	retlw	64
   292  1018  341C               	retlw	28
   293  1019  3446               	retlw	70
   294  101A  3400               	retlw	0
   295  101B  3450               	retlw	80
   296  101C  34C3               	retlw	195
   297  101D  3447               	retlw	71
   298  101E  3400               	retlw	0
   299  101F  3424               	retlw	36
   300  1020  3474               	retlw	116
   301  1021  3449               	retlw	73
   302  1022  3480               	retlw	128
   303  1023  3496               	retlw	150
   304  1024  3418               	retlw	24
   305  1025  344B               	retlw	75
   306  1026  3420               	retlw	32
   307  1027  34BC               	retlw	188
   308  1028  34BE               	retlw	190
   309  1029  344C               	retlw	76
   310  102A  3428               	retlw	40
   311  102B  346B               	retlw	107
   312  102C  346E               	retlw	110
   313  102D  344E               	retlw	78
   314  102E  34F9               	retlw	249
   315  102F  3402               	retlw	2
   316  1030  3415               	retlw	21
   317  1031  3450               	retlw	80
   318  1032  34EC               	retlw	236
   319  1033  3478               	retlw	120
   320  1034  34AD               	retlw	173
   321  1035  3460               	retlw	96
   322  1036  34CA               	retlw	202
   323  1037  34F2               	retlw	242
   324  1038  3449               	retlw	73
   325  1039  3471               	retlw	113
   326  103A                     __end_of__powers_:	
   327  103A                     __npowers_:	
   328  103A  3400               	retlw	0
   329  103B  3400               	retlw	0
   330  103C  3480               	retlw	128
   331  103D  343F               	retlw	63
   332  103E  34CD               	retlw	205
   333  103F  34CC               	retlw	204
   334  1040  34CC               	retlw	204
   335  1041  343D               	retlw	61
   336  1042  340A               	retlw	10
   337  1043  34D7               	retlw	215
   338  1044  3423               	retlw	35
   339  1045  343C               	retlw	60
   340  1046  346F               	retlw	111
   341  1047  3412               	retlw	18
   342  1048  3483               	retlw	131
   343  1049  343A               	retlw	58
   344  104A  3417               	retlw	23
   345  104B  34B7               	retlw	183
   346  104C  34D1               	retlw	209
   347  104D  3438               	retlw	56
   348  104E  34AC               	retlw	172
   349  104F  34C5               	retlw	197
   350  1050  3427               	retlw	39
   351  1051  3437               	retlw	55
   352  1052  34BD               	retlw	189
   353  1053  3437               	retlw	55
   354  1054  3486               	retlw	134
   355  1055  3435               	retlw	53
   356  1056  3495               	retlw	149
   357  1057  34BF               	retlw	191
   358  1058  34D6               	retlw	214
   359  1059  3433               	retlw	51
   360  105A  3477               	retlw	119
   361  105B  34CC               	retlw	204
   362  105C  342B               	retlw	43
   363  105D  3432               	retlw	50
   364  105E  345F               	retlw	95
   365  105F  3470               	retlw	112
   366  1060  3489               	retlw	137
   367  1061  3430               	retlw	48
   368  1062  34FF               	retlw	255
   369  1063  34E6               	retlw	230
   370  1064  34DB               	retlw	219
   371  1065  342E               	retlw	46
   372  1066  3408               	retlw	8
   373  1067  34E5               	retlw	229
   374  1068  343C               	retlw	60
   375  1069  341E               	retlw	30
   376  106A  3460               	retlw	96
   377  106B  3442               	retlw	66
   378  106C  34A2               	retlw	162
   379  106D  340D               	retlw	13
   380  106E                     __end_of__npowers_:	
   381  106E                     _dpowers:	
   382  106E  3401               	retlw	1
   383  106F  3400               	retlw	0
   384  1070  3400               	retlw	0
   385  1071  3400               	retlw	0
   386  1072  340A               	retlw	10
   387  1073  3400               	retlw	0
   388  1074  3400               	retlw	0
   389  1075  3400               	retlw	0
   390  1076  3464               	retlw	100
   391  1077  3400               	retlw	0
   392  1078  3400               	retlw	0
   393  1079  3400               	retlw	0
   394  107A  34E8               	retlw	232
   395  107B  3403               	retlw	3
   396  107C  3400               	retlw	0
   397  107D  3400               	retlw	0
   398  107E  3410               	retlw	16
   399  107F  3427               	retlw	39
   400  1080  3400               	retlw	0
   401  1081  3400               	retlw	0
   402  1082  34A0               	retlw	160
   403  1083  3486               	retlw	134
   404  1084  3401               	retlw	1
   405  1085  3400               	retlw	0
   406  1086  3440               	retlw	64
   407  1087  3442               	retlw	66
   408  1088  340F               	retlw	15
   409  1089  3400               	retlw	0
   410  108A  3480               	retlw	128
   411  108B  3496               	retlw	150
   412  108C  3498               	retlw	152
   413  108D  3400               	retlw	0
   414  108E  3400               	retlw	0
   415  108F  34E1               	retlw	225
   416  1090  34F5               	retlw	245
   417  1091  3405               	retlw	5
   418  1092  3400               	retlw	0
   419  1093  34CA               	retlw	202
   420  1094  349A               	retlw	154
   421  1095  343B               	retlw	59
   422  1096                     __end_of_dpowers:	
   423  0013                     _SSPBUF	set	19
   424  0014                     _SSPCON	set	20
   425  0041                     _RD1	set	65
   426  0047                     _RD7	set	71
   427  0046                     _RD6	set	70
   428  0045                     _RD5	set	69
   429  0044                     _RD4	set	68
   430  0040                     _RD0	set	64
   431  0063                     _SSPIF	set	99
   432  0091                     _SSPCON2	set	145
   433  0094                     _SSPSTAT	set	148
   434  0093                     _SSPADD	set	147
   435  0447                     _TRISD7	set	1095
   436  0446                     _TRISD6	set	1094
   437  0445                     _TRISD5	set	1093
   438  0444                     _TRISD4	set	1092
   439  0441                     _TRISD1	set	1089
   440  0440                     _TRISD0	set	1088
   441  04A2                     _R_W	set	1186
   442  048B                     _RCEN	set	1163
   443  048E                     _ACKSTAT	set	1166
   444  048C                     _ACKEN	set	1164
   445  048D                     _ACKDT	set	1165
   446  048A                     _PEN	set	1162
   447  0489                     _RSEN	set	1161
   448  0488                     _SEN	set	1160
   449  043C                     _TRISC4	set	1084
   450  043B                     _TRISC3	set	1083
   451  1096                     STR_1:	
   452  1096  3454               	retlw	84	;'T'
   453  1097  3465               	retlw	101	;'e'
   454  1098  346D               	retlw	109	;'m'
   455  1099  3470               	retlw	112	;'p'
   456  109A  3472               	retlw	114	;'r'
   457  109B  343A               	retlw	58	;':'
   458  109C  3425               	retlw	37	;'%'
   459  109D  3433               	retlw	51	;'3'
   460  109E  342E               	retlw	46	;'.'
   461  109F  3432               	retlw	50	;'2'
   462  10A0  3466               	retlw	102	;'f'
   463  10A1  3443               	retlw	67	;'C'
   464  10A2  3400               	retlw	0
   465                           
   466                           ; #config settings
   467  0000                     
   468                           	psect	cinit
   469  07D3                     start_initialization:	
   470  07D3                     __initialization:	
   471                           
   472                           ; Initialize objects allocated to BANK1
   473  07D3  1683               	bsf	3,5	;RP0=1, select bank1
   474  07D4  1303               	bcf	3,6	;RP1=0, select bank1
   475  07D5  120A  158A  2002  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   476  07DA  00E7               	movwf	__pdataBANK1& (0+127)
   477  07DB  120A  158A  2003  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   478  07E0  00E8               	movwf	(__pdataBANK1+1)& (0+127)
   479  07E1  120A  158A  2004  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   480  07E6  00E9               	movwf	(__pdataBANK1+2)& (0+127)
   481  07E7  120A  158A  2005  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   482  07EC  00EA               	movwf	(__pdataBANK1+3)& (0+127)
   483                           
   484                           ; Clear objects allocated to BANK1
   485  07ED  01D8               	clrf	__pbssBANK1& (0+127)
   486  07EE  01D9               	clrf	(__pbssBANK1+1)& (0+127)
   487  07EF  01DA               	clrf	(__pbssBANK1+2)& (0+127)
   488  07F0  01DB               	clrf	(__pbssBANK1+3)& (0+127)
   489  07F1  01DC               	clrf	(__pbssBANK1+4)& (0+127)
   490  07F2  01DD               	clrf	(__pbssBANK1+5)& (0+127)
   491  07F3  01DE               	clrf	(__pbssBANK1+6)& (0+127)
   492  07F4  01DF               	clrf	(__pbssBANK1+7)& (0+127)
   493  07F5  01E0               	clrf	(__pbssBANK1+8)& (0+127)
   494  07F6  01E1               	clrf	(__pbssBANK1+9)& (0+127)
   495  07F7  01E2               	clrf	(__pbssBANK1+10)& (0+127)
   496  07F8  01E3               	clrf	(__pbssBANK1+11)& (0+127)
   497  07F9  01E4               	clrf	(__pbssBANK1+12)& (0+127)
   498  07FA  01E5               	clrf	(__pbssBANK1+13)& (0+127)
   499  07FB  01E6               	clrf	(__pbssBANK1+14)& (0+127)
   500  07FC                     end_of_initialization:	
   501                           ;End of C runtime variable initialization code
   502                           
   503  07FC                     __end_of__initialization:	
   504  07FC  0183               	clrf	3
   505  07FD  160A  158A  2DF1   	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	bssBANK1
   508  00D8                     __pbssBANK1:	
   509  00D8                     _out:	
   510  00D8                     	ds	15
   511                           
   512                           	psect	dataBANK1
   513  00E7                     __pdataBANK1:	
   514  00E7                     _rowAddr:	
   515  00E7                     	ds	4
   516                           
   517                           	psect	cstackBANK1
   518  00A0                     __pcstackBANK1:	
   519  00A0                     toFloat@isfraction:	
   520                           
   521                           ; 1 bytes @ 0x0
   522  00A0                     	ds	1
   523  00A1                     toFloat@result:	
   524                           
   525                           ; 4 bytes @ 0x1
   526  00A1                     	ds	4
   527  00A5                     ??_LM75_read:	
   528                           
   529                           ; 1 bytes @ 0x5
   530  00A5                     	ds	2
   531  00A7                     LM75_read@MSB:	
   532                           
   533                           ; 2 bytes @ 0x7
   534  00A7                     	ds	2
   535  00A9                     LM75_read@LSB:	
   536                           
   537                           ; 2 bytes @ 0x9
   538  00A9                     	ds	2
   539  00AB                     LM75_read@regAddress:	
   540                           
   541                           ; 1 bytes @ 0xB
   542  00AB                     	ds	1
   543  00AC                     ?_sprintf:	
   544  00AC                     sprintf@f:	
   545                           ; 2 bytes @ 0xC
   546                           
   547                           
   548                           ; 1 bytes @ 0xC
   549  00AC                     	ds	5
   550  00B1                     ??_sprintf:	
   551                           
   552                           ; 1 bytes @ 0x11
   553  00B1                     	ds	5
   554  00B6                     _sprintf$885:	
   555                           
   556                           ; 4 bytes @ 0x16
   557  00B6                     	ds	4
   558  00BA                     sprintf@ap:	
   559                           
   560                           ; 1 bytes @ 0x1A
   561  00BA                     	ds	1
   562  00BB                     sprintf@val:	
   563                           
   564                           ; 4 bytes @ 0x1B
   565  00BB                     	ds	4
   566  00BF                     sprintf@flag:	
   567                           
   568                           ; 2 bytes @ 0x1F
   569  00BF                     	ds	2
   570  00C1                     sprintf@width:	
   571                           
   572                           ; 2 bytes @ 0x21
   573  00C1                     	ds	2
   574  00C3                     sprintf@tmpval:	
   575                           
   576                           ; 4 bytes @ 0x23
   577  00C3                     	ds	4
   578  00C7                     sprintf@eexp:	
   579                           
   580                           ; 2 bytes @ 0x27
   581  00C7                     	ds	2
   582  00C9                     sprintf@fval:	
   583                           
   584                           ; 4 bytes @ 0x29
   585  00C9                     	ds	4
   586  00CD                     sprintf@sp:	
   587                           
   588                           ; 1 bytes @ 0x2D
   589  00CD                     	ds	1
   590  00CE                     sprintf@prec:	
   591                           
   592                           ; 2 bytes @ 0x2E
   593  00CE                     	ds	2
   594  00D0                     sprintf@c:	
   595                           
   596                           ; 1 bytes @ 0x30
   597  00D0                     	ds	1
   598  00D1                     ?_main:	
   599  00D1                     main@argc:	
   600                           ; 2 bytes @ 0x31
   601                           
   602                           
   603                           ; 2 bytes @ 0x31
   604  00D1                     	ds	2
   605  00D3                     main@argv:	
   606                           
   607                           ; 2 bytes @ 0x33
   608  00D3                     	ds	2
   609  00D5                     ??_main:	
   610                           
   611                           ; 1 bytes @ 0x35
   612  00D5                     	ds	3
   613                           
   614                           	psect	cstackCOMMON
   615  0070                     __pcstackCOMMON:	
   616  0070                     ?_isdigit:	
   617  0070                     ?___fleq:	
   618                           ; 1 bit 
   619                           
   620  0070                     ?___flge:	
   621                           ; 1 bit 
   622                           
   623  0070                     ?_LCD_pinDirs:	
   624                           ; 1 bit 
   625                           
   626  0070                     ??_LCD_pinDirs:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_LCD_command:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_LCD_transmit:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_LCD_getBits:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_LCD_sendBits:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_latch:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ??_latch:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ??_isdigit:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_I2C_start:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??_I2C_start:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_I2C_restart:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ??_I2C_restart:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_I2C_stop:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ??_I2C_stop:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_I2C_ack:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ??_I2C_ack:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_I2C_write:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ??_I2C_write:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_I2C_read:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_LM75_init:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_LCD_init:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_LCD_data:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?__Umul8_16:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?___wmul:	
   696                           ; 2 bytes @ 0x0
   697                           
   698  0070                     ?___awmod:	
   699                           ; 2 bytes @ 0x0
   700                           
   701  0070                     ?___lwmod:	
   702                           ; 2 bytes @ 0x0
   703                           
   704  0070                     ?__tdiv_to_l_:	
   705                           ; 2 bytes @ 0x0
   706                           
   707  0070                     ?__div_to_l_:	
   708                           ; 4 bytes @ 0x0
   709                           
   710  0070                     ?___lldiv:	
   711                           ; 4 bytes @ 0x0
   712                           
   713  0070                     ?___flneg:	
   714                           ; 4 bytes @ 0x0
   715                           
   716  0070                     ?___llmod:	
   717                           ; 4 bytes @ 0x0
   718                           
   719  0070                     ?___xxtofl:	
   720                           ; 4 bytes @ 0x0
   721                           
   722  0070                     I2C_ack@acknowledge:	
   723                           ; 4 bytes @ 0x0
   724                           
   725  0070                     I2C_write@data:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     LCD_getBits@pinBit:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     _isdigit$678:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     __Umul8_16@multiplicand:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ___wmul@multiplier:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ___awmod@divisor:	
   741                           ; 2 bytes @ 0x0
   742                           
   743  0070                     ___lwmod@divisor:	
   744                           ; 2 bytes @ 0x0
   745                           
   746  0070                     ___lldiv@divisor:	
   747                           ; 2 bytes @ 0x0
   748                           
   749  0070                     __div_to_l_@f1:	
   750                           ; 4 bytes @ 0x0
   751                           
   752  0070                     ___fleq@ff1:	
   753                           ; 4 bytes @ 0x0
   754                           
   755  0070                     ___flge@ff1:	
   756                           ; 4 bytes @ 0x0
   757                           
   758  0070                     ___flneg@f1:	
   759                           ; 4 bytes @ 0x0
   760                           
   761  0070                     __tdiv_to_l_@f1:	
   762                           ; 4 bytes @ 0x0
   763                           
   764  0070                     ___llmod@divisor:	
   765                           ; 4 bytes @ 0x0
   766                           
   767  0070                     ___xxtofl@val:	
   768                           ; 4 bytes @ 0x0
   769                           
   770                           
   771                           ; 4 bytes @ 0x0
   772  0070                     	ds	1
   773  0071                     ?_LM75_set:	
   774  0071                     ??_LCD_getBits:	
   775                           ; 1 bytes @ 0x1
   776                           
   777  0071                     ??_I2C_read:	
   778                           ; 1 bytes @ 0x1
   779                           
   780  0071                     I2C_read@acknowledge:	
   781                           ; 1 bytes @ 0x1
   782                           
   783  0071                     isdigit@c:	
   784                           ; 1 bytes @ 0x1
   785                           
   786  0071                     LM75_set@data:	
   787                           ; 1 bytes @ 0x1
   788                           
   789                           
   790                           ; 2 bytes @ 0x1
   791  0071                     	ds	1
   792  0072                     ??_LCD_sendBits:	
   793  0072                     ??__Umul8_16:	
   794                           ; 1 bytes @ 0x2
   795                           
   796  0072                     LCD_sendBits@pinBit:	
   797                           ; 1 bytes @ 0x2
   798                           
   799  0072                     ___wmul@multiplicand:	
   800                           ; 1 bytes @ 0x2
   801                           
   802  0072                     ___awmod@dividend:	
   803                           ; 2 bytes @ 0x2
   804                           
   805  0072                     ___lwmod@dividend:	
   806                           ; 2 bytes @ 0x2
   807                           
   808                           
   809                           ; 2 bytes @ 0x2
   810  0072                     	ds	1
   811  0073                     ??_LM75_set:	
   812  0073                     LM75_set@regAddress:	
   813                           ; 1 bytes @ 0x3
   814                           
   815                           
   816                           ; 1 bytes @ 0x3
   817  0073                     	ds	1
   818  0074                     ??___wmul:	
   819  0074                     ??___awmod:	
   820                           ; 1 bytes @ 0x4
   821                           
   822  0074                     ??___flneg:	
   823                           ; 1 bytes @ 0x4
   824                           
   825  0074                     ??___lwmod:	
   826                           ; 1 bytes @ 0x4
   827                           
   828  0074                     ??___xxtofl:	
   829                           ; 1 bytes @ 0x4
   830                           
   831  0074                     LCD_getBits@data:	
   832                           ; 1 bytes @ 0x4
   833                           
   834  0074                     ___wmul@product:	
   835                           ; 1 bytes @ 0x4
   836                           
   837  0074                     __Umul8_16@product:	
   838                           ; 2 bytes @ 0x4
   839                           
   840  0074                     ___lldiv@dividend:	
   841                           ; 2 bytes @ 0x4
   842                           
   843  0074                     __div_to_l_@f2:	
   844                           ; 4 bytes @ 0x4
   845                           
   846  0074                     ___fleq@ff2:	
   847                           ; 4 bytes @ 0x4
   848                           
   849  0074                     ___flge@ff2:	
   850                           ; 4 bytes @ 0x4
   851                           
   852  0074                     __tdiv_to_l_@f2:	
   853                           ; 4 bytes @ 0x4
   854                           
   855  0074                     ___llmod@dividend:	
   856                           ; 4 bytes @ 0x4
   857                           
   858                           
   859                           ; 4 bytes @ 0x4
   860  0074                     	ds	1
   861  0075                     LCD_getBits@i:	
   862  0075                     ___awmod@counter:	
   863                           ; 1 bytes @ 0x5
   864                           
   865  0075                     ___lwmod@counter:	
   866                           ; 1 bytes @ 0x5
   867                           
   868                           
   869                           ; 1 bytes @ 0x5
   870  0075                     	ds	1
   871  0076                     ??_LCD_transmit:	
   872  0076                     ?___lwdiv:	
   873                           ; 1 bytes @ 0x6
   874                           
   875  0076                     ___awmod@sign:	
   876                           ; 2 bytes @ 0x6
   877                           
   878  0076                     ___lwdiv@divisor:	
   879                           ; 1 bytes @ 0x6
   880                           
   881  0076                     __Umul8_16@word_mpld:	
   882                           ; 2 bytes @ 0x6
   883                           
   884                           
   885                           ; 2 bytes @ 0x6
   886  0076                     	ds	1
   887  0077                     ??_LCD_command:	
   888  0077                     ??_LCD_data:	
   889                           ; 1 bytes @ 0x7
   890                           
   891  0077                     ?___awdiv:	
   892                           ; 1 bytes @ 0x7
   893                           
   894  0077                     LCD_command@command:	
   895                           ; 2 bytes @ 0x7
   896                           
   897  0077                     LCD_data@data:	
   898                           ; 1 bytes @ 0x7
   899                           
   900  0077                     ___awdiv@divisor:	
   901                           ; 1 bytes @ 0x7
   902                           
   903                           
   904                           ; 2 bytes @ 0x7
   905  0077                     	ds	1
   906  0078                     ??__tdiv_to_l_:	
   907  0078                     ??__div_to_l_:	
   908                           ; 1 bytes @ 0x8
   909                           
   910  0078                     ??_LCD_init:	
   911                           ; 1 bytes @ 0x8
   912                           
   913  0078                     ??_LCD_string:	
   914                           ; 1 bytes @ 0x8
   915                           
   916  0078                     ??___lldiv:	
   917                           ; 1 bytes @ 0x8
   918                           
   919  0078                     ??___fleq:	
   920                           ; 1 bytes @ 0x8
   921                           
   922  0078                     ??___flge:	
   923                           ; 1 bytes @ 0x8
   924                           
   925  0078                     ??___llmod:	
   926                           ; 1 bytes @ 0x8
   927                           
   928  0078                     ___xxtofl@sign:	
   929                           ; 1 bytes @ 0x8
   930                           
   931  0078                     __Umul8_16@multiplier:	
   932                           ; 1 bytes @ 0x8
   933                           
   934  0078                     ___lwdiv@dividend:	
   935                           ; 1 bytes @ 0x8
   936                           
   937                           
   938                           ; 2 bytes @ 0x8
   939  0078                     	ds	1
   940  0079                     LCD_string@row:	
   941  0079                     ___llmod@counter:	
   942                           ; 1 bytes @ 0x9
   943                           
   944  0079                     ___xxtofl@exp:	
   945                           ; 1 bytes @ 0x9
   946                           
   947  0079                     ___awdiv@dividend:	
   948                           ; 1 bytes @ 0x9
   949                           
   950  0079                     ___lldiv@quotient:	
   951                           ; 2 bytes @ 0x9
   952                           
   953                           
   954                           ; 4 bytes @ 0x9
   955  0079                     	ds	1
   956  007A                     ??___lwdiv:	
   957  007A                     ___xxtofl@arg:	
   958                           ; 1 bytes @ 0xA
   959                           
   960                           
   961                           ; 4 bytes @ 0xA
   962  007A                     	ds	1
   963  007B                     ??___awdiv:	
   964  007B                     ___lwdiv@quotient:	
   965                           ; 1 bytes @ 0xB
   966                           
   967                           
   968                           ; 2 bytes @ 0xB
   969  007B                     	ds	2
   970  007D                     ___lldiv@counter:	
   971  007D                     ___lwdiv@counter:	
   972                           ; 1 bytes @ 0xD
   973                           
   974                           
   975                           ; 1 bytes @ 0xD
   976  007D                     	ds	1
   977  007E                     ??_I2C_init:	
   978  007E                     ??_LM75_init:	
   979                           ; 1 bytes @ 0xE
   980                           
   981  007E                     ??___flsub:	
   982                           ; 1 bytes @ 0xE
   983                           
   984                           
   985                           	psect	cstackBANK0
   986  0020                     __pcstackBANK0:	
   987                           ; 1 bytes @ 0xE
   988                           
   989  0020                     ?_I2C_init:	
   990  0020                     ___awdiv@counter:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0020                     I2C_init@speed:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0020                     __div_to_l_@quot:	
   997                           ; 4 bytes @ 0x0
   998                           
   999  0020                     __tdiv_to_l_@quot:	
  1000                           ; 4 bytes @ 0x0
  1001                           
  1002  0020                     LCD_transmit@pinBit:	
  1003                           ; 4 bytes @ 0x0
  1004                           
  1005                           
  1006                           ; 8 bytes @ 0x0
  1007  0020                     	ds	1
  1008  0021                     ___awdiv@sign:	
  1009                           
  1010                           ; 1 bytes @ 0x1
  1011  0021                     	ds	1
  1012  0022                     ___awdiv@quotient:	
  1013                           
  1014                           ; 2 bytes @ 0x2
  1015  0022                     	ds	2
  1016  0024                     ?___flmul:	
  1017  0024                     __div_to_l_@cntr:	
  1018                           ; 4 bytes @ 0x4
  1019                           
  1020  0024                     __tdiv_to_l_@cntr:	
  1021                           ; 1 bytes @ 0x4
  1022                           
  1023  0024                     ___flmul@b:	
  1024                           ; 1 bytes @ 0x4
  1025                           
  1026                           
  1027                           ; 4 bytes @ 0x4
  1028  0024                     	ds	1
  1029  0025                     __div_to_l_@exp1:	
  1030  0025                     __tdiv_to_l_@exp1:	
  1031                           ; 1 bytes @ 0x5
  1032                           
  1033                           
  1034                           ; 1 bytes @ 0x5
  1035  0025                     	ds	3
  1036  0028                     LCD_transmit@data:	
  1037  0028                     ___flmul@a:	
  1038                           ; 1 bytes @ 0x8
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x8
  1042  0028                     	ds	1
  1043  0029                     ?_LCD_string:	
  1044  0029                     LCD_string@column:	
  1045                           ; 1 bytes @ 0x9
  1046                           
  1047                           
  1048                           ; 1 bytes @ 0x9
  1049  0029                     	ds	1
  1050  002A                     LCD_string@text:	
  1051                           
  1052                           ; 1 bytes @ 0xA
  1053  002A                     	ds	2
  1054  002C                     ??___flmul:	
  1055                           
  1056                           ; 1 bytes @ 0xC
  1057  002C                     	ds	5
  1058  0031                     ___flmul@sign:	
  1059                           
  1060                           ; 1 bytes @ 0x11
  1061  0031                     	ds	1
  1062  0032                     ___flmul@grs:	
  1063                           
  1064                           ; 4 bytes @ 0x12
  1065  0032                     	ds	4
  1066  0036                     ___flmul@aexp:	
  1067                           
  1068                           ; 1 bytes @ 0x16
  1069  0036                     	ds	1
  1070  0037                     ___flmul@bexp:	
  1071                           
  1072                           ; 1 bytes @ 0x17
  1073  0037                     	ds	1
  1074  0038                     ___flmul@prod:	
  1075                           
  1076                           ; 4 bytes @ 0x18
  1077  0038                     	ds	4
  1078  003C                     ___flmul@temp:	
  1079                           
  1080                           ; 2 bytes @ 0x1C
  1081  003C                     	ds	2
  1082  003E                     ?_fround:	
  1083  003E                     ?_scale:	
  1084                           ; 4 bytes @ 0x1E
  1085                           
  1086                           
  1087                           ; 4 bytes @ 0x1E
  1088  003E                     	ds	4
  1089  0042                     ??_fround:	
  1090  0042                     ??_scale:	
  1091                           ; 1 bytes @ 0x22
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x22
  1095  0042                     	ds	7
  1096  0049                     _fround$883:	
  1097                           
  1098                           ; 4 bytes @ 0x29
  1099  0049                     	ds	3
  1100  004C                     _scale$884:	
  1101                           
  1102                           ; 4 bytes @ 0x2C
  1103  004C                     	ds	1
  1104  004D                     _fround$882:	
  1105                           
  1106                           ; 4 bytes @ 0x2D
  1107  004D                     	ds	3
  1108  0050                     scale@scl:	
  1109                           
  1110                           ; 1 bytes @ 0x30
  1111  0050                     	ds	1
  1112  0051                     ?___fltol:	
  1113  0051                     fround@prec:	
  1114                           ; 4 bytes @ 0x31
  1115                           
  1116  0051                     ___fltol@f1:	
  1117                           ; 1 bytes @ 0x31
  1118                           
  1119                           
  1120                           ; 4 bytes @ 0x31
  1121  0051                     	ds	1
  1122  0052                     ?___fladd:	
  1123  0052                     ___fladd@b:	
  1124                           ; 4 bytes @ 0x32
  1125                           
  1126                           
  1127                           ; 4 bytes @ 0x32
  1128  0052                     	ds	3
  1129  0055                     ??___fltol:	
  1130                           
  1131                           ; 1 bytes @ 0x35
  1132  0055                     	ds	1
  1133  0056                     ___fladd@a:	
  1134                           
  1135                           ; 4 bytes @ 0x36
  1136  0056                     	ds	4
  1137  005A                     ??___fladd:	
  1138  005A                     ___fltol@sign1:	
  1139                           ; 1 bytes @ 0x3A
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x3A
  1143  005A                     	ds	1
  1144  005B                     ___fltol@exp1:	
  1145                           
  1146                           ; 1 bytes @ 0x3B
  1147  005B                     	ds	7
  1148  0062                     ___fladd@signs:	
  1149                           
  1150                           ; 1 bytes @ 0x42
  1151  0062                     	ds	1
  1152  0063                     ___fladd@aexp:	
  1153                           
  1154                           ; 1 bytes @ 0x43
  1155  0063                     	ds	1
  1156  0064                     ___fladd@bexp:	
  1157                           
  1158                           ; 1 bytes @ 0x44
  1159  0064                     	ds	1
  1160  0065                     ___fladd@grs:	
  1161                           
  1162                           ; 1 bytes @ 0x45
  1163  0065                     	ds	1
  1164  0066                     ?_toFloat:	
  1165  0066                     ?___flsub:	
  1166                           ; 4 bytes @ 0x46
  1167                           
  1168  0066                     toFloat@tempr:	
  1169                           ; 4 bytes @ 0x46
  1170                           
  1171  0066                     ___flsub@a:	
  1172                           ; 2 bytes @ 0x46
  1173                           
  1174                           
  1175                           ; 4 bytes @ 0x46
  1176  0066                     	ds	4
  1177  006A                     ??_toFloat:	
  1178  006A                     ___flsub@b:	
  1179                           ; 1 bytes @ 0x4A
  1180                           
  1181                           
  1182                           ; 4 bytes @ 0x4A
  1183  006A                     	ds	2
  1184  006C                     ?_LM75_read:	
  1185                           
  1186                           ; 4 bytes @ 0x4C
  1187  006C                     	ds	4
  1188                           
  1189                           	psect	maintext
  1190  1DF1                     __pmaintext:	
  1191 ;;
  1192 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1193 ;;
  1194 ;; *************** function _main *****************
  1195 ;; Defined at:
  1196 ;;		line 21 in file "main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  argc            2   49[BANK1 ] int 
  1199 ;;  argv            2   51[BANK1 ] PTR PTR unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  2   49[BANK1 ] int 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : B00/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       4       0       0
  1212 ;;      Locals:         0       0       0       0       0
  1213 ;;      Temps:          0       0       3       0       0
  1214 ;;      Totals:         0       0       7       0       0
  1215 ;;Total ram usage:        7 bytes
  1216 ;; Hardware stack levels required when called:    5
  1217 ;; This function calls:
  1218 ;;		_LCD_command
  1219 ;;		_LCD_init
  1220 ;;		_LCD_string
  1221 ;;		_LM75_init
  1222 ;;		_LM75_read
  1223 ;;		_sprintf
  1224 ;; This function is called by:
  1225 ;;		Startup code after reset
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _main
  1231  1DF1                     _main:	
  1232  1DF1                     l3504:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1235                           
  1236                           
  1237                           ;main.c: 21: int main(int argc, char** argv);main.c: 22: {;main.c: 23:   LM75_init();
  1238  1DF1  160A  158A  23EB  160A  158A  	fcall	_LM75_init
  1239  1DF6                     l3506:	
  1240                           
  1241                           ;main.c: 24:   LCD_init();
  1242  1DF6  160A  158A  23A9  160A  158A  	fcall	_LCD_init
  1243  1DFB                     l3508:	
  1244                           
  1245                           ;main.c: 27:   {;main.c: 28:     sprintf( out,"Tempr:%3.2fC",LM75_read(0x00) );
  1246  1DFB  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1247  1DFC  1683               	bsf	3,5	;RP0=1, select bank1
  1248  1DFD  1303               	bcf	3,6	;RP1=0, select bank1
  1249  1DFE  00D5               	movwf	??_main^(0+128)
  1250  1DFF  0855               	movf	??_main^(0+128),w
  1251  1E00  00AC               	movwf	sprintf@f^(0+128)
  1252  1E01  3000               	movlw	0
  1253  1E02  160A  158A  26B4  160A  158A  	fcall	_LM75_read
  1254  1E07  1283               	bcf	3,5	;RP0=0, select bank0
  1255  1E08  1303               	bcf	3,6	;RP1=0, select bank0
  1256  1E09  086F               	movf	?_LM75_read+3,w
  1257  1E0A  1683               	bsf	3,5	;RP0=1, select bank1
  1258  1E0B  1303               	bcf	3,6	;RP1=0, select bank1
  1259  1E0C  00B0               	movwf	((?_sprintf+3)^(0+128)+1)
  1260  1E0D  1283               	bcf	3,5	;RP0=0, select bank0
  1261  1E0E  1303               	bcf	3,6	;RP1=0, select bank0
  1262  1E0F  086E               	movf	?_LM75_read+2,w
  1263  1E10  1683               	bsf	3,5	;RP0=1, select bank1
  1264  1E11  1303               	bcf	3,6	;RP1=0, select bank1
  1265  1E12  00AF               	movwf	((?_sprintf+2)^(0+128)+1)
  1266  1E13  1283               	bcf	3,5	;RP0=0, select bank0
  1267  1E14  1303               	bcf	3,6	;RP1=0, select bank0
  1268  1E15  086D               	movf	?_LM75_read+1,w
  1269  1E16  1683               	bsf	3,5	;RP0=1, select bank1
  1270  1E17  1303               	bcf	3,6	;RP1=0, select bank1
  1271  1E18  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  1272  1E19  1283               	bcf	3,5	;RP0=0, select bank0
  1273  1E1A  1303               	bcf	3,6	;RP1=0, select bank0
  1274  1E1B  086C               	movf	?_LM75_read,w
  1275  1E1C  1683               	bsf	3,5	;RP0=1, select bank1
  1276  1E1D  1303               	bcf	3,6	;RP1=0, select bank1
  1277  1E1E  00AD               	movwf	(?_sprintf^(0+128)+1)
  1278  1E1F  30D8               	movlw	(low (_out| 0))& (0+255)
  1279  1E20  120A  118A  2058  160A  158A  	fcall	_sprintf
  1280  1E25                     l3510:	
  1281                           
  1282                           ;main.c: 29:     LCD_string(0,0,out);
  1283  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  1284  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  1285  1E27  01A9               	clrf	LCD_string@column
  1286  1E28  30D8               	movlw	(low (_out| 0))& (0+255)
  1287  1E29  1683               	bsf	3,5	;RP0=1, select bank1
  1288  1E2A  1303               	bcf	3,6	;RP1=0, select bank1
  1289  1E2B  00D5               	movwf	??_main^(0+128)
  1290  1E2C  0855               	movf	??_main^(0+128),w
  1291  1E2D  1283               	bcf	3,5	;RP0=0, select bank0
  1292  1E2E  1303               	bcf	3,6	;RP1=0, select bank0
  1293  1E2F  00AA               	movwf	LCD_string@text
  1294  1E30  3000               	movlw	0
  1295  1E31  160A  158A  24A4  160A  158A  	fcall	_LCD_string
  1296  1E36                     l3512:	
  1297                           
  1298                           ;main.c: 31:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1299  1E36  3006               	movlw	6
  1300  1E37  1683               	bsf	3,5	;RP0=1, select bank1
  1301  1E38  1303               	bcf	3,6	;RP1=0, select bank1
  1302  1E39  00D7               	movwf	(??_main^(0+128)+2)
  1303  1E3A  3013               	movlw	19
  1304  1E3B  00D6               	movwf	(??_main^(0+128)+1)
  1305  1E3C  30AD               	movlw	173
  1306  1E3D  00D5               	movwf	??_main^(0+128)
  1307  1E3E                     u6037:	
  1308  1E3E  0BD5               	decfsz	??_main^(0+128),f
  1309  1E3F  2E3E               	goto	u6037
  1310  1E40  0BD6               	decfsz	(??_main^(0+128)+1),f
  1311  1E41  2E3E               	goto	u6037
  1312  1E42  0BD7               	decfsz	(??_main^(0+128)+2),f
  1313  1E43  2E3E               	goto	u6037
  1314  1E44                     l3514:	
  1315                           
  1316                           ;main.c: 32:     LCD_command(0x01);
  1317  1E44  3001               	movlw	1
  1318  1E45  160A  158A  2321  160A  158A  	fcall	_LCD_command
  1319  1E4A  2DFB               	goto	l3508
  1320  1E4B  120A  118A  2800   	ljmp	start
  1321  1E4E                     __end_of_main:	
  1322                           
  1323                           	psect	text1
  1324  0058                     __ptext1:	
  1325 ;; *************** function _sprintf *****************
  1326 ;; Defined at:
  1327 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  sp              1    wreg     PTR unsigned char 
  1330 ;;		 -> out(15), 
  1331 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1332 ;;		 -> STR_1(13), 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  sp              1   45[BANK1 ] PTR unsigned char 
  1335 ;;		 -> out(15), 
  1336 ;;  fval            4   41[BANK1 ] PTR unsigned char 
  1337 ;;  tmpval          4   35[BANK1 ] struct .
  1338 ;;  val             4   27[BANK1 ] unsigned long 
  1339 ;;  prec            2   46[BANK1 ] int 
  1340 ;;  eexp            2   39[BANK1 ] int 
  1341 ;;  width           2   33[BANK1 ] int 
  1342 ;;  flag            2   31[BANK1 ] unsigned short 
  1343 ;;  cp              2    0        PTR const unsigned char 
  1344 ;;  len             2    0        unsigned int 
  1345 ;;  c               1   48[BANK1 ] unsigned char 
  1346 ;;  ap              1   26[BANK1 ] PTR void [1]
  1347 ;;		 -> ?_sprintf(2), 
  1348 ;;  d               1    0        unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  2   12[BANK1 ] int 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       5       0       0
  1359 ;;      Locals:         0       0      27       0       0
  1360 ;;      Temps:          0       0       5       0       0
  1361 ;;      Totals:         0       0      37       0       0
  1362 ;;Total ram usage:       37 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    3
  1365 ;; This function calls:
  1366 ;;		___awdiv
  1367 ;;		___fladd
  1368 ;;		___fleq
  1369 ;;		___flge
  1370 ;;		___flmul
  1371 ;;		___flneg
  1372 ;;		___flsub
  1373 ;;		___fltol
  1374 ;;		___lldiv
  1375 ;;		___llmod
  1376 ;;		___wmul
  1377 ;;		___xxtofl
  1378 ;;		__div_to_l_
  1379 ;;		__tdiv_to_l_
  1380 ;;		_fround
  1381 ;;		_isdigit
  1382 ;;		_scale
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _sprintf
  1390  0058                     _sprintf:	
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1394                           ;sprintf@sp stored from wreg
  1395  0058  1683               	bsf	3,5	;RP0=1, select bank1
  1396  0059  1303               	bcf	3,6	;RP1=0, select bank1
  1397  005A  00CD               	movwf	sprintf@sp^(0+128)
  1398  005B                     l3220:	
  1399                           
  1400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1401  005B  30AD               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1402  005C  00B1               	movwf	??_sprintf^(0+128)
  1403  005D  0831               	movf	??_sprintf^(0+128),w
  1404  005E  00BA               	movwf	sprintf@ap^(0+128)
  1405                           
  1406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1407  005F  2FBC               	goto	l3470
  1408  0060                     l3222:	
  1409                           
  1410                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1411  0060  3025               	movlw	37
  1412  0061  0650               	xorwf	sprintf@c^(0+128),w
  1413  0062  1903               	btfsc	3,2
  1414  0063  2865               	goto	u5561
  1415  0064  2866               	goto	u5560
  1416  0065                     u5561:	
  1417  0065  2872               	goto	l3228
  1418  0066                     u5560:	
  1419  0066                     l3224:	
  1420                           
  1421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1422  0066  0850               	movf	sprintf@c^(0+128),w
  1423  0067  00B1               	movwf	??_sprintf^(0+128)
  1424  0068  084D               	movf	sprintf@sp^(0+128),w
  1425  0069  0084               	movwf	4
  1426  006A  0831               	movf	??_sprintf^(0+128),w
  1427  006B  1383               	bcf	3,7	;select IRP bank0
  1428  006C  0080               	movwf	0
  1429  006D                     l3226:	
  1430  006D  3001               	movlw	1
  1431  006E  00B1               	movwf	??_sprintf^(0+128)
  1432  006F  0831               	movf	??_sprintf^(0+128),w
  1433  0070  07CD               	addwf	sprintf@sp^(0+128),f
  1434                           
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1436  0071  2FBC               	goto	l3470
  1437  0072                     l3228:	
  1438                           
  1439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  1440  0072  01C1               	clrf	sprintf@width^(0+128)
  1441  0073  01C2               	clrf	(sprintf@width+1)^(0+128)
  1442                           
  1443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1444  0074  01BF               	clrf	sprintf@flag^(0+128)
  1445  0075  01C0               	clrf	(sprintf@flag+1)^(0+128)
  1446  0076                     l3230:	
  1447                           
  1448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  1449  0076  082C               	movf	sprintf@f^(0+128),w
  1450  0077  0084               	movwf	4
  1451  0078  160A  118A  2000  120A  118A  	fcall	stringdir
  1452  007D  160A  158A  235C  120A  118A  	fcall	_isdigit
  1453  0082  1C03               	btfss	3,0
  1454  0083  2885               	goto	u5571
  1455  0084  2886               	goto	u5570
  1456  0085                     u5571:	
  1457  0085  28C6               	goto	l3242
  1458  0086                     u5570:	
  1459  0086                     l3232:	
  1460                           
  1461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  1462  0086  1683               	bsf	3,5	;RP0=1, select bank1
  1463  0087  1303               	bcf	3,6	;RP1=0, select bank1
  1464  0088  01C1               	clrf	sprintf@width^(0+128)
  1465  0089  01C2               	clrf	(sprintf@width+1)^(0+128)
  1466  008A                     l3234:	
  1467                           
  1468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  1469  008A  300A               	movlw	10
  1470  008B  00F0               	movwf	___wmul@multiplier
  1471  008C  3000               	movlw	0
  1472  008D  00F1               	movwf	___wmul@multiplier+1
  1473  008E  1683               	bsf	3,5	;RP0=1, select bank1
  1474  008F  1303               	bcf	3,6	;RP1=0, select bank1
  1475  0090  0842               	movf	(sprintf@width+1)^(0+128),w
  1476  0091  00F3               	movwf	___wmul@multiplicand+1
  1477  0092  0841               	movf	sprintf@width^(0+128),w
  1478  0093  00F2               	movwf	___wmul@multiplicand
  1479  0094  160A  158A  2458  120A  118A  	fcall	___wmul
  1480  0099  0871               	movf	?___wmul+1,w
  1481  009A  1683               	bsf	3,5	;RP0=1, select bank1
  1482  009B  1303               	bcf	3,6	;RP1=0, select bank1
  1483  009C  00C2               	movwf	(sprintf@width+1)^(0+128)
  1484  009D  0870               	movf	?___wmul,w
  1485  009E  00C1               	movwf	sprintf@width^(0+128)
  1486  009F                     l3236:	
  1487                           
  1488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  1489  009F  082C               	movf	sprintf@f^(0+128),w
  1490  00A0  0084               	movwf	4
  1491  00A1  160A  118A  2000  120A  118A  	fcall	stringdir
  1492  00A6  3ED0               	addlw	208
  1493  00A7  00B1               	movwf	??_sprintf^(0+128)
  1494  00A8  30FF               	movlw	255
  1495  00A9  1803               	skipnc
  1496  00AA  3000               	movlw	0
  1497  00AB  00B2               	movwf	(??_sprintf^(0+128)+1)
  1498  00AC  0831               	movf	??_sprintf^(0+128),w
  1499  00AD  07C1               	addwf	sprintf@width^(0+128),f
  1500  00AE  1803               	skipnc
  1501  00AF  0AC2               	incf	(sprintf@width+1)^(0+128),f
  1502  00B0  0832               	movf	(??_sprintf+1)^(0+128),w
  1503  00B1  07C2               	addwf	(sprintf@width+1)^(0+128),f
  1504  00B2                     l3238:	
  1505  00B2  3001               	movlw	1
  1506  00B3  00B1               	movwf	??_sprintf^(0+128)
  1507  00B4  0831               	movf	??_sprintf^(0+128),w
  1508  00B5  07AC               	addwf	sprintf@f^(0+128),f
  1509  00B6                     l3240:	
  1510                           
  1511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  1512  00B6  082C               	movf	sprintf@f^(0+128),w
  1513  00B7  0084               	movwf	4
  1514  00B8  160A  118A  2000  120A  118A  	fcall	stringdir
  1515  00BD  160A  158A  235C  120A  118A  	fcall	_isdigit
  1516  00C2  1803               	btfsc	3,0
  1517  00C3  28C5               	goto	u5581
  1518  00C4  28C6               	goto	u5580
  1519  00C5                     u5581:	
  1520  00C5  288A               	goto	l3234
  1521  00C6                     u5580:	
  1522  00C6                     l3242:	
  1523                           
  1524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1525  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1526  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1527  00C8  082C               	movf	sprintf@f^(0+128),w
  1528  00C9  0084               	movwf	4
  1529  00CA  160A  118A  2000  120A  118A  	fcall	stringdir
  1530  00CF  3A2E               	xorlw	46
  1531  00D0  1D03               	skipz
  1532  00D1  28D3               	goto	u5591
  1533  00D2  28D4               	goto	u5590
  1534  00D3                     u5591:	
  1535  00D3  2919               	goto	l3258
  1536  00D4                     u5590:	
  1537  00D4                     l3244:	
  1538                           
  1539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1540  00D4  1740               	bsf	(sprintf@flag^(0+128)+1),6
  1541  00D5                     l3246:	
  1542                           
  1543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1544  00D5  3001               	movlw	1
  1545  00D6  00B1               	movwf	??_sprintf^(0+128)
  1546  00D7  0831               	movf	??_sprintf^(0+128),w
  1547  00D8  07AC               	addwf	sprintf@f^(0+128),f
  1548  00D9                     l3248:	
  1549                           
  1550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1551  00D9  01CE               	clrf	sprintf@prec^(0+128)
  1552  00DA  01CF               	clrf	(sprintf@prec+1)^(0+128)
  1553                           
  1554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1555  00DB  2908               	goto	l3256
  1556  00DC                     l3250:	
  1557                           
  1558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1559  00DC  300A               	movlw	10
  1560  00DD  00F0               	movwf	___wmul@multiplier
  1561  00DE  3000               	movlw	0
  1562  00DF  00F1               	movwf	___wmul@multiplier+1
  1563  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1564  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1565  00E2  084F               	movf	(sprintf@prec+1)^(0+128),w
  1566  00E3  00F3               	movwf	___wmul@multiplicand+1
  1567  00E4  084E               	movf	sprintf@prec^(0+128),w
  1568  00E5  00F2               	movwf	___wmul@multiplicand
  1569  00E6  160A  158A  2458  120A  118A  	fcall	___wmul
  1570  00EB  0871               	movf	?___wmul+1,w
  1571  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1572  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1573  00EE  00CF               	movwf	(sprintf@prec+1)^(0+128)
  1574  00EF  0870               	movf	?___wmul,w
  1575  00F0  00CE               	movwf	sprintf@prec^(0+128)
  1576  00F1                     l3252:	
  1577                           
  1578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1579  00F1  082C               	movf	sprintf@f^(0+128),w
  1580  00F2  0084               	movwf	4
  1581  00F3  160A  118A  2000  120A  118A  	fcall	stringdir
  1582  00F8  3ED0               	addlw	208
  1583  00F9  00B1               	movwf	??_sprintf^(0+128)
  1584  00FA  30FF               	movlw	255
  1585  00FB  1803               	skipnc
  1586  00FC  3000               	movlw	0
  1587  00FD  00B2               	movwf	(??_sprintf^(0+128)+1)
  1588  00FE  0831               	movf	??_sprintf^(0+128),w
  1589  00FF  07CE               	addwf	sprintf@prec^(0+128),f
  1590  0100  1803               	skipnc
  1591  0101  0ACF               	incf	(sprintf@prec+1)^(0+128),f
  1592  0102  0832               	movf	(??_sprintf+1)^(0+128),w
  1593  0103  07CF               	addwf	(sprintf@prec+1)^(0+128),f
  1594  0104                     l3254:	
  1595  0104  3001               	movlw	1
  1596  0105  00B1               	movwf	??_sprintf^(0+128)
  1597  0106  0831               	movf	??_sprintf^(0+128),w
  1598  0107  07AC               	addwf	sprintf@f^(0+128),f
  1599  0108                     l3256:	
  1600                           
  1601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1602  0108  082C               	movf	sprintf@f^(0+128),w
  1603  0109  0084               	movwf	4
  1604  010A  160A  118A  2000  120A  118A  	fcall	stringdir
  1605  010F  160A  158A  235C  120A  118A  	fcall	_isdigit
  1606  0114  1803               	btfsc	3,0
  1607  0115  2917               	goto	u5601
  1608  0116  2918               	goto	u5600
  1609  0117                     u5601:	
  1610  0117  28DC               	goto	l3250
  1611  0118                     u5600:	
  1612  0118  291F               	goto	l3264
  1613  0119                     l3258:	
  1614                           
  1615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  1616  0119  01CE               	clrf	sprintf@prec^(0+128)
  1617  011A  01CF               	clrf	(sprintf@prec+1)^(0+128)
  1618  011B                     l3260:	
  1619                           
  1620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  1621  011B  1640               	bsf	(sprintf@flag^(0+128)+1),4
  1622  011C  291F               	goto	l3264
  1623  011D                     l312:	
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  1625                           
  1626                           
  1627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  1628  011D  1540               	bsf	(sprintf@flag^(0+128)+1),2
  1629                           
  1630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  1631  011E  293B               	goto	l3266
  1632  011F                     l3264:	
  1633  011F  3001               	movlw	1
  1634  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0122  07AC               	addwf	sprintf@f^(0+128),f
  1637  0123  30FF               	movlw	-1
  1638  0124  072C               	addwf	sprintf@f^(0+128),w
  1639  0125  0084               	movwf	4
  1640  0126  160A  118A  2000  120A  118A  	fcall	stringdir
  1641  012B  00D0               	movwf	sprintf@c^(0+128)
  1642  012C  00B1               	movwf	??_sprintf^(0+128)
  1643  012D  01B2               	clrf	(??_sprintf^(0+128)+1)
  1644                           
  1645                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1646                           ; Switch size 1, requested type "simple"
  1647                           ; Number of cases is 1, Range of values is 0 to 0
  1648                           ; switch strategies available:
  1649                           ; Name         Instructions Cycles
  1650                           ; simple_byte            4     3 (average)
  1651                           ; direct_byte           11     8 (fixed)
  1652                           ; jumptable            260     6 (fixed)
  1653                           ;	Chosen strategy is simple_byte
  1654  012E  0832               	movf	(??_sprintf+1)^(0+128),w
  1655  012F  3A00               	xorlw	0	; case 0
  1656  0130  1903               	skipnz
  1657  0131  2933               	goto	l3546
  1658  0132  2FBC               	goto	l3470
  1659  0133                     l3546:	
  1660                           
  1661                           ; Switch size 1, requested type "simple"
  1662                           ; Number of cases is 2, Range of values is 0 to 102
  1663                           ; switch strategies available:
  1664                           ; Name         Instructions Cycles
  1665                           ; simple_byte            7     4 (average)
  1666                           ; jumptable            260     6 (fixed)
  1667                           ;	Chosen strategy is simple_byte
  1668  0133  0831               	movf	??_sprintf^(0+128),w
  1669  0134  3A00               	xorlw	0	; case 0
  1670  0135  1903               	skipnz
  1671  0136  2FCE               	goto	l3472
  1672  0137  3A66               	xorlw	102	; case 102
  1673  0138  1903               	skipnz
  1674  0139  291D               	goto	l312
  1675  013A  2FBC               	goto	l3470
  1676  013B                     l3266:	
  1677                           
  1678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  1679  013B  3000               	movlw	0
  1680  013C  053F               	andwf	sprintf@flag^(0+128),w
  1681  013D  00B1               	movwf	??_sprintf^(0+128)
  1682  013E  3007               	movlw	7
  1683  013F  0540               	andwf	(sprintf@flag+1)^(0+128),w
  1684  0140  00B2               	movwf	(??_sprintf+1)^(0+128)
  1685  0141  0831               	movf	??_sprintf^(0+128),w
  1686  0142  0432               	iorwf	(??_sprintf^(0+128)+1),w
  1687  0143  1903               	btfsc	3,2
  1688  0144  2946               	goto	u5611
  1689  0145  2947               	goto	u5610
  1690  0146                     u5611:	
  1691  0146  2EF9               	goto	l3424
  1692  0147                     u5610:	
  1693  0147                     l3268:	
  1694                           
  1695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  1696  0147  1E40               	btfss	(sprintf@flag+1)^(0+128),4
  1697  0148  294A               	goto	u5621
  1698  0149  294B               	goto	u5620
  1699  014A                     u5621:	
  1700  014A  294F               	goto	l3272
  1701  014B                     u5620:	
  1702  014B                     l3270:	
  1703                           
  1704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  1705  014B  3006               	movlw	6
  1706  014C  00CE               	movwf	sprintf@prec^(0+128)
  1707  014D  3000               	movlw	0
  1708  014E  00CF               	movwf	(sprintf@prec^(0+128)+1)
  1709  014F                     l3272:	
  1710                           
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1712  014F  083A               	movf	sprintf@ap^(0+128),w
  1713  0150  0084               	movwf	4
  1714  0151  1383               	bcf	3,7	;select IRP bank0
  1715  0152  0800               	movf	0,w
  1716  0153  00C9               	movwf	sprintf@fval^(0+128)
  1717  0154  0A84               	incf	4,f
  1718  0155  0800               	movf	0,w
  1719  0156  00CA               	movwf	(sprintf@fval+1)^(0+128)
  1720  0157  0A84               	incf	4,f
  1721  0158  0800               	movf	0,w
  1722  0159  00CB               	movwf	(sprintf@fval+2)^(0+128)
  1723  015A  0A84               	incf	4,f
  1724  015B  0800               	movf	0,w
  1725  015C  00CC               	movwf	(sprintf@fval+3)^(0+128)
  1726  015D                     l3274:	
  1727  015D  3004               	movlw	4
  1728  015E  00B1               	movwf	??_sprintf^(0+128)
  1729  015F  0831               	movf	??_sprintf^(0+128),w
  1730  0160  07BA               	addwf	sprintf@ap^(0+128),f
  1731  0161                     l3276:	
  1732                           
  1733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  1734  0161  084C               	movf	(sprintf@fval+3)^(0+128),w
  1735  0162  00F3               	movwf	___flge@ff1+3
  1736  0163  084B               	movf	(sprintf@fval+2)^(0+128),w
  1737  0164  00F2               	movwf	___flge@ff1+2
  1738  0165  084A               	movf	(sprintf@fval+1)^(0+128),w
  1739  0166  00F1               	movwf	___flge@ff1+1
  1740  0167  0849               	movf	sprintf@fval^(0+128),w
  1741  0168  00F0               	movwf	___flge@ff1
  1742  0169  3000               	movlw	0
  1743  016A  00F7               	movwf	___flge@ff2+3
  1744  016B  3000               	movlw	0
  1745  016C  00F6               	movwf	___flge@ff2+2
  1746  016D  3000               	movlw	0
  1747  016E  00F5               	movwf	___flge@ff2+1
  1748  016F  3000               	movlw	0
  1749  0170  00F4               	movwf	___flge@ff2
  1750  0171  160A  118A  2154  120A  118A  	fcall	___flge
  1751  0176  1803               	btfsc	3,0
  1752  0177  2979               	goto	u5631
  1753  0178  297A               	goto	u5630
  1754  0179                     u5631:	
  1755  0179  2997               	goto	l3282
  1756  017A                     u5630:	
  1757  017A                     l3278:	
  1758                           
  1759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  1760  017A  1683               	bsf	3,5	;RP0=1, select bank1
  1761  017B  1303               	bcf	3,6	;RP1=0, select bank1
  1762  017C  084C               	movf	(sprintf@fval+3)^(0+128),w
  1763  017D  00F3               	movwf	___flneg@f1+3
  1764  017E  084B               	movf	(sprintf@fval+2)^(0+128),w
  1765  017F  00F2               	movwf	___flneg@f1+2
  1766  0180  084A               	movf	(sprintf@fval+1)^(0+128),w
  1767  0181  00F1               	movwf	___flneg@f1+1
  1768  0182  0849               	movf	sprintf@fval^(0+128),w
  1769  0183  00F0               	movwf	___flneg@f1
  1770  0184  160A  158A  2342  120A  118A  	fcall	___flneg
  1771  0189  0873               	movf	?___flneg+3,w
  1772  018A  1683               	bsf	3,5	;RP0=1, select bank1
  1773  018B  1303               	bcf	3,6	;RP1=0, select bank1
  1774  018C  00CC               	movwf	(sprintf@fval+3)^(0+128)
  1775  018D  0872               	movf	?___flneg+2,w
  1776  018E  00CB               	movwf	(sprintf@fval+2)^(0+128)
  1777  018F  0871               	movf	?___flneg+1,w
  1778  0190  00CA               	movwf	(sprintf@fval+1)^(0+128)
  1779  0191  0870               	movf	?___flneg,w
  1780  0192  00C9               	movwf	sprintf@fval^(0+128)
  1781  0193                     l3280:	
  1782                           
  1783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  1784  0193  3003               	movlw	3
  1785  0194  04BF               	iorwf	sprintf@flag^(0+128),f
  1786  0195  3000               	movlw	0
  1787  0196  04C0               	iorwf	(sprintf@flag+1)^(0+128),f
  1788  0197                     l3282:	
  1789                           
  1790                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  1791  0197  1683               	bsf	3,5	;RP0=1, select bank1
  1792  0198  1303               	bcf	3,6	;RP1=0, select bank1
  1793  0199  01C7               	clrf	sprintf@eexp^(0+128)
  1794  019A  01C8               	clrf	(sprintf@eexp+1)^(0+128)
  1795  019B                     l3284:	
  1796                           
  1797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  1798  019B  084C               	movf	(sprintf@fval+3)^(0+128),w
  1799  019C  00F3               	movwf	___fleq@ff1+3
  1800  019D  084B               	movf	(sprintf@fval+2)^(0+128),w
  1801  019E  00F2               	movwf	___fleq@ff1+2
  1802  019F  084A               	movf	(sprintf@fval+1)^(0+128),w
  1803  01A0  00F1               	movwf	___fleq@ff1+1
  1804  01A1  0849               	movf	sprintf@fval^(0+128),w
  1805  01A2  00F0               	movwf	___fleq@ff1
  1806  01A3  3000               	movlw	0
  1807  01A4  00F7               	movwf	___fleq@ff2+3
  1808  01A5  3000               	movlw	0
  1809  01A6  00F6               	movwf	___fleq@ff2+2
  1810  01A7  3000               	movlw	0
  1811  01A8  00F5               	movwf	___fleq@ff2+1
  1812  01A9  3000               	movlw	0
  1813  01AA  00F4               	movwf	___fleq@ff2
  1814  01AB  160A  158A  254A  120A  118A  	fcall	___fleq
  1815  01B0  1803               	btfsc	3,0
  1816  01B1  29B3               	goto	u5641
  1817  01B2  29B4               	goto	u5640
  1818  01B3                     u5641:	
  1819  01B3  2AA4               	goto	l3310
  1820  01B4                     u5640:	
  1821  01B4                     l3286:	
  1822                           
  1823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1824  01B4  1003               	clrc
  1825  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1826  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1827  01B7  0D4B               	rlf	(sprintf@fval+2)^(0+128),w
  1828  01B8  0D4C               	rlf	(sprintf@fval+3)^(0+128),w
  1829  01B9  3E82               	addlw	130
  1830  01BA  00C7               	movwf	sprintf@eexp^(0+128)
  1831  01BB  30FF               	movlw	255
  1832  01BC  1803               	skipnc
  1833  01BD  3000               	movlw	0
  1834  01BE  00C8               	movwf	(sprintf@eexp^(0+128)+1)
  1835  01BF                     l3288:	
  1836                           
  1837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  1838  01BF  30FF               	movlw	255
  1839  01C0  07C7               	addwf	sprintf@eexp^(0+128),f
  1840  01C1  1803               	skipnc
  1841  01C2  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  1842  01C3  30FF               	movlw	255
  1843  01C4  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  1844  01C5                     l3290:	
  1845                           
  1846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  1847  01C5  3003               	movlw	3
  1848  01C6  00F0               	movwf	___wmul@multiplier
  1849  01C7  3000               	movlw	0
  1850  01C8  00F1               	movwf	___wmul@multiplier+1
  1851  01C9  0848               	movf	(sprintf@eexp+1)^(0+128),w
  1852  01CA  00F3               	movwf	___wmul@multiplicand+1
  1853  01CB  0847               	movf	sprintf@eexp^(0+128),w
  1854  01CC  00F2               	movwf	___wmul@multiplicand
  1855  01CD  160A  158A  2458  120A  118A  	fcall	___wmul
  1856  01D2  0871               	movf	?___wmul+1,w
  1857  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1858  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1859  01D5  00C8               	movwf	(sprintf@eexp+1)^(0+128)
  1860  01D6  0870               	movf	?___wmul,w
  1861  01D7  00C7               	movwf	sprintf@eexp^(0+128)
  1862  01D8                     l3292:	
  1863                           
  1864                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  1865  01D8  300A               	movlw	10
  1866  01D9  00F7               	movwf	___awdiv@divisor
  1867  01DA  3000               	movlw	0
  1868  01DB  00F8               	movwf	___awdiv@divisor+1
  1869  01DC  0848               	movf	(sprintf@eexp+1)^(0+128),w
  1870  01DD  00FA               	movwf	___awdiv@dividend+1
  1871  01DE  0847               	movf	sprintf@eexp^(0+128),w
  1872  01DF  00F9               	movwf	___awdiv@dividend
  1873  01E0  160A  158A  271D  120A  118A  	fcall	___awdiv
  1874  01E5  0878               	movf	?___awdiv+1,w
  1875  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1876  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1877  01E8  00C8               	movwf	(sprintf@eexp+1)^(0+128)
  1878  01E9  0877               	movf	?___awdiv,w
  1879  01EA  00C7               	movwf	sprintf@eexp^(0+128)
  1880  01EB                     l3294:	
  1881                           
  1882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  1883  01EB  1FC8               	btfss	(sprintf@eexp+1)^(0+128),7
  1884  01EC  29EE               	goto	u5651
  1885  01ED  29EF               	goto	u5650
  1886  01EE                     u5651:	
  1887  01EE  29F5               	goto	l3298
  1888  01EF                     u5650:	
  1889  01EF                     l3296:	
  1890                           
  1891                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  1892  01EF  30FF               	movlw	255
  1893  01F0  07C7               	addwf	sprintf@eexp^(0+128),f
  1894  01F1  1803               	skipnc
  1895  01F2  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  1896  01F3  30FF               	movlw	255
  1897  01F4  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  1898  01F5                     l3298:	
  1899                           
  1900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  1901  01F5  0347               	decf	sprintf@eexp^(0+128),w
  1902  01F6  3AFF               	xorlw	255
  1903  01F7  120A  158A  2140  120A  118A  	fcall	_scale
  1904  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1905  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1906  01FE  0841               	movf	?_scale+3,w
  1907  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0200  1303               	bcf	3,6	;RP1=0, select bank1
  1909  0201  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  1910  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0204  0840               	movf	?_scale+2,w
  1913  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1914  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1915  0207  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  1916  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1918  020A  083F               	movf	?_scale+1,w
  1919  020B  1683               	bsf	3,5	;RP0=1, select bank1
  1920  020C  1303               	bcf	3,6	;RP1=0, select bank1
  1921  020D  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  1922  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1923  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0210  083E               	movf	?_scale,w
  1925  0211  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0212  1303               	bcf	3,6	;RP1=0, select bank1
  1927  0213  00C3               	movwf	sprintf@tmpval^(0+128)
  1928  0214                     l3300:	
  1929                           
  1930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  1931  0214  084C               	movf	(sprintf@fval+3)^(0+128),w
  1932  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0217  00A7               	movwf	___flmul@b+3
  1935  0218  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0219  1303               	bcf	3,6	;RP1=0, select bank1
  1937  021A  084B               	movf	(sprintf@fval+2)^(0+128),w
  1938  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1939  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1940  021D  00A6               	movwf	___flmul@b+2
  1941  021E  1683               	bsf	3,5	;RP0=1, select bank1
  1942  021F  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0220  084A               	movf	(sprintf@fval+1)^(0+128),w
  1944  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0223  00A5               	movwf	___flmul@b+1
  1947  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1948  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1949  0226  0849               	movf	sprintf@fval^(0+128),w
  1950  0227  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0228  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0229  00A4               	movwf	___flmul@b
  1953  022A  1683               	bsf	3,5	;RP0=1, select bank1
  1954  022B  1303               	bcf	3,6	;RP1=0, select bank1
  1955  022C  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  1956  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1957  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1958  022F  00AB               	movwf	___flmul@a+3
  1959  0230  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0231  1303               	bcf	3,6	;RP1=0, select bank1
  1961  0232  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  1962  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0235  00AA               	movwf	___flmul@a+2
  1965  0236  1683               	bsf	3,5	;RP0=1, select bank1
  1966  0237  1303               	bcf	3,6	;RP1=0, select bank1
  1967  0238  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  1968  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1969  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1970  023B  00A9               	movwf	___flmul@a+1
  1971  023C  1683               	bsf	3,5	;RP0=1, select bank1
  1972  023D  1303               	bcf	3,6	;RP1=0, select bank1
  1973  023E  0843               	movf	sprintf@tmpval^(0+128),w
  1974  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1975  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1976  0241  00A8               	movwf	___flmul@a
  1977  0242  120A  158A  249F  120A  118A  	fcall	___flmul
  1978  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0249  0827               	movf	?___flmul+3,w
  1981  024A  1683               	bsf	3,5	;RP0=1, select bank1
  1982  024B  1303               	bcf	3,6	;RP1=0, select bank1
  1983  024C  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  1984  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1985  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1986  024F  0826               	movf	?___flmul+2,w
  1987  0250  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0251  1303               	bcf	3,6	;RP1=0, select bank1
  1989  0252  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  1990  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0255  0825               	movf	?___flmul+1,w
  1993  0256  1683               	bsf	3,5	;RP0=1, select bank1
  1994  0257  1303               	bcf	3,6	;RP1=0, select bank1
  1995  0258  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  1996  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1997  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1998  025B  0824               	movf	?___flmul,w
  1999  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2000  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2001  025E  00C3               	movwf	sprintf@tmpval^(0+128)
  2002  025F                     l3302:	
  2003                           
  2004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2005  025F  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2006  0260  00F3               	movwf	___flge@ff1+3
  2007  0261  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2008  0262  00F2               	movwf	___flge@ff1+2
  2009  0263  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2010  0264  00F1               	movwf	___flge@ff1+1
  2011  0265  0843               	movf	sprintf@tmpval^(0+128),w
  2012  0266  00F0               	movwf	___flge@ff1
  2013  0267  303F               	movlw	63
  2014  0268  00F7               	movwf	___flge@ff2+3
  2015  0269  3080               	movlw	128
  2016  026A  00F6               	movwf	___flge@ff2+2
  2017  026B  3000               	movlw	0
  2018  026C  00F5               	movwf	___flge@ff2+1
  2019  026D  3000               	movlw	0
  2020  026E  00F4               	movwf	___flge@ff2
  2021  026F  160A  118A  2154  120A  118A  	fcall	___flge
  2022  0274  1803               	btfsc	3,0
  2023  0275  2A77               	goto	u5661
  2024  0276  2A78               	goto	u5660
  2025  0277                     u5661:	
  2026  0277  2A81               	goto	l3306
  2027  0278                     u5660:	
  2028  0278                     l3304:	
  2029                           
  2030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2031  0278  30FF               	movlw	255
  2032  0279  1683               	bsf	3,5	;RP0=1, select bank1
  2033  027A  1303               	bcf	3,6	;RP1=0, select bank1
  2034  027B  07C7               	addwf	sprintf@eexp^(0+128),f
  2035  027C  1803               	skipnc
  2036  027D  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2037  027E  30FF               	movlw	255
  2038  027F  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2039  0280  2AA4               	goto	l3310
  2040  0281                     l3306:	
  2041  0281  1683               	bsf	3,5	;RP0=1, select bank1
  2042  0282  1303               	bcf	3,6	;RP1=0, select bank1
  2043  0283  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2044  0284  00F3               	movwf	___flge@ff1+3
  2045  0285  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2046  0286  00F2               	movwf	___flge@ff1+2
  2047  0287  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2048  0288  00F1               	movwf	___flge@ff1+1
  2049  0289  0843               	movf	sprintf@tmpval^(0+128),w
  2050  028A  00F0               	movwf	___flge@ff1
  2051  028B  3041               	movlw	65
  2052  028C  00F7               	movwf	___flge@ff2+3
  2053  028D  3020               	movlw	32
  2054  028E  00F6               	movwf	___flge@ff2+2
  2055  028F  3000               	movlw	0
  2056  0290  00F5               	movwf	___flge@ff2+1
  2057  0291  3000               	movlw	0
  2058  0292  00F4               	movwf	___flge@ff2
  2059  0293  160A  118A  2154  120A  118A  	fcall	___flge
  2060  0298  1C03               	btfss	3,0
  2061  0299  2A9B               	goto	u5671
  2062  029A  2A9C               	goto	u5670
  2063  029B                     u5671:	
  2064  029B  2AA4               	goto	l3310
  2065  029C                     u5670:	
  2066  029C                     l3308:	
  2067                           
  2068                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2069  029C  3001               	movlw	1
  2070  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2071  029E  1303               	bcf	3,6	;RP1=0, select bank1
  2072  029F  07C7               	addwf	sprintf@eexp^(0+128),f
  2073  02A0  1803               	skipnc
  2074  02A1  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2075  02A2  3000               	movlw	0
  2076  02A3  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2077  02A4                     l3310:	
  2078                           
  2079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2080  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2081  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  2082  02A6  084F               	movf	(sprintf@prec+1)^(0+128),w
  2083  02A7  3A80               	xorlw	128
  2084  02A8  00FF               	movwf	btemp+1
  2085  02A9  3080               	movlw	128
  2086  02AA  027F               	subwf	btemp+1,w
  2087  02AB  1D03               	skipz
  2088  02AC  2AAF               	goto	u5685
  2089  02AD  300D               	movlw	13
  2090  02AE  024E               	subwf	sprintf@prec^(0+128),w
  2091  02AF                     u5685:	
  2092  02AF  1803               	skipnc
  2093  02B0  2AB2               	goto	u5681
  2094  02B1  2AB3               	goto	u5680
  2095  02B2                     u5681:	
  2096  02B2  2AFA               	goto	l3314
  2097  02B3                     u5680:	
  2098  02B3                     l3312:	
  2099                           
  2100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2101  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  2102  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  2103  02B5  084E               	movf	sprintf@prec^(0+128),w
  2104  02B6  160A  118A  236D  120A  118A  	fcall	_fround
  2105  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2106  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2107  02BD  0841               	movf	?_fround+3,w
  2108  02BE  00D5               	movwf	___fladd@b+3
  2109  02BF  0840               	movf	?_fround+2,w
  2110  02C0  00D4               	movwf	___fladd@b+2
  2111  02C1  083F               	movf	?_fround+1,w
  2112  02C2  00D3               	movwf	___fladd@b+1
  2113  02C3  083E               	movf	?_fround,w
  2114  02C4  00D2               	movwf	___fladd@b
  2115  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2116  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2117  02C7  084C               	movf	(sprintf@fval+3)^(0+128),w
  2118  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2119  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2120  02CA  00D9               	movwf	___fladd@a+3
  2121  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2122  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  2123  02CD  084B               	movf	(sprintf@fval+2)^(0+128),w
  2124  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2125  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2126  02D0  00D8               	movwf	___fladd@a+2
  2127  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2128  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  2129  02D3  084A               	movf	(sprintf@fval+1)^(0+128),w
  2130  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2131  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2132  02D6  00D7               	movwf	___fladd@a+1
  2133  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  2134  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  2135  02D9  0849               	movf	sprintf@fval^(0+128),w
  2136  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  2137  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  2138  02DC  00D6               	movwf	___fladd@a
  2139  02DD  160A  118A  2578  120A  118A  	fcall	___fladd
  2140  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2141  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2142  02E4  0855               	movf	?___fladd+3,w
  2143  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2144  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2145  02E7  00CC               	movwf	(sprintf@fval+3)^(0+128)
  2146  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2147  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2148  02EA  0854               	movf	?___fladd+2,w
  2149  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2150  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2151  02ED  00CB               	movwf	(sprintf@fval+2)^(0+128)
  2152  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2153  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2154  02F0  0853               	movf	?___fladd+1,w
  2155  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2156  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2157  02F3  00CA               	movwf	(sprintf@fval+1)^(0+128)
  2158  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2159  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2160  02F6  0852               	movf	?___fladd,w
  2161  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2162  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2163  02F9  00C9               	movwf	sprintf@fval^(0+128)
  2164  02FA                     l3314:	
  2165                           
  2166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2167  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2168  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  2169  02FC  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2170  02FD  3A80               	xorlw	128
  2171  02FE  00FF               	movwf	btemp+1
  2172  02FF  3080               	movlw	128
  2173  0300  027F               	subwf	btemp+1,w
  2174  0301  1D03               	skipz
  2175  0302  2B05               	goto	u5695
  2176  0303  300A               	movlw	10
  2177  0304  0247               	subwf	sprintf@eexp^(0+128),w
  2178  0305                     u5695:	
  2179  0305  1803               	skipnc
  2180  0306  2B08               	goto	u5691
  2181  0307  2B09               	goto	u5690
  2182  0308                     u5691:	
  2183  0308  2B5A               	goto	l3322
  2184  0309                     u5690:	
  2185  0309                     l3316:	
  2186  0309  1683               	bsf	3,5	;RP0=1, select bank1
  2187  030A  1303               	bcf	3,6	;RP1=0, select bank1
  2188  030B  084C               	movf	(sprintf@fval+3)^(0+128),w
  2189  030C  00F3               	movwf	___fleq@ff1+3
  2190  030D  084B               	movf	(sprintf@fval+2)^(0+128),w
  2191  030E  00F2               	movwf	___fleq@ff1+2
  2192  030F  084A               	movf	(sprintf@fval+1)^(0+128),w
  2193  0310  00F1               	movwf	___fleq@ff1+1
  2194  0311  0849               	movf	sprintf@fval^(0+128),w
  2195  0312  00F0               	movwf	___fleq@ff1
  2196  0313  3000               	movlw	0
  2197  0314  00F7               	movwf	___fleq@ff2+3
  2198  0315  3000               	movlw	0
  2199  0316  00F6               	movwf	___fleq@ff2+2
  2200  0317  3000               	movlw	0
  2201  0318  00F5               	movwf	___fleq@ff2+1
  2202  0319  3000               	movlw	0
  2203  031A  00F4               	movwf	___fleq@ff2
  2204  031B  160A  158A  254A  120A  118A  	fcall	___fleq
  2205  0320  1803               	btfsc	3,0
  2206  0321  2B23               	goto	u5701
  2207  0322  2B24               	goto	u5700
  2208  0323                     u5701:	
  2209  0323  2BCC               	goto	l3336
  2210  0324                     u5700:	
  2211  0324                     l3318:	
  2212  0324  1683               	bsf	3,5	;RP0=1, select bank1
  2213  0325  1303               	bcf	3,6	;RP1=0, select bank1
  2214  0326  084C               	movf	(sprintf@fval+3)^(0+128),w
  2215  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0329  00D4               	movwf	___fltol@f1+3
  2218  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2219  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2220  032C  084B               	movf	(sprintf@fval+2)^(0+128),w
  2221  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2222  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2223  032F  00D3               	movwf	___fltol@f1+2
  2224  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2225  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2226  0332  084A               	movf	(sprintf@fval+1)^(0+128),w
  2227  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0335  00D2               	movwf	___fltol@f1+1
  2230  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2231  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2232  0338  0849               	movf	sprintf@fval^(0+128),w
  2233  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2234  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2235  033B  00D1               	movwf	___fltol@f1
  2236  033C  120A  158A  2006  120A  118A  	fcall	___fltol
  2237  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0343  0854               	movf	?___fltol+3,w
  2240  0344  0453               	iorwf	?___fltol+2,w
  2241  0345  0452               	iorwf	?___fltol+1,w
  2242  0346  0451               	iorwf	?___fltol,w
  2243  0347  1D03               	skipz
  2244  0348  2B4A               	goto	u5711
  2245  0349  2B4B               	goto	u5710
  2246  034A                     u5711:	
  2247  034A  2BCC               	goto	l3336
  2248  034B                     u5710:	
  2249  034B                     l3320:	
  2250  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2251  034C  1303               	bcf	3,6	;RP1=0, select bank1
  2252  034D  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2253  034E  3A80               	xorlw	128
  2254  034F  00FF               	movwf	btemp+1
  2255  0350  3080               	movlw	128
  2256  0351  027F               	subwf	btemp+1,w
  2257  0352  1D03               	skipz
  2258  0353  2B56               	goto	u5725
  2259  0354  3002               	movlw	2
  2260  0355  0247               	subwf	sprintf@eexp^(0+128),w
  2261  0356                     u5725:	
  2262  0356  1C03               	skipc
  2263  0357  2B59               	goto	u5721
  2264  0358  2B5A               	goto	u5720
  2265  0359                     u5721:	
  2266  0359  2BCC               	goto	l3336
  2267  035A                     u5720:	
  2268  035A                     l3322:	
  2269                           
  2270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2271  035A  1683               	bsf	3,5	;RP0=1, select bank1
  2272  035B  1303               	bcf	3,6	;RP1=0, select bank1
  2273  035C  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2274  035D  00F3               	movwf	___flge@ff1+3
  2275  035E  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2276  035F  00F2               	movwf	___flge@ff1+2
  2277  0360  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2278  0361  00F1               	movwf	___flge@ff1+1
  2279  0362  0843               	movf	sprintf@tmpval^(0+128),w
  2280  0363  00F0               	movwf	___flge@ff1
  2281  0364  3040               	movlw	64
  2282  0365  00F7               	movwf	___flge@ff2+3
  2283  0366  3089               	movlw	137
  2284  0367  00F6               	movwf	___flge@ff2+2
  2285  0368  3070               	movlw	112
  2286  0369  00F5               	movwf	___flge@ff2+1
  2287  036A  305F               	movlw	95
  2288  036B  00F4               	movwf	___flge@ff2
  2289  036C  160A  118A  2154  120A  118A  	fcall	___flge
  2290  0371  1803               	btfsc	3,0
  2291  0372  2B74               	goto	u5731
  2292  0373  2B75               	goto	u5730
  2293  0374                     u5731:	
  2294  0374  2B7E               	goto	l3326
  2295  0375                     u5730:	
  2296  0375                     l3324:	
  2297                           
  2298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2299  0375  30F7               	movlw	247
  2300  0376  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0377  1303               	bcf	3,6	;RP1=0, select bank1
  2302  0378  07C7               	addwf	sprintf@eexp^(0+128),f
  2303  0379  1803               	skipnc
  2304  037A  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2305  037B  30FF               	movlw	255
  2306  037C  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2307                           
  2308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2309  037D  2B86               	goto	l3328
  2310  037E                     l3326:	
  2311                           
  2312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2313  037E  30F8               	movlw	248
  2314  037F  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0380  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0381  07C7               	addwf	sprintf@eexp^(0+128),f
  2317  0382  1803               	skipnc
  2318  0383  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2319  0384  30FF               	movlw	255
  2320  0385  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2321  0386                     l3328:	
  2322                           
  2323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2324  0386  0847               	movf	sprintf@eexp^(0+128),w
  2325  0387  120A  158A  2140  120A  118A  	fcall	_scale
  2326  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2327  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2328  038E  0841               	movf	?_scale+3,w
  2329  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2330  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2331  0391  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2332  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0393  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0394  0840               	movf	?_scale+2,w
  2335  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0397  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2338  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2340  039A  083F               	movf	?_scale+1,w
  2341  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2342  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2343  039D  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2344  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2345  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2346  03A0  083E               	movf	?_scale,w
  2347  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2348  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  2349  03A3  00C3               	movwf	sprintf@tmpval^(0+128)
  2350  03A4                     l3330:	
  2351  03A4  084C               	movf	(sprintf@fval+3)^(0+128),w
  2352  03A5  00F3               	movwf	__div_to_l_@f1+3
  2353  03A6  084B               	movf	(sprintf@fval+2)^(0+128),w
  2354  03A7  00F2               	movwf	__div_to_l_@f1+2
  2355  03A8  084A               	movf	(sprintf@fval+1)^(0+128),w
  2356  03A9  00F1               	movwf	__div_to_l_@f1+1
  2357  03AA  0849               	movf	sprintf@fval^(0+128),w
  2358  03AB  00F0               	movwf	__div_to_l_@f1
  2359  03AC  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2360  03AD  00F7               	movwf	__div_to_l_@f2+3
  2361  03AE  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2362  03AF  00F6               	movwf	__div_to_l_@f2+2
  2363  03B0  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2364  03B1  00F5               	movwf	__div_to_l_@f2+1
  2365  03B2  0843               	movf	sprintf@tmpval^(0+128),w
  2366  03B3  00F4               	movwf	__div_to_l_@f2
  2367  03B4  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  2368  03B9  0873               	movf	?__div_to_l_+3,w
  2369  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2370  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2371  03BC  00BE               	movwf	(sprintf@val+3)^(0+128)
  2372  03BD  0872               	movf	?__div_to_l_+2,w
  2373  03BE  00BD               	movwf	(sprintf@val+2)^(0+128)
  2374  03BF  0871               	movf	?__div_to_l_+1,w
  2375  03C0  00BC               	movwf	(sprintf@val+1)^(0+128)
  2376  03C1  0870               	movf	?__div_to_l_,w
  2377  03C2  00BB               	movwf	sprintf@val^(0+128)
  2378  03C3                     l3334:	
  2379                           
  2380                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2381  03C3  3000               	movlw	0
  2382  03C4  00CC               	movwf	(sprintf@fval+3)^(0+128)
  2383  03C5  3000               	movlw	0
  2384  03C6  00CB               	movwf	(sprintf@fval+2)^(0+128)
  2385  03C7  3000               	movlw	0
  2386  03C8  00CA               	movwf	(sprintf@fval+1)^(0+128)
  2387  03C9  3000               	movlw	0
  2388  03CA  00C9               	movwf	sprintf@fval^(0+128)
  2389                           
  2390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2391  03CB  2C50               	goto	l3342
  2392  03CC                     l3336:	
  2393                           
  2394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2395  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2396  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2397  03CE  084C               	movf	(sprintf@fval+3)^(0+128),w
  2398  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2399  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2400  03D1  00D4               	movwf	___fltol@f1+3
  2401  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  2402  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  2403  03D4  084B               	movf	(sprintf@fval+2)^(0+128),w
  2404  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2405  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2406  03D7  00D3               	movwf	___fltol@f1+2
  2407  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2408  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2409  03DA  084A               	movf	(sprintf@fval+1)^(0+128),w
  2410  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2411  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2412  03DD  00D2               	movwf	___fltol@f1+1
  2413  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2414  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2415  03E0  0849               	movf	sprintf@fval^(0+128),w
  2416  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2417  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2418  03E3  00D1               	movwf	___fltol@f1
  2419  03E4  120A  158A  2006  120A  118A  	fcall	___fltol
  2420  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2421  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2422  03EB  0854               	movf	?___fltol+3,w
  2423  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2424  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2425  03EE  00BE               	movwf	(sprintf@val+3)^(0+128)
  2426  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2427  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2428  03F1  0853               	movf	?___fltol+2,w
  2429  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2430  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2431  03F4  00BD               	movwf	(sprintf@val+2)^(0+128)
  2432  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2433  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2434  03F7  0852               	movf	?___fltol+1,w
  2435  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2436  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2437  03FA  00BC               	movwf	(sprintf@val+1)^(0+128)
  2438  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2439  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2440  03FD  0851               	movf	?___fltol,w
  2441  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2442  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2443  0400  00BB               	movwf	sprintf@val^(0+128)
  2444  0401                     l3338:	
  2445                           
  2446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2447  0401  083E               	movf	(sprintf@val+3)^(0+128),w
  2448  0402  00F3               	movwf	___xxtofl@val+3
  2449  0403  083D               	movf	(sprintf@val+2)^(0+128),w
  2450  0404  00F2               	movwf	___xxtofl@val+2
  2451  0405  083C               	movf	(sprintf@val+1)^(0+128),w
  2452  0406  00F1               	movwf	___xxtofl@val+1
  2453  0407  083B               	movf	sprintf@val^(0+128),w
  2454  0408  00F0               	movwf	___xxtofl@val
  2455  0409  3000               	movlw	0
  2456  040A  160A  118A  21F6  120A  118A  	fcall	___xxtofl
  2457  040F  0873               	movf	?___xxtofl+3,w
  2458  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0412  00E9               	movwf	___flsub@a+3
  2461  0413  0872               	movf	?___xxtofl+2,w
  2462  0414  00E8               	movwf	___flsub@a+2
  2463  0415  0871               	movf	?___xxtofl+1,w
  2464  0416  00E7               	movwf	___flsub@a+1
  2465  0417  0870               	movf	?___xxtofl,w
  2466  0418  00E6               	movwf	___flsub@a
  2467  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2468  041A  1303               	bcf	3,6	;RP1=0, select bank1
  2469  041B  084C               	movf	(sprintf@fval+3)^(0+128),w
  2470  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2471  041D  1303               	bcf	3,6	;RP1=0, select bank0
  2472  041E  00ED               	movwf	___flsub@b+3
  2473  041F  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0420  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0421  084B               	movf	(sprintf@fval+2)^(0+128),w
  2476  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0424  00EC               	movwf	___flsub@b+2
  2479  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2480  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2481  0427  084A               	movf	(sprintf@fval+1)^(0+128),w
  2482  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2484  042A  00EB               	movwf	___flsub@b+1
  2485  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2486  042C  1303               	bcf	3,6	;RP1=0, select bank1
  2487  042D  0849               	movf	sprintf@fval^(0+128),w
  2488  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2489  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0430  00EA               	movwf	___flsub@b
  2491  0431  160A  158A  240F  120A  118A  	fcall	___flsub
  2492  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0438  0869               	movf	?___flsub+3,w
  2495  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2496  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2497  043B  00CC               	movwf	(sprintf@fval+3)^(0+128)
  2498  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2499  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2500  043E  0868               	movf	?___flsub+2,w
  2501  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2503  0441  00CB               	movwf	(sprintf@fval+2)^(0+128)
  2504  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0444  0867               	movf	?___flsub+1,w
  2507  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2508  0446  1303               	bcf	3,6	;RP1=0, select bank1
  2509  0447  00CA               	movwf	(sprintf@fval+1)^(0+128)
  2510  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2512  044A  0866               	movf	?___flsub,w
  2513  044B  1683               	bsf	3,5	;RP0=1, select bank1
  2514  044C  1303               	bcf	3,6	;RP1=0, select bank1
  2515  044D  00C9               	movwf	sprintf@fval^(0+128)
  2516  044E                     l3340:	
  2517                           
  2518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2519  044E  01C7               	clrf	sprintf@eexp^(0+128)
  2520  044F  01C8               	clrf	(sprintf@eexp+1)^(0+128)
  2521  0450                     l3342:	
  2522                           
  2523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2524  0450  01D0               	clrf	sprintf@c^(0+128)
  2525  0451  0AD0               	incf	sprintf@c^(0+128),f
  2526  0452                     l3348:	
  2527                           
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2529  0452  0850               	movf	sprintf@c^(0+128),w
  2530  0453  00B1               	movwf	??_sprintf^(0+128)
  2531  0454  3001               	movlw	1
  2532  0455                     u5745:	
  2533  0455  1003               	clrc
  2534  0456  0DB1               	rlf	??_sprintf^(0+128),f
  2535  0457  3EFF               	addlw	-1
  2536  0458  1D03               	skipz
  2537  0459  2C55               	goto	u5745
  2538  045A  1003               	clrc
  2539  045B  0D31               	rlf	??_sprintf^(0+128),w
  2540  045C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2541  045D  0084               	movwf	4
  2542  045E  160A  118A  2000  120A  118A  	fcall	stringdir
  2543  0463  00B2               	movwf	(??_sprintf+1)^(0+128)
  2544  0464  160A  118A  2000  120A  118A  	fcall	stringdir
  2545  0469  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  2546  046A  160A  118A  2000  120A  118A  	fcall	stringdir
  2547  046F  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
  2548  0470  160A  118A  2000  120A  118A  	fcall	stringdir
  2549  0475  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
  2550  0476  0835               	movf	(??_sprintf+4)^(0+128),w
  2551  0477  023E               	subwf	(sprintf@val+3)^(0+128),w
  2552  0478  1D03               	skipz
  2553  0479  2C84               	goto	u5755
  2554  047A  0834               	movf	(??_sprintf+3)^(0+128),w
  2555  047B  023D               	subwf	(sprintf@val+2)^(0+128),w
  2556  047C  1D03               	skipz
  2557  047D  2C84               	goto	u5755
  2558  047E  0833               	movf	(??_sprintf+2)^(0+128),w
  2559  047F  023C               	subwf	(sprintf@val+1)^(0+128),w
  2560  0480  1D03               	skipz
  2561  0481  2C84               	goto	u5755
  2562  0482  0832               	movf	(??_sprintf+1)^(0+128),w
  2563  0483  023B               	subwf	sprintf@val^(0+128),w
  2564  0484                     u5755:	
  2565  0484  1803               	skipnc
  2566  0485  2C87               	goto	u5751
  2567  0486  2C88               	goto	u5750
  2568  0487                     u5751:	
  2569  0487  2C89               	goto	l3352
  2570  0488                     u5750:	
  2571  0488  2C93               	goto	l3354
  2572  0489                     l3352:	
  2573  0489  3001               	movlw	1
  2574  048A  00B1               	movwf	??_sprintf^(0+128)
  2575  048B  0831               	movf	??_sprintf^(0+128),w
  2576  048C  07D0               	addwf	sprintf@c^(0+128),f
  2577  048D  300A               	movlw	10
  2578  048E  0650               	xorwf	sprintf@c^(0+128),w
  2579  048F  1D03               	btfss	3,2
  2580  0490  2C92               	goto	u5761
  2581  0491  2C93               	goto	u5760
  2582  0492                     u5761:	
  2583  0492  2C52               	goto	l3348
  2584  0493                     u5760:	
  2585  0493                     l3354:	
  2586                           
  2587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1168:     w
      +                          idth -= prec + c + eexp;
  2588  0493  0850               	movf	sprintf@c^(0+128),w
  2589  0494  074E               	addwf	sprintf@prec^(0+128),w
  2590  0495  00B1               	movwf	??_sprintf^(0+128)
  2591  0496  084F               	movf	(sprintf@prec+1)^(0+128),w
  2592  0497  1803               	skipnc
  2593  0498  0A4F               	incf	(sprintf@prec+1)^(0+128),w
  2594  0499  00B2               	movwf	(??_sprintf^(0+128)+1)
  2595  049A  0847               	movf	sprintf@eexp^(0+128),w
  2596  049B  0731               	addwf	??_sprintf^(0+128),w
  2597  049C  00B3               	movwf	(??_sprintf+2)^(0+128)
  2598  049D  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2599  049E  1803               	skipnc
  2600  049F  0A48               	incf	(sprintf@eexp+1)^(0+128),w
  2601  04A0  0732               	addwf	(??_sprintf+1)^(0+128),w
  2602  04A1  00B4               	movwf	(??_sprintf+3)^(0+128)
  2603  04A2  0833               	movf	(??_sprintf+2)^(0+128),w
  2604  04A3  02C1               	subwf	sprintf@width^(0+128),f
  2605  04A4  0834               	movf	(??_sprintf+3)^(0+128),w
  2606  04A5  1C03               	skipc
  2607  04A6  03C2               	decf	(sprintf@width+1)^(0+128),f
  2608  04A7  02C2               	subwf	(sprintf@width+1)^(0+128),f
  2609                           
  2610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1169:     i
      +                          f(
  2611  04A8  084E               	movf	sprintf@prec^(0+128),w
  2612  04A9  044F               	iorwf	(sprintf@prec+1)^(0+128),w
  2613  04AA  1903               	btfsc	3,2
  2614  04AB  2CAD               	goto	u5771
  2615  04AC  2CAE               	goto	u5770
  2616  04AD                     u5771:	
  2617  04AD  2CB4               	goto	l3358
  2618  04AE                     u5770:	
  2619  04AE                     l3356:	
  2620                           
  2621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1174:      
      +                          width--;
  2622  04AE  30FF               	movlw	255
  2623  04AF  07C1               	addwf	sprintf@width^(0+128),f
  2624  04B0  1803               	skipnc
  2625  04B1  0AC2               	incf	(sprintf@width+1)^(0+128),f
  2626  04B2  30FF               	movlw	255
  2627  04B3  07C2               	addwf	(sprintf@width+1)^(0+128),f
  2628  04B4                     l3358:	
  2629                           
  2630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1175:     i
      +                          f(flag & 0x03)
  2631  04B4  3003               	movlw	3
  2632  04B5  053F               	andwf	sprintf@flag^(0+128),w
  2633  04B6  00B1               	movwf	??_sprintf^(0+128)
  2634  04B7  3000               	movlw	0
  2635  04B8  0540               	andwf	(sprintf@flag+1)^(0+128),w
  2636  04B9  00B2               	movwf	(??_sprintf+1)^(0+128)
  2637  04BA  0831               	movf	??_sprintf^(0+128),w
  2638  04BB  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2639  04BC  1903               	btfsc	3,2
  2640  04BD  2CBF               	goto	u5781
  2641  04BE  2CC0               	goto	u5780
  2642  04BF                     u5781:	
  2643  04BF  2CD5               	goto	l3368
  2644  04C0                     u5780:	
  2645  04C0                     l3360:	
  2646                           
  2647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1176:      
      +                          width--;
  2648  04C0  30FF               	movlw	255
  2649  04C1  07C1               	addwf	sprintf@width^(0+128),f
  2650  04C2  1803               	skipnc
  2651  04C3  0AC2               	incf	(sprintf@width+1)^(0+128),f
  2652  04C4  30FF               	movlw	255
  2653  04C5  07C2               	addwf	(sprintf@width+1)^(0+128),f
  2654  04C6  2CD5               	goto	l3368
  2655  04C7                     l3362:	
  2656                           
  2657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1207:      
      +                           ((*sp++ = (' ')));
  2658  04C7  3020               	movlw	32
  2659  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2660  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2661  04CA  00B1               	movwf	??_sprintf^(0+128)
  2662  04CB  084D               	movf	sprintf@sp^(0+128),w
  2663  04CC  0084               	movwf	4
  2664  04CD  0831               	movf	??_sprintf^(0+128),w
  2665  04CE  1383               	bcf	3,7	;select IRP bank0
  2666  04CF  0080               	movwf	0
  2667  04D0                     l3364:	
  2668  04D0  3001               	movlw	1
  2669  04D1  00B1               	movwf	??_sprintf^(0+128)
  2670  04D2  0831               	movf	??_sprintf^(0+128),w
  2671  04D3  07CD               	addwf	sprintf@sp^(0+128),f
  2672  04D4  2CC0               	goto	l3360
  2673  04D5                     l3368:	
  2674                           
  2675                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1206:      
      +                          while(width > 0) {
  2676  04D5  0842               	movf	(sprintf@width+1)^(0+128),w
  2677  04D6  3A80               	xorlw	128
  2678  04D7  00FF               	movwf	btemp+1
  2679  04D8  3080               	movlw	128
  2680  04D9  027F               	subwf	btemp+1,w
  2681  04DA  1D03               	skipz
  2682  04DB  2CDE               	goto	u5795
  2683  04DC  3001               	movlw	1
  2684  04DD  0241               	subwf	sprintf@width^(0+128),w
  2685  04DE                     u5795:	
  2686  04DE  1803               	skipnc
  2687  04DF  2CE1               	goto	u5791
  2688  04E0  2CE2               	goto	u5790
  2689  04E1                     u5791:	
  2690  04E1  2CC7               	goto	l3362
  2691  04E2                     u5790:	
  2692  04E2                     l3370:	
  2693                           
  2694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  2695  04E2  3003               	movlw	3
  2696  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2697  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  2698  04E5  053F               	andwf	sprintf@flag^(0+128),w
  2699  04E6  00B1               	movwf	??_sprintf^(0+128)
  2700  04E7  3000               	movlw	0
  2701  04E8  0540               	andwf	(sprintf@flag+1)^(0+128),w
  2702  04E9  00B2               	movwf	(??_sprintf+1)^(0+128)
  2703  04EA  0831               	movf	??_sprintf^(0+128),w
  2704  04EB  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2705  04EC  1903               	btfsc	3,2
  2706  04ED  2CEF               	goto	u5801
  2707  04EE  2CF0               	goto	u5800
  2708  04EF                     u5801:	
  2709  04EF  2D62               	goto	l343
  2710  04F0                     u5800:	
  2711  04F0                     l3372:	
  2712                           
  2713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  2714  04F0  302D               	movlw	45
  2715  04F1  00B1               	movwf	??_sprintf^(0+128)
  2716  04F2  084D               	movf	sprintf@sp^(0+128),w
  2717  04F3  0084               	movwf	4
  2718  04F4  0831               	movf	??_sprintf^(0+128),w
  2719  04F5  1383               	bcf	3,7	;select IRP bank0
  2720  04F6  0080               	movwf	0
  2721  04F7                     l3374:	
  2722  04F7  3001               	movlw	1
  2723  04F8  00B1               	movwf	??_sprintf^(0+128)
  2724  04F9  0831               	movf	??_sprintf^(0+128),w
  2725  04FA  07CD               	addwf	sprintf@sp^(0+128),f
  2726  04FB  2D62               	goto	l343
  2727  04FC                     l3376:	
  2728                           
  2729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  2730  04FC  0850               	movf	sprintf@c^(0+128),w
  2731  04FD  00B1               	movwf	??_sprintf^(0+128)
  2732  04FE  3001               	movlw	1
  2733  04FF                     u5815:	
  2734  04FF  1003               	clrc
  2735  0500  0DB1               	rlf	??_sprintf^(0+128),f
  2736  0501  3EFF               	addlw	-1
  2737  0502  1D03               	skipz
  2738  0503  2CFF               	goto	u5815
  2739  0504  1003               	clrc
  2740  0505  0D31               	rlf	??_sprintf^(0+128),w
  2741  0506  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2742  0507  0084               	movwf	4
  2743  0508  160A  118A  2000  120A  118A  	fcall	stringdir
  2744  050D  00F0               	movwf	___lldiv@divisor
  2745  050E  160A  118A  2000  120A  118A  	fcall	stringdir
  2746  0513  00F1               	movwf	___lldiv@divisor+1
  2747  0514  160A  118A  2000  120A  118A  	fcall	stringdir
  2748  0519  00F2               	movwf	___lldiv@divisor+2
  2749  051A  160A  118A  2000  120A  118A  	fcall	stringdir
  2750  051F  00F3               	movwf	___lldiv@divisor+3
  2751  0520  083E               	movf	(sprintf@val+3)^(0+128),w
  2752  0521  00F7               	movwf	___lldiv@dividend+3
  2753  0522  083D               	movf	(sprintf@val+2)^(0+128),w
  2754  0523  00F6               	movwf	___lldiv@dividend+2
  2755  0524  083C               	movf	(sprintf@val+1)^(0+128),w
  2756  0525  00F5               	movwf	___lldiv@dividend+1
  2757  0526  083B               	movf	sprintf@val^(0+128),w
  2758  0527  00F4               	movwf	___lldiv@dividend
  2759  0528  160A  158A  264E  120A  118A  	fcall	___lldiv
  2760  052D  0873               	movf	?___lldiv+3,w
  2761  052E  1683               	bsf	3,5	;RP0=1, select bank1
  2762  052F  1303               	bcf	3,6	;RP1=0, select bank1
  2763  0530  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2764  0531  0872               	movf	?___lldiv+2,w
  2765  0532  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2766  0533  0871               	movf	?___lldiv+1,w
  2767  0534  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2768  0535  0870               	movf	?___lldiv,w
  2769  0536  00C3               	movwf	sprintf@tmpval^(0+128)
  2770  0537                     l3378:	
  2771                           
  2772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  2773  0537  3000               	movlw	0
  2774  0538  00F3               	movwf	___llmod@divisor+3
  2775  0539  3000               	movlw	0
  2776  053A  00F2               	movwf	___llmod@divisor+2
  2777  053B  3000               	movlw	0
  2778  053C  00F1               	movwf	___llmod@divisor+1
  2779  053D  300A               	movlw	10
  2780  053E  00F0               	movwf	___llmod@divisor
  2781  053F  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2782  0540  00F7               	movwf	___llmod@dividend+3
  2783  0541  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2784  0542  00F6               	movwf	___llmod@dividend+2
  2785  0543  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2786  0544  00F5               	movwf	___llmod@dividend+1
  2787  0545  0843               	movf	sprintf@tmpval^(0+128),w
  2788  0546  00F4               	movwf	___llmod@dividend
  2789  0547  120A  118A  2004  120A  118A  	fcall	___llmod
  2790  054C  0873               	movf	?___llmod+3,w
  2791  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2792  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2793  054F  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2794  0550  0872               	movf	?___llmod+2,w
  2795  0551  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2796  0552  0871               	movf	?___llmod+1,w
  2797  0553  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2798  0554  0870               	movf	?___llmod,w
  2799  0555  00C3               	movwf	sprintf@tmpval^(0+128)
  2800  0556                     l3380:	
  2801                           
  2802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2803  0556  0843               	movf	sprintf@tmpval^(0+128),w
  2804  0557  3E30               	addlw	48
  2805  0558  00B1               	movwf	??_sprintf^(0+128)
  2806  0559  084D               	movf	sprintf@sp^(0+128),w
  2807  055A  0084               	movwf	4
  2808  055B  0831               	movf	??_sprintf^(0+128),w
  2809  055C  1383               	bcf	3,7	;select IRP bank0
  2810  055D  0080               	movwf	0
  2811  055E  3001               	movlw	1
  2812  055F  00B1               	movwf	??_sprintf^(0+128)
  2813  0560  0831               	movf	??_sprintf^(0+128),w
  2814  0561  07CD               	addwf	sprintf@sp^(0+128),f
  2815  0562                     l343:	
  2816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  2817                           
  2818                           
  2819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  2820  0562  3001               	movlw	1
  2821  0563  02D0               	subwf	sprintf@c^(0+128),f
  2822  0564  0A50               	incf	sprintf@c^(0+128),w
  2823  0565  1D03               	btfss	3,2
  2824  0566  2D68               	goto	u5821
  2825  0567  2D69               	goto	u5820
  2826  0568                     u5821:	
  2827  0568  2CFC               	goto	l3376
  2828  0569                     u5820:	
  2829  0569  2D7D               	goto	l3388
  2830  056A                     l3382:	
  2831                           
  2832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  2833  056A  3030               	movlw	48
  2834  056B  1683               	bsf	3,5	;RP0=1, select bank1
  2835  056C  1303               	bcf	3,6	;RP1=0, select bank1
  2836  056D  00B1               	movwf	??_sprintf^(0+128)
  2837  056E  084D               	movf	sprintf@sp^(0+128),w
  2838  056F  0084               	movwf	4
  2839  0570  0831               	movf	??_sprintf^(0+128),w
  2840  0571  1383               	bcf	3,7	;select IRP bank0
  2841  0572  0080               	movwf	0
  2842  0573                     l3384:	
  2843  0573  3001               	movlw	1
  2844  0574  00B1               	movwf	??_sprintf^(0+128)
  2845  0575  0831               	movf	??_sprintf^(0+128),w
  2846  0576  07CD               	addwf	sprintf@sp^(0+128),f
  2847  0577                     l3386:	
  2848                           
  2849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  2850  0577  30FF               	movlw	255
  2851  0578  07C7               	addwf	sprintf@eexp^(0+128),f
  2852  0579  1803               	skipnc
  2853  057A  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2854  057B  30FF               	movlw	255
  2855  057C  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2856  057D                     l3388:	
  2857                           
  2858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  2859  057D  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2860  057E  3A80               	xorlw	128
  2861  057F  00FF               	movwf	btemp+1
  2862  0580  3080               	movlw	128
  2863  0581  027F               	subwf	btemp+1,w
  2864  0582  1D03               	skipz
  2865  0583  2D86               	goto	u5835
  2866  0584  3001               	movlw	1
  2867  0585  0247               	subwf	sprintf@eexp^(0+128),w
  2868  0586                     u5835:	
  2869  0586  1803               	skipnc
  2870  0587  2D89               	goto	u5831
  2871  0588  2D8A               	goto	u5830
  2872  0589                     u5831:	
  2873  0589  2D6A               	goto	l3382
  2874  058A                     u5830:	
  2875  058A                     l3390:	
  2876                           
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2878  058A  1683               	bsf	3,5	;RP0=1, select bank1
  2879  058B  1303               	bcf	3,6	;RP1=0, select bank1
  2880  058C  084F               	movf	(sprintf@prec+1)^(0+128),w
  2881  058D  3A80               	xorlw	128
  2882  058E  00FF               	movwf	btemp+1
  2883  058F  3080               	movlw	128
  2884  0590  027F               	subwf	btemp+1,w
  2885  0591  1D03               	skipz
  2886  0592  2D95               	goto	u5845
  2887  0593  3009               	movlw	9
  2888  0594  024E               	subwf	sprintf@prec^(0+128),w
  2889  0595                     u5845:	
  2890  0595  1C03               	skipc
  2891  0596  2D98               	goto	u5841
  2892  0597  2D99               	goto	u5840
  2893  0598                     u5841:	
  2894  0598  2DA0               	goto	l3394
  2895  0599                     u5840:	
  2896  0599                     l3392:	
  2897                           
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2899  0599  3008               	movlw	8
  2900  059A  1683               	bsf	3,5	;RP0=1, select bank1
  2901  059B  1303               	bcf	3,6	;RP1=0, select bank1
  2902  059C  00B1               	movwf	??_sprintf^(0+128)
  2903  059D  0831               	movf	??_sprintf^(0+128),w
  2904  059E  00D0               	movwf	sprintf@c^(0+128)
  2905  059F  2DA6               	goto	l350
  2906  05A0                     l3394:	
  2907                           
  2908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  2909  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  2910  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  2911  05A2  084E               	movf	sprintf@prec^(0+128),w
  2912  05A3  00B1               	movwf	??_sprintf^(0+128)
  2913  05A4  0831               	movf	??_sprintf^(0+128),w
  2914  05A5  00D0               	movwf	sprintf@c^(0+128)
  2915  05A6                     l350:	
  2916                           
  2917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  2918  05A6  0850               	movf	sprintf@c^(0+128),w
  2919  05A7  00B1               	movwf	??_sprintf^(0+128)
  2920  05A8  01B2               	clrf	(??_sprintf^(0+128)+1)
  2921  05A9  0831               	movf	??_sprintf^(0+128),w
  2922  05AA  02CE               	subwf	sprintf@prec^(0+128),f
  2923  05AB  0832               	movf	(??_sprintf+1)^(0+128),w
  2924  05AC  1C03               	skipc
  2925  05AD  03CF               	decf	(sprintf@prec+1)^(0+128),f
  2926  05AE  02CF               	subwf	(sprintf@prec+1)^(0+128),f
  2927  05AF                     l3396:	
  2928                           
  2929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  2930  05AF  0850               	movf	sprintf@c^(0+128),w
  2931  05B0  1903               	btfsc	3,2
  2932  05B1  2DB3               	goto	u5851
  2933  05B2  2DB4               	goto	u5850
  2934  05B3                     u5851:	
  2935  05B3  2DBF               	goto	l3402
  2936  05B4                     u5850:	
  2937  05B4                     l3398:	
  2938                           
  2939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  2940  05B4  302E               	movlw	46
  2941  05B5  00B1               	movwf	??_sprintf^(0+128)
  2942  05B6  084D               	movf	sprintf@sp^(0+128),w
  2943  05B7  0084               	movwf	4
  2944  05B8  0831               	movf	??_sprintf^(0+128),w
  2945  05B9  1383               	bcf	3,7	;select IRP bank0
  2946  05BA  0080               	movwf	0
  2947  05BB                     l3400:	
  2948  05BB  3001               	movlw	1
  2949  05BC  00B1               	movwf	??_sprintf^(0+128)
  2950  05BD  0831               	movf	??_sprintf^(0+128),w
  2951  05BE  07CD               	addwf	sprintf@sp^(0+128),f
  2952  05BF                     l3402:	
  2953                           
  2954                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2955  05BF  0850               	movf	sprintf@c^(0+128),w
  2956  05C0  120A  158A  2140  120A  118A  	fcall	_scale
  2957  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  2958  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  2959  05C7  0841               	movf	?_scale+3,w
  2960  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  2961  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  2962  05CA  00B9               	movwf	(_sprintf$885+3)^(0+128)
  2963  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2964  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2965  05CD  0840               	movf	?_scale+2,w
  2966  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  2967  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  2968  05D0  00B8               	movwf	(_sprintf$885+2)^(0+128)
  2969  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2970  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2971  05D3  083F               	movf	?_scale+1,w
  2972  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  2973  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  2974  05D6  00B7               	movwf	(_sprintf$885+1)^(0+128)
  2975  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2976  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  2977  05D9  083E               	movf	?_scale,w
  2978  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  2979  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  2980  05DC  00B6               	movwf	_sprintf$885^(0+128)
  2981  05DD                     l3404:	
  2982                           
  2983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2984  05DD  0839               	movf	(_sprintf$885+3)^(0+128),w
  2985  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  2986  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  2987  05E0  00AB               	movwf	___flmul@a+3
  2988  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  2989  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  2990  05E3  0838               	movf	(_sprintf$885+2)^(0+128),w
  2991  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  2992  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  2993  05E6  00AA               	movwf	___flmul@a+2
  2994  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  2995  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  2996  05E9  0837               	movf	(_sprintf$885+1)^(0+128),w
  2997  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  2998  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  2999  05EC  00A9               	movwf	___flmul@a+1
  3000  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  3001  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  3002  05EF  0836               	movf	_sprintf$885^(0+128),w
  3003  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  3004  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  3005  05F2  00A8               	movwf	___flmul@a
  3006  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  3007  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  3008  05F5  084C               	movf	(sprintf@fval+3)^(0+128),w
  3009  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  3010  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  3011  05F8  00A7               	movwf	___flmul@b+3
  3012  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  3013  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  3014  05FB  084B               	movf	(sprintf@fval+2)^(0+128),w
  3015  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  3016  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  3017  05FE  00A6               	movwf	___flmul@b+2
  3018  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  3019  0600  1303               	bcf	3,6	;RP1=0, select bank1
  3020  0601  084A               	movf	(sprintf@fval+1)^(0+128),w
  3021  0602  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0603  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0604  00A5               	movwf	___flmul@b+1
  3024  0605  1683               	bsf	3,5	;RP0=1, select bank1
  3025  0606  1303               	bcf	3,6	;RP1=0, select bank1
  3026  0607  0849               	movf	sprintf@fval^(0+128),w
  3027  0608  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0609  1303               	bcf	3,6	;RP1=0, select bank0
  3029  060A  00A4               	movwf	___flmul@b
  3030  060B  120A  158A  249F  120A  118A  	fcall	___flmul
  3031  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0612  0827               	movf	?___flmul+3,w
  3034  0613  00D4               	movwf	___fltol@f1+3
  3035  0614  0826               	movf	?___flmul+2,w
  3036  0615  00D3               	movwf	___fltol@f1+2
  3037  0616  0825               	movf	?___flmul+1,w
  3038  0617  00D2               	movwf	___fltol@f1+1
  3039  0618  0824               	movf	?___flmul,w
  3040  0619  00D1               	movwf	___fltol@f1
  3041  061A  120A  158A  2006  120A  118A  	fcall	___fltol
  3042  061F  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0620  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0621  0854               	movf	?___fltol+3,w
  3045  0622  1683               	bsf	3,5	;RP0=1, select bank1
  3046  0623  1303               	bcf	3,6	;RP1=0, select bank1
  3047  0624  00BE               	movwf	(sprintf@val+3)^(0+128)
  3048  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0626  1303               	bcf	3,6	;RP1=0, select bank0
  3050  0627  0853               	movf	?___fltol+2,w
  3051  0628  1683               	bsf	3,5	;RP0=1, select bank1
  3052  0629  1303               	bcf	3,6	;RP1=0, select bank1
  3053  062A  00BD               	movwf	(sprintf@val+2)^(0+128)
  3054  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3055  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3056  062D  0852               	movf	?___fltol+1,w
  3057  062E  1683               	bsf	3,5	;RP0=1, select bank1
  3058  062F  1303               	bcf	3,6	;RP1=0, select bank1
  3059  0630  00BC               	movwf	(sprintf@val+1)^(0+128)
  3060  0631  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0632  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0633  0851               	movf	?___fltol,w
  3063  0634  1683               	bsf	3,5	;RP0=1, select bank1
  3064  0635  1303               	bcf	3,6	;RP1=0, select bank1
  3065  0636  00BB               	movwf	sprintf@val^(0+128)
  3066                           
  3067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3068  0637  2ED9               	goto	l3414
  3069  0638                     l3406:	
  3070                           
  3071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3072  0638  0850               	movf	sprintf@c^(0+128),w
  3073  0639  00B1               	movwf	??_sprintf^(0+128)
  3074  063A  3001               	movlw	1
  3075  063B                     u5865:	
  3076  063B  1003               	clrc
  3077  063C  0DB1               	rlf	??_sprintf^(0+128),f
  3078  063D  3EFF               	addlw	-1
  3079  063E  1D03               	skipz
  3080  063F  2E3B               	goto	u5865
  3081  0640  1003               	clrc
  3082  0641  0D31               	rlf	??_sprintf^(0+128),w
  3083  0642  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3084  0643  0084               	movwf	4
  3085  0644  160A  118A  2000  120A  118A  	fcall	stringdir
  3086  0649  00F0               	movwf	___lldiv@divisor
  3087  064A  160A  118A  2000  120A  118A  	fcall	stringdir
  3088  064F  00F1               	movwf	___lldiv@divisor+1
  3089  0650  160A  118A  2000  120A  118A  	fcall	stringdir
  3090  0655  00F2               	movwf	___lldiv@divisor+2
  3091  0656  160A  118A  2000  120A  118A  	fcall	stringdir
  3092  065B  00F3               	movwf	___lldiv@divisor+3
  3093  065C  083E               	movf	(sprintf@val+3)^(0+128),w
  3094  065D  00F7               	movwf	___lldiv@dividend+3
  3095  065E  083D               	movf	(sprintf@val+2)^(0+128),w
  3096  065F  00F6               	movwf	___lldiv@dividend+2
  3097  0660  083C               	movf	(sprintf@val+1)^(0+128),w
  3098  0661  00F5               	movwf	___lldiv@dividend+1
  3099  0662  083B               	movf	sprintf@val^(0+128),w
  3100  0663  00F4               	movwf	___lldiv@dividend
  3101  0664  160A  158A  264E  120A  118A  	fcall	___lldiv
  3102  0669  0873               	movf	?___lldiv+3,w
  3103  066A  1683               	bsf	3,5	;RP0=1, select bank1
  3104  066B  1303               	bcf	3,6	;RP1=0, select bank1
  3105  066C  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3106  066D  0872               	movf	?___lldiv+2,w
  3107  066E  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3108  066F  0871               	movf	?___lldiv+1,w
  3109  0670  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3110  0671  0870               	movf	?___lldiv,w
  3111  0672  00C3               	movwf	sprintf@tmpval^(0+128)
  3112  0673                     l3408:	
  3113                           
  3114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3115  0673  3000               	movlw	0
  3116  0674  00F3               	movwf	___llmod@divisor+3
  3117  0675  3000               	movlw	0
  3118  0676  00F2               	movwf	___llmod@divisor+2
  3119  0677  3000               	movlw	0
  3120  0678  00F1               	movwf	___llmod@divisor+1
  3121  0679  300A               	movlw	10
  3122  067A  00F0               	movwf	___llmod@divisor
  3123  067B  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3124  067C  00F7               	movwf	___llmod@dividend+3
  3125  067D  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3126  067E  00F6               	movwf	___llmod@dividend+2
  3127  067F  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3128  0680  00F5               	movwf	___llmod@dividend+1
  3129  0681  0843               	movf	sprintf@tmpval^(0+128),w
  3130  0682  00F4               	movwf	___llmod@dividend
  3131  0683  120A  118A  2004  120A  118A  	fcall	___llmod
  3132  0688  0873               	movf	?___llmod+3,w
  3133  0689  1683               	bsf	3,5	;RP0=1, select bank1
  3134  068A  1303               	bcf	3,6	;RP1=0, select bank1
  3135  068B  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3136  068C  0872               	movf	?___llmod+2,w
  3137  068D  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3138  068E  0871               	movf	?___llmod+1,w
  3139  068F  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3140  0690  0870               	movf	?___llmod,w
  3141  0691  00C3               	movwf	sprintf@tmpval^(0+128)
  3142  0692                     l3410:	
  3143                           
  3144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3145  0692  0843               	movf	sprintf@tmpval^(0+128),w
  3146  0693  3E30               	addlw	48
  3147  0694  00B1               	movwf	??_sprintf^(0+128)
  3148  0695  084D               	movf	sprintf@sp^(0+128),w
  3149  0696  0084               	movwf	4
  3150  0697  0831               	movf	??_sprintf^(0+128),w
  3151  0698  1383               	bcf	3,7	;select IRP bank0
  3152  0699  0080               	movwf	0
  3153  069A  3001               	movlw	1
  3154  069B  00B1               	movwf	??_sprintf^(0+128)
  3155  069C  0831               	movf	??_sprintf^(0+128),w
  3156  069D  07CD               	addwf	sprintf@sp^(0+128),f
  3157  069E                     l3412:	
  3158                           
  3159                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3160  069E  0850               	movf	sprintf@c^(0+128),w
  3161  069F  00B1               	movwf	??_sprintf^(0+128)
  3162  06A0  3001               	movlw	1
  3163  06A1                     u5875:	
  3164  06A1  1003               	clrc
  3165  06A2  0DB1               	rlf	??_sprintf^(0+128),f
  3166  06A3  3EFF               	addlw	-1
  3167  06A4  1D03               	skipz
  3168  06A5  2EA1               	goto	u5875
  3169  06A6  1003               	clrc
  3170  06A7  0D31               	rlf	??_sprintf^(0+128),w
  3171  06A8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3172  06A9  0084               	movwf	4
  3173  06AA  160A  118A  2000  120A  118A  	fcall	stringdir
  3174  06AF  00F0               	movwf	___llmod@divisor
  3175  06B0  160A  118A  2000  120A  118A  	fcall	stringdir
  3176  06B5  00F1               	movwf	___llmod@divisor+1
  3177  06B6  160A  118A  2000  120A  118A  	fcall	stringdir
  3178  06BB  00F2               	movwf	___llmod@divisor+2
  3179  06BC  160A  118A  2000  120A  118A  	fcall	stringdir
  3180  06C1  00F3               	movwf	___llmod@divisor+3
  3181  06C2  083E               	movf	(sprintf@val+3)^(0+128),w
  3182  06C3  00F7               	movwf	___llmod@dividend+3
  3183  06C4  083D               	movf	(sprintf@val+2)^(0+128),w
  3184  06C5  00F6               	movwf	___llmod@dividend+2
  3185  06C6  083C               	movf	(sprintf@val+1)^(0+128),w
  3186  06C7  00F5               	movwf	___llmod@dividend+1
  3187  06C8  083B               	movf	sprintf@val^(0+128),w
  3188  06C9  00F4               	movwf	___llmod@dividend
  3189  06CA  120A  118A  2004  120A  118A  	fcall	___llmod
  3190  06CF  0873               	movf	?___llmod+3,w
  3191  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3192  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  3193  06D2  00BE               	movwf	(sprintf@val+3)^(0+128)
  3194  06D3  0872               	movf	?___llmod+2,w
  3195  06D4  00BD               	movwf	(sprintf@val+2)^(0+128)
  3196  06D5  0871               	movf	?___llmod+1,w
  3197  06D6  00BC               	movwf	(sprintf@val+1)^(0+128)
  3198  06D7  0870               	movf	?___llmod,w
  3199  06D8  00BB               	movwf	sprintf@val^(0+128)
  3200  06D9                     l3414:	
  3201                           
  3202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3203  06D9  3001               	movlw	1
  3204  06DA  02D0               	subwf	sprintf@c^(0+128),f
  3205  06DB  0A50               	incf	sprintf@c^(0+128),w
  3206  06DC  1D03               	btfss	3,2
  3207  06DD  2EDF               	goto	u5881
  3208  06DE  2EE0               	goto	u5880
  3209  06DF                     u5881:	
  3210  06DF  2E38               	goto	l3406
  3211  06E0                     u5880:	
  3212  06E0  2EF2               	goto	l3422
  3213  06E1                     l3416:	
  3214                           
  3215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3216  06E1  3030               	movlw	48
  3217  06E2  00B1               	movwf	??_sprintf^(0+128)
  3218  06E3  084D               	movf	sprintf@sp^(0+128),w
  3219  06E4  0084               	movwf	4
  3220  06E5  0831               	movf	??_sprintf^(0+128),w
  3221  06E6  1383               	bcf	3,7	;select IRP bank0
  3222  06E7  0080               	movwf	0
  3223  06E8                     l3418:	
  3224  06E8  3001               	movlw	1
  3225  06E9  00B1               	movwf	??_sprintf^(0+128)
  3226  06EA  0831               	movf	??_sprintf^(0+128),w
  3227  06EB  07CD               	addwf	sprintf@sp^(0+128),f
  3228  06EC                     l3420:	
  3229                           
  3230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3231  06EC  30FF               	movlw	255
  3232  06ED  07CE               	addwf	sprintf@prec^(0+128),f
  3233  06EE  1803               	skipnc
  3234  06EF  0ACF               	incf	(sprintf@prec+1)^(0+128),f
  3235  06F0  30FF               	movlw	255
  3236  06F1  07CF               	addwf	(sprintf@prec+1)^(0+128),f
  3237  06F2                     l3422:	
  3238                           
  3239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3240  06F2  084E               	movf	sprintf@prec^(0+128),w
  3241  06F3  044F               	iorwf	(sprintf@prec+1)^(0+128),w
  3242  06F4  1D03               	btfss	3,2
  3243  06F5  2EF7               	goto	u5891
  3244  06F6  2EF8               	goto	u5890
  3245  06F7                     u5891:	
  3246  06F7  2EE1               	goto	l3416
  3247  06F8                     u5890:	
  3248  06F8  2FBC               	goto	l3470
  3249  06F9                     l3424:	
  3250                           
  3251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
  3252  06F9  084E               	movf	sprintf@prec^(0+128),w
  3253  06FA  044F               	iorwf	(sprintf@prec+1)^(0+128),w
  3254  06FB  1D03               	btfss	3,2
  3255  06FC  2EFE               	goto	u5901
  3256  06FD  2EFF               	goto	u5900
  3257  06FE                     u5901:	
  3258  06FE  2F0D               	goto	l358
  3259  06FF                     u5900:	
  3260  06FF                     l3426:	
  3261  06FF  083E               	movf	(sprintf@val+3)^(0+128),w
  3262  0700  043D               	iorwf	(sprintf@val+2)^(0+128),w
  3263  0701  043C               	iorwf	(sprintf@val+1)^(0+128),w
  3264  0702  043B               	iorwf	sprintf@val^(0+128),w
  3265  0703  1D03               	skipz
  3266  0704  2F06               	goto	u5911
  3267  0705  2F07               	goto	u5910
  3268  0706                     u5911:	
  3269  0706  2F0D               	goto	l358
  3270  0707                     u5910:	
  3271  0707                     l3428:	
  3272                           
  3273                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  3274  0707  3001               	movlw	1
  3275  0708  07CE               	addwf	sprintf@prec^(0+128),f
  3276  0709  1803               	skipnc
  3277  070A  0ACF               	incf	(sprintf@prec+1)^(0+128),f
  3278  070B  3000               	movlw	0
  3279  070C  07CF               	addwf	(sprintf@prec+1)^(0+128),f
  3280  070D                     l358:	
  3281                           
  3282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  3283  070D  084F               	movf	(sprintf@prec+1)^(0+128),w
  3284  070E  3A80               	xorlw	128
  3285  070F  3C80               	sublw	128
  3286  0710  1D03               	skipz
  3287  0711  2F14               	goto	u5925
  3288  0712  084E               	movf	sprintf@prec^(0+128),w
  3289  0713  0250               	subwf	sprintf@c^(0+128),w
  3290  0714                     u5925:	
  3291  0714  1803               	skipnc
  3292  0715  2F17               	goto	u5921
  3293  0716  2F18               	goto	u5920
  3294  0717                     u5921:	
  3295  0717  2F1F               	goto	l3432
  3296  0718                     u5920:	
  3297  0718                     l3430:	
  3298                           
  3299                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1366:    c 
      +                          = (char)prec;
  3300  0718  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0719  1303               	bcf	3,6	;RP1=0, select bank1
  3302  071A  084E               	movf	sprintf@prec^(0+128),w
  3303  071B  00B1               	movwf	??_sprintf^(0+128)
  3304  071C  0831               	movf	??_sprintf^(0+128),w
  3305  071D  00D0               	movwf	sprintf@c^(0+128)
  3306  071E  2F37               	goto	l3436
  3307  071F                     l3432:	
  3308  071F  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0720  1303               	bcf	3,6	;RP1=0, select bank1
  3310  0721  084F               	movf	(sprintf@prec+1)^(0+128),w
  3311  0722  3A80               	xorlw	128
  3312  0723  00B1               	movwf	??_sprintf^(0+128)
  3313  0724  3080               	movlw	128
  3314  0725  0231               	subwf	??_sprintf^(0+128),w
  3315  0726  1D03               	skipz
  3316  0727  2F2A               	goto	u5935
  3317  0728  0850               	movf	sprintf@c^(0+128),w
  3318  0729  024E               	subwf	sprintf@prec^(0+128),w
  3319  072A                     u5935:	
  3320  072A  1803               	skipnc
  3321  072B  2F2D               	goto	u5931
  3322  072C  2F2E               	goto	u5930
  3323  072D                     u5931:	
  3324  072D  2F37               	goto	l3436
  3325  072E                     u5930:	
  3326  072E                     l3434:	
  3327                           
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
  3329  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3330  072F  1303               	bcf	3,6	;RP1=0, select bank1
  3331  0730  0850               	movf	sprintf@c^(0+128),w
  3332  0731  00B1               	movwf	??_sprintf^(0+128)
  3333  0732  01B2               	clrf	(??_sprintf^(0+128)+1)
  3334  0733  0831               	movf	??_sprintf^(0+128),w
  3335  0734  00CE               	movwf	sprintf@prec^(0+128)
  3336  0735  0832               	movf	(??_sprintf+1)^(0+128),w
  3337  0736  00CF               	movwf	(sprintf@prec+1)^(0+128)
  3338  0737                     l3436:	
  3339                           
  3340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
  3341  0737  1683               	bsf	3,5	;RP0=1, select bank1
  3342  0738  1303               	bcf	3,6	;RP1=0, select bank1
  3343  0739  0841               	movf	sprintf@width^(0+128),w
  3344  073A  0442               	iorwf	(sprintf@width+1)^(0+128),w
  3345  073B  1903               	btfsc	3,2
  3346  073C  2F3E               	goto	u5941
  3347  073D  2F3F               	goto	u5940
  3348  073E                     u5941:	
  3349  073E  2F51               	goto	l3442
  3350  073F                     u5940:	
  3351  073F                     l3438:	
  3352  073F  3003               	movlw	3
  3353  0740  053F               	andwf	sprintf@flag^(0+128),w
  3354  0741  00B1               	movwf	??_sprintf^(0+128)
  3355  0742  3000               	movlw	0
  3356  0743  0540               	andwf	(sprintf@flag+1)^(0+128),w
  3357  0744  00B2               	movwf	(??_sprintf+1)^(0+128)
  3358  0745  0831               	movf	??_sprintf^(0+128),w
  3359  0746  0432               	iorwf	(??_sprintf^(0+128)+1),w
  3360  0747  1903               	btfsc	3,2
  3361  0748  2F4A               	goto	u5951
  3362  0749  2F4B               	goto	u5950
  3363  074A                     u5951:	
  3364  074A  2F51               	goto	l3442
  3365  074B                     u5950:	
  3366  074B                     l3440:	
  3367                           
  3368                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
  3369  074B  30FF               	movlw	255
  3370  074C  07C1               	addwf	sprintf@width^(0+128),f
  3371  074D  1803               	skipnc
  3372  074E  0AC2               	incf	(sprintf@width+1)^(0+128),f
  3373  074F  30FF               	movlw	255
  3374  0750  07C2               	addwf	(sprintf@width+1)^(0+128),f
  3375  0751                     l3442:	
  3376                           
  3377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1374:   if(
      +                          flag & 0x4000) {
  3378  0751  1F40               	btfss	(sprintf@flag+1)^(0+128),6
  3379  0752  2F54               	goto	u5961
  3380  0753  2F55               	goto	u5960
  3381  0754                     u5961:	
  3382  0754  2F70               	goto	l3450
  3383  0755                     u5960:	
  3384  0755                     l3444:	
  3385                           
  3386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1375:    if
      +                          (width > prec)
  3387  0755  084F               	movf	(sprintf@prec+1)^(0+128),w
  3388  0756  3A80               	xorlw	128
  3389  0757  00B1               	movwf	??_sprintf^(0+128)
  3390  0758  0842               	movf	(sprintf@width+1)^(0+128),w
  3391  0759  3A80               	xorlw	128
  3392  075A  0231               	subwf	??_sprintf^(0+128),w
  3393  075B  1D03               	skipz
  3394  075C  2F5F               	goto	u5975
  3395  075D  0841               	movf	sprintf@width^(0+128),w
  3396  075E  024E               	subwf	sprintf@prec^(0+128),w
  3397  075F                     u5975:	
  3398  075F  1803               	skipnc
  3399  0760  2F62               	goto	u5971
  3400  0761  2F63               	goto	u5970
  3401  0762                     u5971:	
  3402  0762  2F6C               	goto	l3448
  3403  0763                     u5970:	
  3404  0763                     l3446:	
  3405                           
  3406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1376:     w
      +                          idth -= prec;
  3407  0763  1683               	bsf	3,5	;RP0=1, select bank1
  3408  0764  1303               	bcf	3,6	;RP1=0, select bank1
  3409  0765  084E               	movf	sprintf@prec^(0+128),w
  3410  0766  02C1               	subwf	sprintf@width^(0+128),f
  3411  0767  084F               	movf	(sprintf@prec+1)^(0+128),w
  3412  0768  1C03               	skipc
  3413  0769  03C2               	decf	(sprintf@width+1)^(0+128),f
  3414  076A  02C2               	subwf	(sprintf@width+1)^(0+128),f
  3415  076B  2F70               	goto	l3450
  3416  076C                     l3448:	
  3417                           
  3418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1378:     w
      +                          idth = 0;
  3419  076C  1683               	bsf	3,5	;RP0=1, select bank1
  3420  076D  1303               	bcf	3,6	;RP1=0, select bank1
  3421  076E  01C1               	clrf	sprintf@width^(0+128)
  3422  076F  01C2               	clrf	(sprintf@width+1)^(0+128)
  3423  0770                     l3450:	
  3424                           
  3425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  3426  0770  0842               	movf	(sprintf@width+1)^(0+128),w
  3427  0771  3A80               	xorlw	128
  3428  0772  3C80               	sublw	128
  3429  0773  1D03               	skipz
  3430  0774  2F77               	goto	u5985
  3431  0775  0841               	movf	sprintf@width^(0+128),w
  3432  0776  0250               	subwf	sprintf@c^(0+128),w
  3433  0777                     u5985:	
  3434  0777  1803               	skipnc
  3435  0778  2F7A               	goto	u5981
  3436  0779  2F7B               	goto	u5980
  3437  077A                     u5981:	
  3438  077A  2F87               	goto	l3454
  3439  077B                     u5980:	
  3440  077B                     l3452:	
  3441                           
  3442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  3443  077B  1683               	bsf	3,5	;RP0=1, select bank1
  3444  077C  1303               	bcf	3,6	;RP1=0, select bank1
  3445  077D  0850               	movf	sprintf@c^(0+128),w
  3446  077E  00B1               	movwf	??_sprintf^(0+128)
  3447  077F  01B2               	clrf	(??_sprintf^(0+128)+1)
  3448  0780  0831               	movf	??_sprintf^(0+128),w
  3449  0781  02C1               	subwf	sprintf@width^(0+128),f
  3450  0782  0832               	movf	(??_sprintf+1)^(0+128),w
  3451  0783  1C03               	skipc
  3452  0784  03C2               	decf	(sprintf@width+1)^(0+128),f
  3453  0785  02C2               	subwf	(sprintf@width+1)^(0+128),f
  3454  0786  2F8B               	goto	l3456
  3455  0787                     l3454:	
  3456                           
  3457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  3458  0787  1683               	bsf	3,5	;RP0=1, select bank1
  3459  0788  1303               	bcf	3,6	;RP1=0, select bank1
  3460  0789  01C1               	clrf	sprintf@width^(0+128)
  3461  078A  01C2               	clrf	(sprintf@width+1)^(0+128)
  3462  078B                     l3456:	
  3463                           
  3464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  3465  078B  0841               	movf	sprintf@width^(0+128),w
  3466  078C  0442               	iorwf	(sprintf@width+1)^(0+128),w
  3467  078D  1903               	btfsc	3,2
  3468  078E  2F90               	goto	u5991
  3469  078F  2F91               	goto	u5990
  3470  0790                     u5991:	
  3471  0790  2FA8               	goto	l3464
  3472  0791                     u5990:	
  3473  0791                     l3458:	
  3474                           
  3475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  3476  0791  3020               	movlw	32
  3477  0792  00B1               	movwf	??_sprintf^(0+128)
  3478  0793  084D               	movf	sprintf@sp^(0+128),w
  3479  0794  0084               	movwf	4
  3480  0795  0831               	movf	??_sprintf^(0+128),w
  3481  0796  1383               	bcf	3,7	;select IRP bank0
  3482  0797  0080               	movwf	0
  3483  0798                     l3460:	
  3484  0798  3001               	movlw	1
  3485  0799  00B1               	movwf	??_sprintf^(0+128)
  3486  079A  0831               	movf	??_sprintf^(0+128),w
  3487  079B  07CD               	addwf	sprintf@sp^(0+128),f
  3488  079C                     l3462:	
  3489  079C  30FF               	movlw	255
  3490  079D  07C1               	addwf	sprintf@width^(0+128),f
  3491  079E  1803               	skipnc
  3492  079F  0AC2               	incf	(sprintf@width+1)^(0+128),f
  3493  07A0  30FF               	movlw	255
  3494  07A1  07C2               	addwf	(sprintf@width+1)^(0+128),f
  3495  07A2  0841               	movf	sprintf@width^(0+128),w
  3496  07A3  0442               	iorwf	(sprintf@width+1)^(0+128),w
  3497  07A4  1D03               	btfss	3,2
  3498  07A5  2FA7               	goto	u6001
  3499  07A6  2FA8               	goto	u6000
  3500  07A7                     u6001:	
  3501  07A7  2F91               	goto	l3458
  3502  07A8                     u6000:	
  3503  07A8                     l3464:	
  3504                           
  3505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
  3506  07A8  3003               	movlw	3
  3507  07A9  053F               	andwf	sprintf@flag^(0+128),w
  3508  07AA  00B1               	movwf	??_sprintf^(0+128)
  3509  07AB  3000               	movlw	0
  3510  07AC  0540               	andwf	(sprintf@flag+1)^(0+128),w
  3511  07AD  00B2               	movwf	(??_sprintf+1)^(0+128)
  3512  07AE  0831               	movf	??_sprintf^(0+128),w
  3513  07AF  0432               	iorwf	(??_sprintf^(0+128)+1),w
  3514  07B0  1903               	btfsc	3,2
  3515  07B1  2FB3               	goto	u6011
  3516  07B2  2FB4               	goto	u6010
  3517  07B3                     u6011:	
  3518  07B3  2FBC               	goto	l3470
  3519  07B4                     u6010:	
  3520  07B4                     l3466:	
  3521                           
  3522                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3523  07B4  302D               	movlw	45
  3524  07B5  00B1               	movwf	??_sprintf^(0+128)
  3525  07B6  084D               	movf	sprintf@sp^(0+128),w
  3526  07B7  0084               	movwf	4
  3527  07B8  0831               	movf	??_sprintf^(0+128),w
  3528  07B9  1383               	bcf	3,7	;select IRP bank0
  3529  07BA  0080               	movwf	0
  3530  07BB  286D               	goto	l3226
  3531  07BC                     l3470:	
  3532                           
  3533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3534  07BC  3001               	movlw	1
  3535  07BD  07AC               	addwf	sprintf@f^(0+128),f
  3536  07BE  30FF               	movlw	-1
  3537  07BF  072C               	addwf	sprintf@f^(0+128),w
  3538  07C0  0084               	movwf	4
  3539  07C1  160A  118A  2000  120A  118A  	fcall	stringdir
  3540  07C6  00B1               	movwf	??_sprintf^(0+128)
  3541  07C7  0831               	movf	??_sprintf^(0+128),w
  3542  07C8  00D0               	movwf	sprintf@c^(0+128)
  3543  07C9  0850               	movf	sprintf@c^(0+128),w
  3544  07CA  1D03               	btfss	3,2
  3545  07CB  2FCD               	goto	u6021
  3546  07CC  2FCE               	goto	u6020
  3547  07CD                     u6021:	
  3548  07CD  2860               	goto	l3222
  3549  07CE                     u6020:	
  3550  07CE                     l3472:	
  3551                           
  3552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3553  07CE  084D               	movf	sprintf@sp^(0+128),w
  3554  07CF  0084               	movwf	4
  3555  07D0  1383               	bcf	3,7	;select IRP bank0
  3556  07D1  0180               	clrf	0
  3557  07D2                     l373:	
  3558  07D2  0008               	return
  3559  07D3                     __end_of_sprintf:	
  3560                           
  3561                           	psect	text2
  3562  0940                     __ptext2:	
  3563 ;; *************** function _scale *****************
  3564 ;; Defined at:
  3565 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  scl             1    wreg     char 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  scl             1   48[BANK0 ] char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  4   30[BANK0 ] char 
  3572 ;; Registers used:
  3573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3579 ;;      Params:         0       4       0       0       0
  3580 ;;      Locals:         0       5       0       0       0
  3581 ;;      Temps:          0      10       0       0       0
  3582 ;;      Totals:         0      19       0       0       0
  3583 ;;Total ram usage:       19 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    2
  3586 ;; This function calls:
  3587 ;;		___awdiv
  3588 ;;		___awmod
  3589 ;;		___flmul
  3590 ;; This function is called by:
  3591 ;;		_sprintf
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           
  3596                           ;psect for function _scale
  3597  0940                     _scale:	
  3598                           
  3599                           ;incstack = 0
  3600                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3601                           ;scale@scl stored from wreg
  3602  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0942  00D0               	movwf	scale@scl
  3605  0943                     l2910:	
  3606                           
  3607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3608  0943  1FD0               	btfss	scale@scl,7
  3609  0944  2946               	goto	u4791
  3610  0945  2947               	goto	u4790
  3611  0946                     u4791:	
  3612  0946  2AF4               	goto	l2932
  3613  0947                     u4790:	
  3614  0947                     l2912:	
  3615                           
  3616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3617  0947  09D0               	comf	scale@scl,f
  3618  0948  0AD0               	incf	scale@scl,f
  3619  0949                     l2914:	
  3620                           
  3621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3622  0949  0850               	movf	scale@scl,w
  3623  094A  3A80               	xorlw	128
  3624  094B  3E12               	addlw	-238
  3625  094C  1C03               	skipc
  3626  094D  294F               	goto	u4801
  3627  094E  2950               	goto	u4800
  3628  094F                     u4801:	
  3629  094F  2A38               	goto	l2922
  3630  0950                     u4800:	
  3631  0950                     l2916:	
  3632                           
  3633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3634  0950  300A               	movlw	10
  3635  0951  00F7               	movwf	___awdiv@divisor
  3636  0952  3000               	movlw	0
  3637  0953  00F8               	movwf	___awdiv@divisor+1
  3638  0954  0850               	movf	scale@scl,w
  3639  0955  00F2               	movwf	___awmod@dividend
  3640  0956  01F3               	clrf	___awmod@dividend+1
  3641  0957  1BF2               	btfsc	___awmod@dividend,7
  3642  0958  03F3               	decf	___awmod@dividend+1,f
  3643  0959  3064               	movlw	100
  3644  095A  00F0               	movwf	___awmod@divisor
  3645  095B  3000               	movlw	0
  3646  095C  00F1               	movwf	___awmod@divisor+1
  3647  095D  160A  158A  2598  120A  158A  	fcall	___awmod
  3648  0962  0871               	movf	?___awmod+1,w
  3649  0963  00FA               	movwf	___awdiv@dividend+1
  3650  0964  0870               	movf	?___awmod,w
  3651  0965  00F9               	movwf	___awdiv@dividend
  3652  0966  160A  158A  271D  120A  158A  	fcall	___awdiv
  3653  096B  0877               	movf	?___awdiv,w
  3654  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3655  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3656  096E  00C2               	movwf	??_scale
  3657  096F  3001               	movlw	1
  3658  0970                     u4815:	
  3659  0970  1003               	clrc
  3660  0971  0DC2               	rlf	??_scale,f
  3661  0972  3EFF               	addlw	-1
  3662  0973  1D03               	skipz
  3663  0974  2970               	goto	u4815
  3664  0975  1003               	clrc
  3665  0976  0D42               	rlf	??_scale,w
  3666  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3667  0978  0084               	movwf	4
  3668  0979  160A  118A  2000  120A  158A  	fcall	stringdir
  3669  097E  00C3               	movwf	??_scale+1
  3670  097F  160A  118A  2000  120A  158A  	fcall	stringdir
  3671  0984  00C4               	movwf	??_scale+2
  3672  0985  160A  118A  2000  120A  158A  	fcall	stringdir
  3673  098A  00C5               	movwf	??_scale+3
  3674  098B  160A  118A  2000  120A  158A  	fcall	stringdir
  3675  0990  00C6               	movwf	??_scale+4
  3676  0991  0846               	movf	??_scale+4,w
  3677  0992  00A7               	movwf	___flmul@b+3
  3678  0993  0845               	movf	??_scale+3,w
  3679  0994  00A6               	movwf	___flmul@b+2
  3680  0995  0844               	movf	??_scale+2,w
  3681  0996  00A5               	movwf	___flmul@b+1
  3682  0997  0843               	movf	??_scale+1,w
  3683  0998  00A4               	movwf	___flmul@b
  3684  0999  3064               	movlw	100
  3685  099A  00F7               	movwf	___awdiv@divisor
  3686  099B  3000               	movlw	0
  3687  099C  00F8               	movwf	___awdiv@divisor+1
  3688  099D  0850               	movf	scale@scl,w
  3689  099E  00F9               	movwf	___awdiv@dividend
  3690  099F  01FA               	clrf	___awdiv@dividend+1
  3691  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3692  09A1  03FA               	decf	___awdiv@dividend+1,f
  3693  09A2  160A  158A  271D  120A  158A  	fcall	___awdiv
  3694  09A7  0877               	movf	?___awdiv,w
  3695  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3696  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3697  09AA  00C7               	movwf	??_scale+5
  3698  09AB  3001               	movlw	1
  3699  09AC                     u4825:	
  3700  09AC  1003               	clrc
  3701  09AD  0DC7               	rlf	??_scale+5,f
  3702  09AE  3EFF               	addlw	-1
  3703  09AF  1D03               	skipz
  3704  09B0  29AC               	goto	u4825
  3705  09B1  1003               	clrc
  3706  09B2  0D47               	rlf	??_scale+5,w
  3707  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3708  09B4  0084               	movwf	4
  3709  09B5  160A  118A  2000  120A  158A  	fcall	stringdir
  3710  09BA  00C8               	movwf	??_scale+6
  3711  09BB  160A  118A  2000  120A  158A  	fcall	stringdir
  3712  09C0  00C9               	movwf	??_scale+7
  3713  09C1  160A  118A  2000  120A  158A  	fcall	stringdir
  3714  09C6  00CA               	movwf	??_scale+8
  3715  09C7  160A  118A  2000  120A  158A  	fcall	stringdir
  3716  09CC  00CB               	movwf	??_scale+9
  3717  09CD  084B               	movf	??_scale+9,w
  3718  09CE  00AB               	movwf	___flmul@a+3
  3719  09CF  084A               	movf	??_scale+8,w
  3720  09D0  00AA               	movwf	___flmul@a+2
  3721  09D1  0849               	movf	??_scale+7,w
  3722  09D2  00A9               	movwf	___flmul@a+1
  3723  09D3  0848               	movf	??_scale+6,w
  3724  09D4  00A8               	movwf	___flmul@a
  3725  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3726  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3727  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3728  09DC  0827               	movf	?___flmul+3,w
  3729  09DD  00CF               	movwf	_scale$884+3
  3730  09DE  0826               	movf	?___flmul+2,w
  3731  09DF  00CE               	movwf	_scale$884+2
  3732  09E0  0825               	movf	?___flmul+1,w
  3733  09E1  00CD               	movwf	_scale$884+1
  3734  09E2  0824               	movf	?___flmul,w
  3735  09E3  00CC               	movwf	_scale$884
  3736                           
  3737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3738  09E4  300A               	movlw	10
  3739  09E5  00F0               	movwf	___awmod@divisor
  3740  09E6  3000               	movlw	0
  3741  09E7  00F1               	movwf	___awmod@divisor+1
  3742  09E8  0850               	movf	scale@scl,w
  3743  09E9  00F2               	movwf	___awmod@dividend
  3744  09EA  01F3               	clrf	___awmod@dividend+1
  3745  09EB  1BF2               	btfsc	___awmod@dividend,7
  3746  09EC  03F3               	decf	___awmod@dividend+1,f
  3747  09ED  160A  158A  2598  120A  158A  	fcall	___awmod
  3748  09F2  0870               	movf	?___awmod,w
  3749  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3750  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3751  09F5  00C2               	movwf	??_scale
  3752  09F6  3001               	movlw	1
  3753  09F7                     u4835:	
  3754  09F7  1003               	clrc
  3755  09F8  0DC2               	rlf	??_scale,f
  3756  09F9  3EFF               	addlw	-1
  3757  09FA  1D03               	skipz
  3758  09FB  29F7               	goto	u4835
  3759  09FC  1003               	clrc
  3760  09FD  0D42               	rlf	??_scale,w
  3761  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3762  09FF  0084               	movwf	4
  3763  0A00  160A  118A  2000  120A  158A  	fcall	stringdir
  3764  0A05  00C3               	movwf	??_scale+1
  3765  0A06  160A  118A  2000  120A  158A  	fcall	stringdir
  3766  0A0B  00C4               	movwf	??_scale+2
  3767  0A0C  160A  118A  2000  120A  158A  	fcall	stringdir
  3768  0A11  00C5               	movwf	??_scale+3
  3769  0A12  160A  118A  2000  120A  158A  	fcall	stringdir
  3770  0A17  00C6               	movwf	??_scale+4
  3771  0A18  0846               	movf	??_scale+4,w
  3772  0A19  00A7               	movwf	___flmul@b+3
  3773  0A1A  0845               	movf	??_scale+3,w
  3774  0A1B  00A6               	movwf	___flmul@b+2
  3775  0A1C  0844               	movf	??_scale+2,w
  3776  0A1D  00A5               	movwf	___flmul@b+1
  3777  0A1E  0843               	movf	??_scale+1,w
  3778  0A1F  00A4               	movwf	___flmul@b
  3779  0A20  084F               	movf	_scale$884+3,w
  3780  0A21  00AB               	movwf	___flmul@a+3
  3781  0A22  084E               	movf	_scale$884+2,w
  3782  0A23  00AA               	movwf	___flmul@a+2
  3783  0A24  084D               	movf	_scale$884+1,w
  3784  0A25  00A9               	movwf	___flmul@a+1
  3785  0A26  084C               	movf	_scale$884,w
  3786  0A27  00A8               	movwf	___flmul@a
  3787  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3788  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3789  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3790  0A2F  0827               	movf	?___flmul+3,w
  3791  0A30  00C1               	movwf	?_scale+3
  3792  0A31  0826               	movf	?___flmul+2,w
  3793  0A32  00C0               	movwf	?_scale+2
  3794  0A33  0825               	movf	?___flmul+1,w
  3795  0A34  00BF               	movwf	?_scale+1
  3796  0A35  0824               	movf	?___flmul,w
  3797  0A36  00BE               	movwf	?_scale
  3798  0A37  2C9E               	goto	l290
  3799  0A38                     l2922:	
  3800  0A38  0850               	movf	scale@scl,w
  3801  0A39  3A80               	xorlw	128
  3802  0A3A  3E75               	addlw	-139
  3803  0A3B  1C03               	skipc
  3804  0A3C  2A3E               	goto	u4841
  3805  0A3D  2A3F               	goto	u4840
  3806  0A3E                     u4841:	
  3807  0A3E  2AC7               	goto	l2928
  3808  0A3F                     u4840:	
  3809  0A3F                     l2924:	
  3810                           
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3812  0A3F  300A               	movlw	10
  3813  0A40  00F0               	movwf	___awmod@divisor
  3814  0A41  3000               	movlw	0
  3815  0A42  00F1               	movwf	___awmod@divisor+1
  3816  0A43  0850               	movf	scale@scl,w
  3817  0A44  00F2               	movwf	___awmod@dividend
  3818  0A45  01F3               	clrf	___awmod@dividend+1
  3819  0A46  1BF2               	btfsc	___awmod@dividend,7
  3820  0A47  03F3               	decf	___awmod@dividend+1,f
  3821  0A48  160A  158A  2598  120A  158A  	fcall	___awmod
  3822  0A4D  0870               	movf	?___awmod,w
  3823  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3825  0A50  00C2               	movwf	??_scale
  3826  0A51  3001               	movlw	1
  3827  0A52                     u4855:	
  3828  0A52  1003               	clrc
  3829  0A53  0DC2               	rlf	??_scale,f
  3830  0A54  3EFF               	addlw	-1
  3831  0A55  1D03               	skipz
  3832  0A56  2A52               	goto	u4855
  3833  0A57  1003               	clrc
  3834  0A58  0D42               	rlf	??_scale,w
  3835  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3836  0A5A  0084               	movwf	4
  3837  0A5B  160A  118A  2000  120A  158A  	fcall	stringdir
  3838  0A60  00C3               	movwf	??_scale+1
  3839  0A61  160A  118A  2000  120A  158A  	fcall	stringdir
  3840  0A66  00C4               	movwf	??_scale+2
  3841  0A67  160A  118A  2000  120A  158A  	fcall	stringdir
  3842  0A6C  00C5               	movwf	??_scale+3
  3843  0A6D  160A  118A  2000  120A  158A  	fcall	stringdir
  3844  0A72  00C6               	movwf	??_scale+4
  3845  0A73  0846               	movf	??_scale+4,w
  3846  0A74  00A7               	movwf	___flmul@b+3
  3847  0A75  0845               	movf	??_scale+3,w
  3848  0A76  00A6               	movwf	___flmul@b+2
  3849  0A77  0844               	movf	??_scale+2,w
  3850  0A78  00A5               	movwf	___flmul@b+1
  3851  0A79  0843               	movf	??_scale+1,w
  3852  0A7A  00A4               	movwf	___flmul@b
  3853  0A7B  300A               	movlw	10
  3854  0A7C  00F7               	movwf	___awdiv@divisor
  3855  0A7D  3000               	movlw	0
  3856  0A7E  00F8               	movwf	___awdiv@divisor+1
  3857  0A7F  0850               	movf	scale@scl,w
  3858  0A80  00F9               	movwf	___awdiv@dividend
  3859  0A81  01FA               	clrf	___awdiv@dividend+1
  3860  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3861  0A83  03FA               	decf	___awdiv@dividend+1,f
  3862  0A84  160A  158A  271D  120A  158A  	fcall	___awdiv
  3863  0A89  0877               	movf	?___awdiv,w
  3864  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3866  0A8C  00C7               	movwf	??_scale+5
  3867  0A8D  3001               	movlw	1
  3868  0A8E                     u4865:	
  3869  0A8E  1003               	clrc
  3870  0A8F  0DC7               	rlf	??_scale+5,f
  3871  0A90  3EFF               	addlw	-1
  3872  0A91  1D03               	skipz
  3873  0A92  2A8E               	goto	u4865
  3874  0A93  1003               	clrc
  3875  0A94  0D47               	rlf	??_scale+5,w
  3876  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3877  0A96  0084               	movwf	4
  3878  0A97  160A  118A  2000  120A  158A  	fcall	stringdir
  3879  0A9C  00C8               	movwf	??_scale+6
  3880  0A9D  160A  118A  2000  120A  158A  	fcall	stringdir
  3881  0AA2  00C9               	movwf	??_scale+7
  3882  0AA3  160A  118A  2000  120A  158A  	fcall	stringdir
  3883  0AA8  00CA               	movwf	??_scale+8
  3884  0AA9  160A  118A  2000  120A  158A  	fcall	stringdir
  3885  0AAE  00CB               	movwf	??_scale+9
  3886  0AAF  084B               	movf	??_scale+9,w
  3887  0AB0  00AB               	movwf	___flmul@a+3
  3888  0AB1  084A               	movf	??_scale+8,w
  3889  0AB2  00AA               	movwf	___flmul@a+2
  3890  0AB3  0849               	movf	??_scale+7,w
  3891  0AB4  00A9               	movwf	___flmul@a+1
  3892  0AB5  0848               	movf	??_scale+6,w
  3893  0AB6  00A8               	movwf	___flmul@a
  3894  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3895  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3897  0ABE  0827               	movf	?___flmul+3,w
  3898  0ABF  00C1               	movwf	?_scale+3
  3899  0AC0  0826               	movf	?___flmul+2,w
  3900  0AC1  00C0               	movwf	?_scale+2
  3901  0AC2  0825               	movf	?___flmul+1,w
  3902  0AC3  00BF               	movwf	?_scale+1
  3903  0AC4  0824               	movf	?___flmul,w
  3904  0AC5  00BE               	movwf	?_scale
  3905  0AC6  2C9E               	goto	l290
  3906  0AC7                     l2928:	
  3907                           
  3908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3909  0AC7  0850               	movf	scale@scl,w
  3910  0AC8  00C2               	movwf	??_scale
  3911  0AC9  3001               	movlw	1
  3912  0ACA                     u4875:	
  3913  0ACA  1003               	clrc
  3914  0ACB  0DC2               	rlf	??_scale,f
  3915  0ACC  3EFF               	addlw	-1
  3916  0ACD  1D03               	skipz
  3917  0ACE  2ACA               	goto	u4875
  3918  0ACF  1003               	clrc
  3919  0AD0  0D42               	rlf	??_scale,w
  3920  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3921  0AD2  0084               	movwf	4
  3922  0AD3  160A  118A  2000  120A  158A  	fcall	stringdir
  3923  0AD8  00C3               	movwf	??_scale+1
  3924  0AD9  160A  118A  2000  120A  158A  	fcall	stringdir
  3925  0ADE  00C4               	movwf	??_scale+2
  3926  0ADF  160A  118A  2000  120A  158A  	fcall	stringdir
  3927  0AE4  00C5               	movwf	??_scale+3
  3928  0AE5  160A  118A  2000  120A  158A  	fcall	stringdir
  3929  0AEA  00C6               	movwf	??_scale+4
  3930  0AEB  0846               	movf	??_scale+4,w
  3931  0AEC  00C1               	movwf	?_scale+3
  3932  0AED  0845               	movf	??_scale+3,w
  3933  0AEE  00C0               	movwf	?_scale+2
  3934  0AEF  0844               	movf	??_scale+2,w
  3935  0AF0  00BF               	movwf	?_scale+1
  3936  0AF1  0843               	movf	??_scale+1,w
  3937  0AF2  00BE               	movwf	?_scale
  3938  0AF3  2C9E               	goto	l290
  3939  0AF4                     l2932:	
  3940                           
  3941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3942  0AF4  0850               	movf	scale@scl,w
  3943  0AF5  3A80               	xorlw	128
  3944  0AF6  3E12               	addlw	-238
  3945  0AF7  1C03               	skipc
  3946  0AF8  2AFA               	goto	u4881
  3947  0AF9  2AFB               	goto	u4880
  3948  0AFA                     u4881:	
  3949  0AFA  2BE3               	goto	l2940
  3950  0AFB                     u4880:	
  3951  0AFB                     l2934:	
  3952                           
  3953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3954  0AFB  300A               	movlw	10
  3955  0AFC  00F7               	movwf	___awdiv@divisor
  3956  0AFD  3000               	movlw	0
  3957  0AFE  00F8               	movwf	___awdiv@divisor+1
  3958  0AFF  0850               	movf	scale@scl,w
  3959  0B00  00F2               	movwf	___awmod@dividend
  3960  0B01  01F3               	clrf	___awmod@dividend+1
  3961  0B02  1BF2               	btfsc	___awmod@dividend,7
  3962  0B03  03F3               	decf	___awmod@dividend+1,f
  3963  0B04  3064               	movlw	100
  3964  0B05  00F0               	movwf	___awmod@divisor
  3965  0B06  3000               	movlw	0
  3966  0B07  00F1               	movwf	___awmod@divisor+1
  3967  0B08  160A  158A  2598  120A  158A  	fcall	___awmod
  3968  0B0D  0871               	movf	?___awmod+1,w
  3969  0B0E  00FA               	movwf	___awdiv@dividend+1
  3970  0B0F  0870               	movf	?___awmod,w
  3971  0B10  00F9               	movwf	___awdiv@dividend
  3972  0B11  160A  158A  271D  120A  158A  	fcall	___awdiv
  3973  0B16  0877               	movf	?___awdiv,w
  3974  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0B19  00C2               	movwf	??_scale
  3977  0B1A  3001               	movlw	1
  3978  0B1B                     u4895:	
  3979  0B1B  1003               	clrc
  3980  0B1C  0DC2               	rlf	??_scale,f
  3981  0B1D  3EFF               	addlw	-1
  3982  0B1E  1D03               	skipz
  3983  0B1F  2B1B               	goto	u4895
  3984  0B20  1003               	clrc
  3985  0B21  0D42               	rlf	??_scale,w
  3986  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3987  0B23  0084               	movwf	4
  3988  0B24  160A  118A  2000  120A  158A  	fcall	stringdir
  3989  0B29  00C3               	movwf	??_scale+1
  3990  0B2A  160A  118A  2000  120A  158A  	fcall	stringdir
  3991  0B2F  00C4               	movwf	??_scale+2
  3992  0B30  160A  118A  2000  120A  158A  	fcall	stringdir
  3993  0B35  00C5               	movwf	??_scale+3
  3994  0B36  160A  118A  2000  120A  158A  	fcall	stringdir
  3995  0B3B  00C6               	movwf	??_scale+4
  3996  0B3C  0846               	movf	??_scale+4,w
  3997  0B3D  00A7               	movwf	___flmul@b+3
  3998  0B3E  0845               	movf	??_scale+3,w
  3999  0B3F  00A6               	movwf	___flmul@b+2
  4000  0B40  0844               	movf	??_scale+2,w
  4001  0B41  00A5               	movwf	___flmul@b+1
  4002  0B42  0843               	movf	??_scale+1,w
  4003  0B43  00A4               	movwf	___flmul@b
  4004  0B44  3064               	movlw	100
  4005  0B45  00F7               	movwf	___awdiv@divisor
  4006  0B46  3000               	movlw	0
  4007  0B47  00F8               	movwf	___awdiv@divisor+1
  4008  0B48  0850               	movf	scale@scl,w
  4009  0B49  00F9               	movwf	___awdiv@dividend
  4010  0B4A  01FA               	clrf	___awdiv@dividend+1
  4011  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4012  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4013  0B4D  160A  158A  271D  120A  158A  	fcall	___awdiv
  4014  0B52  0877               	movf	?___awdiv,w
  4015  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0B55  00C7               	movwf	??_scale+5
  4018  0B56  3001               	movlw	1
  4019  0B57                     u4905:	
  4020  0B57  1003               	clrc
  4021  0B58  0DC7               	rlf	??_scale+5,f
  4022  0B59  3EFF               	addlw	-1
  4023  0B5A  1D03               	skipz
  4024  0B5B  2B57               	goto	u4905
  4025  0B5C  1003               	clrc
  4026  0B5D  0D47               	rlf	??_scale+5,w
  4027  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4028  0B5F  0084               	movwf	4
  4029  0B60  160A  118A  2000  120A  158A  	fcall	stringdir
  4030  0B65  00C8               	movwf	??_scale+6
  4031  0B66  160A  118A  2000  120A  158A  	fcall	stringdir
  4032  0B6B  00C9               	movwf	??_scale+7
  4033  0B6C  160A  118A  2000  120A  158A  	fcall	stringdir
  4034  0B71  00CA               	movwf	??_scale+8
  4035  0B72  160A  118A  2000  120A  158A  	fcall	stringdir
  4036  0B77  00CB               	movwf	??_scale+9
  4037  0B78  084B               	movf	??_scale+9,w
  4038  0B79  00AB               	movwf	___flmul@a+3
  4039  0B7A  084A               	movf	??_scale+8,w
  4040  0B7B  00AA               	movwf	___flmul@a+2
  4041  0B7C  0849               	movf	??_scale+7,w
  4042  0B7D  00A9               	movwf	___flmul@a+1
  4043  0B7E  0848               	movf	??_scale+6,w
  4044  0B7F  00A8               	movwf	___flmul@a
  4045  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4046  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0B87  0827               	movf	?___flmul+3,w
  4049  0B88  00CF               	movwf	_scale$884+3
  4050  0B89  0826               	movf	?___flmul+2,w
  4051  0B8A  00CE               	movwf	_scale$884+2
  4052  0B8B  0825               	movf	?___flmul+1,w
  4053  0B8C  00CD               	movwf	_scale$884+1
  4054  0B8D  0824               	movf	?___flmul,w
  4055  0B8E  00CC               	movwf	_scale$884
  4056                           
  4057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4058  0B8F  300A               	movlw	10
  4059  0B90  00F0               	movwf	___awmod@divisor
  4060  0B91  3000               	movlw	0
  4061  0B92  00F1               	movwf	___awmod@divisor+1
  4062  0B93  0850               	movf	scale@scl,w
  4063  0B94  00F2               	movwf	___awmod@dividend
  4064  0B95  01F3               	clrf	___awmod@dividend+1
  4065  0B96  1BF2               	btfsc	___awmod@dividend,7
  4066  0B97  03F3               	decf	___awmod@dividend+1,f
  4067  0B98  160A  158A  2598  120A  158A  	fcall	___awmod
  4068  0B9D  0870               	movf	?___awmod,w
  4069  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0BA0  00C2               	movwf	??_scale
  4072  0BA1  3001               	movlw	1
  4073  0BA2                     u4915:	
  4074  0BA2  1003               	clrc
  4075  0BA3  0DC2               	rlf	??_scale,f
  4076  0BA4  3EFF               	addlw	-1
  4077  0BA5  1D03               	skipz
  4078  0BA6  2BA2               	goto	u4915
  4079  0BA7  1003               	clrc
  4080  0BA8  0D42               	rlf	??_scale,w
  4081  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4082  0BAA  0084               	movwf	4
  4083  0BAB  160A  118A  2000  120A  158A  	fcall	stringdir
  4084  0BB0  00C3               	movwf	??_scale+1
  4085  0BB1  160A  118A  2000  120A  158A  	fcall	stringdir
  4086  0BB6  00C4               	movwf	??_scale+2
  4087  0BB7  160A  118A  2000  120A  158A  	fcall	stringdir
  4088  0BBC  00C5               	movwf	??_scale+3
  4089  0BBD  160A  118A  2000  120A  158A  	fcall	stringdir
  4090  0BC2  00C6               	movwf	??_scale+4
  4091  0BC3  0846               	movf	??_scale+4,w
  4092  0BC4  00A7               	movwf	___flmul@b+3
  4093  0BC5  0845               	movf	??_scale+3,w
  4094  0BC6  00A6               	movwf	___flmul@b+2
  4095  0BC7  0844               	movf	??_scale+2,w
  4096  0BC8  00A5               	movwf	___flmul@b+1
  4097  0BC9  0843               	movf	??_scale+1,w
  4098  0BCA  00A4               	movwf	___flmul@b
  4099  0BCB  084F               	movf	_scale$884+3,w
  4100  0BCC  00AB               	movwf	___flmul@a+3
  4101  0BCD  084E               	movf	_scale$884+2,w
  4102  0BCE  00AA               	movwf	___flmul@a+2
  4103  0BCF  084D               	movf	_scale$884+1,w
  4104  0BD0  00A9               	movwf	___flmul@a+1
  4105  0BD1  084C               	movf	_scale$884,w
  4106  0BD2  00A8               	movwf	___flmul@a
  4107  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4108  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4109  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4110  0BDA  0827               	movf	?___flmul+3,w
  4111  0BDB  00C1               	movwf	?_scale+3
  4112  0BDC  0826               	movf	?___flmul+2,w
  4113  0BDD  00C0               	movwf	?_scale+2
  4114  0BDE  0825               	movf	?___flmul+1,w
  4115  0BDF  00BF               	movwf	?_scale+1
  4116  0BE0  0824               	movf	?___flmul,w
  4117  0BE1  00BE               	movwf	?_scale
  4118  0BE2  2C9E               	goto	l290
  4119  0BE3                     l2940:	
  4120  0BE3  0850               	movf	scale@scl,w
  4121  0BE4  3A80               	xorlw	128
  4122  0BE5  3E75               	addlw	-139
  4123  0BE6  1C03               	skipc
  4124  0BE7  2BE9               	goto	u4921
  4125  0BE8  2BEA               	goto	u4920
  4126  0BE9                     u4921:	
  4127  0BE9  2C72               	goto	l2946
  4128  0BEA                     u4920:	
  4129  0BEA                     l2942:	
  4130                           
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4132  0BEA  300A               	movlw	10
  4133  0BEB  00F0               	movwf	___awmod@divisor
  4134  0BEC  3000               	movlw	0
  4135  0BED  00F1               	movwf	___awmod@divisor+1
  4136  0BEE  0850               	movf	scale@scl,w
  4137  0BEF  00F2               	movwf	___awmod@dividend
  4138  0BF0  01F3               	clrf	___awmod@dividend+1
  4139  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4140  0BF2  03F3               	decf	___awmod@dividend+1,f
  4141  0BF3  160A  158A  2598  120A  158A  	fcall	___awmod
  4142  0BF8  0870               	movf	?___awmod,w
  4143  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4144  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4145  0BFB  00C2               	movwf	??_scale
  4146  0BFC  3001               	movlw	1
  4147  0BFD                     u4935:	
  4148  0BFD  1003               	clrc
  4149  0BFE  0DC2               	rlf	??_scale,f
  4150  0BFF  3EFF               	addlw	-1
  4151  0C00  1D03               	skipz
  4152  0C01  2BFD               	goto	u4935
  4153  0C02  1003               	clrc
  4154  0C03  0D42               	rlf	??_scale,w
  4155  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4156  0C05  0084               	movwf	4
  4157  0C06  160A  118A  2000  120A  158A  	fcall	stringdir
  4158  0C0B  00C3               	movwf	??_scale+1
  4159  0C0C  160A  118A  2000  120A  158A  	fcall	stringdir
  4160  0C11  00C4               	movwf	??_scale+2
  4161  0C12  160A  118A  2000  120A  158A  	fcall	stringdir
  4162  0C17  00C5               	movwf	??_scale+3
  4163  0C18  160A  118A  2000  120A  158A  	fcall	stringdir
  4164  0C1D  00C6               	movwf	??_scale+4
  4165  0C1E  0846               	movf	??_scale+4,w
  4166  0C1F  00A7               	movwf	___flmul@b+3
  4167  0C20  0845               	movf	??_scale+3,w
  4168  0C21  00A6               	movwf	___flmul@b+2
  4169  0C22  0844               	movf	??_scale+2,w
  4170  0C23  00A5               	movwf	___flmul@b+1
  4171  0C24  0843               	movf	??_scale+1,w
  4172  0C25  00A4               	movwf	___flmul@b
  4173  0C26  300A               	movlw	10
  4174  0C27  00F7               	movwf	___awdiv@divisor
  4175  0C28  3000               	movlw	0
  4176  0C29  00F8               	movwf	___awdiv@divisor+1
  4177  0C2A  0850               	movf	scale@scl,w
  4178  0C2B  00F9               	movwf	___awdiv@dividend
  4179  0C2C  01FA               	clrf	___awdiv@dividend+1
  4180  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4181  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4182  0C2F  160A  158A  271D  120A  158A  	fcall	___awdiv
  4183  0C34  0877               	movf	?___awdiv,w
  4184  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4185  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4186  0C37  00C7               	movwf	??_scale+5
  4187  0C38  3001               	movlw	1
  4188  0C39                     u4945:	
  4189  0C39  1003               	clrc
  4190  0C3A  0DC7               	rlf	??_scale+5,f
  4191  0C3B  3EFF               	addlw	-1
  4192  0C3C  1D03               	skipz
  4193  0C3D  2C39               	goto	u4945
  4194  0C3E  1003               	clrc
  4195  0C3F  0D47               	rlf	??_scale+5,w
  4196  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4197  0C41  0084               	movwf	4
  4198  0C42  160A  118A  2000  120A  158A  	fcall	stringdir
  4199  0C47  00C8               	movwf	??_scale+6
  4200  0C48  160A  118A  2000  120A  158A  	fcall	stringdir
  4201  0C4D  00C9               	movwf	??_scale+7
  4202  0C4E  160A  118A  2000  120A  158A  	fcall	stringdir
  4203  0C53  00CA               	movwf	??_scale+8
  4204  0C54  160A  118A  2000  120A  158A  	fcall	stringdir
  4205  0C59  00CB               	movwf	??_scale+9
  4206  0C5A  084B               	movf	??_scale+9,w
  4207  0C5B  00AB               	movwf	___flmul@a+3
  4208  0C5C  084A               	movf	??_scale+8,w
  4209  0C5D  00AA               	movwf	___flmul@a+2
  4210  0C5E  0849               	movf	??_scale+7,w
  4211  0C5F  00A9               	movwf	___flmul@a+1
  4212  0C60  0848               	movf	??_scale+6,w
  4213  0C61  00A8               	movwf	___flmul@a
  4214  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4215  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4216  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4217  0C69  0827               	movf	?___flmul+3,w
  4218  0C6A  00C1               	movwf	?_scale+3
  4219  0C6B  0826               	movf	?___flmul+2,w
  4220  0C6C  00C0               	movwf	?_scale+2
  4221  0C6D  0825               	movf	?___flmul+1,w
  4222  0C6E  00BF               	movwf	?_scale+1
  4223  0C6F  0824               	movf	?___flmul,w
  4224  0C70  00BE               	movwf	?_scale
  4225  0C71  2C9E               	goto	l290
  4226  0C72                     l2946:	
  4227                           
  4228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4229  0C72  0850               	movf	scale@scl,w
  4230  0C73  00C2               	movwf	??_scale
  4231  0C74  3001               	movlw	1
  4232  0C75                     u4955:	
  4233  0C75  1003               	clrc
  4234  0C76  0DC2               	rlf	??_scale,f
  4235  0C77  3EFF               	addlw	-1
  4236  0C78  1D03               	skipz
  4237  0C79  2C75               	goto	u4955
  4238  0C7A  1003               	clrc
  4239  0C7B  0D42               	rlf	??_scale,w
  4240  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4241  0C7D  0084               	movwf	4
  4242  0C7E  160A  118A  2000  120A  158A  	fcall	stringdir
  4243  0C83  00C3               	movwf	??_scale+1
  4244  0C84  160A  118A  2000  120A  158A  	fcall	stringdir
  4245  0C89  00C4               	movwf	??_scale+2
  4246  0C8A  160A  118A  2000  120A  158A  	fcall	stringdir
  4247  0C8F  00C5               	movwf	??_scale+3
  4248  0C90  160A  118A  2000  120A  158A  	fcall	stringdir
  4249  0C95  00C6               	movwf	??_scale+4
  4250  0C96  0846               	movf	??_scale+4,w
  4251  0C97  00C1               	movwf	?_scale+3
  4252  0C98  0845               	movf	??_scale+3,w
  4253  0C99  00C0               	movwf	?_scale+2
  4254  0C9A  0844               	movf	??_scale+2,w
  4255  0C9B  00BF               	movwf	?_scale+1
  4256  0C9C  0843               	movf	??_scale+1,w
  4257  0C9D  00BE               	movwf	?_scale
  4258  0C9E                     l290:	
  4259  0C9E  0008               	return
  4260  0C9F                     __end_of_scale:	
  4261                           
  4262                           	psect	text3
  4263  1D98                     __ptext3:	
  4264 ;; *************** function ___awmod *****************
  4265 ;; Defined at:
  4266 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  divisor         2    0[COMMON] int 
  4269 ;;  dividend        2    2[COMMON] int 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  sign            1    6[COMMON] unsigned char 
  4272 ;;  counter         1    5[COMMON] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  2    0[COMMON] int 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4282 ;;      Params:         4       0       0       0       0
  4283 ;;      Locals:         2       0       0       0       0
  4284 ;;      Temps:          1       0       0       0       0
  4285 ;;      Totals:         7       0       0       0       0
  4286 ;;Total ram usage:        7 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_scale
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           
  4296                           ;psect for function ___awmod
  4297  1D98                     ___awmod:	
  4298  1D98                     l2378:	
  4299                           ;incstack = 0
  4300                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4301                           
  4302  1D98  01F6               	clrf	___awmod@sign
  4303  1D99                     l2380:	
  4304  1D99  1FF3               	btfss	___awmod@dividend+1,7
  4305  1D9A  2D9C               	goto	u3481
  4306  1D9B  2D9D               	goto	u3480
  4307  1D9C                     u3481:	
  4308  1D9C  2DA4               	goto	l2386
  4309  1D9D                     u3480:	
  4310  1D9D                     l2382:	
  4311  1D9D  09F2               	comf	___awmod@dividend,f
  4312  1D9E  09F3               	comf	___awmod@dividend+1,f
  4313  1D9F  0AF2               	incf	___awmod@dividend,f
  4314  1DA0  1903               	skipnz
  4315  1DA1  0AF3               	incf	___awmod@dividend+1,f
  4316  1DA2                     l2384:	
  4317  1DA2  01F6               	clrf	___awmod@sign
  4318  1DA3  0AF6               	incf	___awmod@sign,f
  4319  1DA4                     l2386:	
  4320  1DA4  1FF1               	btfss	___awmod@divisor+1,7
  4321  1DA5  2DA7               	goto	u3491
  4322  1DA6  2DA8               	goto	u3490
  4323  1DA7                     u3491:	
  4324  1DA7  2DAD               	goto	l2390
  4325  1DA8                     u3490:	
  4326  1DA8                     l2388:	
  4327  1DA8  09F0               	comf	___awmod@divisor,f
  4328  1DA9  09F1               	comf	___awmod@divisor+1,f
  4329  1DAA  0AF0               	incf	___awmod@divisor,f
  4330  1DAB  1903               	skipnz
  4331  1DAC  0AF1               	incf	___awmod@divisor+1,f
  4332  1DAD                     l2390:	
  4333  1DAD  0870               	movf	___awmod@divisor,w
  4334  1DAE  0471               	iorwf	___awmod@divisor+1,w
  4335  1DAF  1903               	btfsc	3,2
  4336  1DB0  2DB2               	goto	u3501
  4337  1DB1  2DB3               	goto	u3500
  4338  1DB2                     u3501:	
  4339  1DB2  2DE2               	goto	l2408
  4340  1DB3                     u3500:	
  4341  1DB3                     l2392:	
  4342  1DB3  01F5               	clrf	___awmod@counter
  4343  1DB4  0AF5               	incf	___awmod@counter,f
  4344  1DB5  2DC1               	goto	l2398
  4345  1DB6                     l2394:	
  4346  1DB6  3001               	movlw	1
  4347  1DB7                     u3515:	
  4348  1DB7  1003               	clrc
  4349  1DB8  0DF0               	rlf	___awmod@divisor,f
  4350  1DB9  0DF1               	rlf	___awmod@divisor+1,f
  4351  1DBA  3EFF               	addlw	-1
  4352  1DBB  1D03               	skipz
  4353  1DBC  2DB7               	goto	u3515
  4354  1DBD                     l2396:	
  4355  1DBD  3001               	movlw	1
  4356  1DBE  00F4               	movwf	??___awmod
  4357  1DBF  0874               	movf	??___awmod,w
  4358  1DC0  07F5               	addwf	___awmod@counter,f
  4359  1DC1                     l2398:	
  4360  1DC1  1FF1               	btfss	___awmod@divisor+1,7
  4361  1DC2  2DC4               	goto	u3521
  4362  1DC3  2DC5               	goto	u3520
  4363  1DC4                     u3521:	
  4364  1DC4  2DB6               	goto	l2394
  4365  1DC5                     u3520:	
  4366  1DC5                     l2400:	
  4367  1DC5  0871               	movf	___awmod@divisor+1,w
  4368  1DC6  0273               	subwf	___awmod@dividend+1,w
  4369  1DC7  1D03               	skipz
  4370  1DC8  2DCB               	goto	u3535
  4371  1DC9  0870               	movf	___awmod@divisor,w
  4372  1DCA  0272               	subwf	___awmod@dividend,w
  4373  1DCB                     u3535:	
  4374  1DCB  1C03               	skipc
  4375  1DCC  2DCE               	goto	u3531
  4376  1DCD  2DCF               	goto	u3530
  4377  1DCE                     u3531:	
  4378  1DCE  2DD5               	goto	l2404
  4379  1DCF                     u3530:	
  4380  1DCF                     l2402:	
  4381  1DCF  0870               	movf	___awmod@divisor,w
  4382  1DD0  02F2               	subwf	___awmod@dividend,f
  4383  1DD1  0871               	movf	___awmod@divisor+1,w
  4384  1DD2  1C03               	skipc
  4385  1DD3  03F3               	decf	___awmod@dividend+1,f
  4386  1DD4  02F3               	subwf	___awmod@dividend+1,f
  4387  1DD5                     l2404:	
  4388  1DD5  3001               	movlw	1
  4389  1DD6                     u3545:	
  4390  1DD6  1003               	clrc
  4391  1DD7  0CF1               	rrf	___awmod@divisor+1,f
  4392  1DD8  0CF0               	rrf	___awmod@divisor,f
  4393  1DD9  3EFF               	addlw	-1
  4394  1DDA  1D03               	skipz
  4395  1DDB  2DD6               	goto	u3545
  4396  1DDC                     l2406:	
  4397  1DDC  3001               	movlw	1
  4398  1DDD  02F5               	subwf	___awmod@counter,f
  4399  1DDE  1D03               	btfss	3,2
  4400  1DDF  2DE1               	goto	u3551
  4401  1DE0  2DE2               	goto	u3550
  4402  1DE1                     u3551:	
  4403  1DE1  2DC5               	goto	l2400
  4404  1DE2                     u3550:	
  4405  1DE2                     l2408:	
  4406  1DE2  0876               	movf	___awmod@sign,w
  4407  1DE3  1903               	btfsc	3,2
  4408  1DE4  2DE6               	goto	u3561
  4409  1DE5  2DE7               	goto	u3560
  4410  1DE6                     u3561:	
  4411  1DE6  2DEC               	goto	l2412
  4412  1DE7                     u3560:	
  4413  1DE7                     l2410:	
  4414  1DE7  09F2               	comf	___awmod@dividend,f
  4415  1DE8  09F3               	comf	___awmod@dividend+1,f
  4416  1DE9  0AF2               	incf	___awmod@dividend,f
  4417  1DEA  1903               	skipnz
  4418  1DEB  0AF3               	incf	___awmod@dividend+1,f
  4419  1DEC                     l2412:	
  4420  1DEC  0873               	movf	___awmod@dividend+1,w
  4421  1DED  00F1               	movwf	?___awmod+1
  4422  1DEE  0872               	movf	___awmod@dividend,w
  4423  1DEF  00F0               	movwf	?___awmod
  4424  1DF0                     l543:	
  4425  1DF0  0008               	return
  4426  1DF1                     __end_of___awmod:	
  4427                           
  4428                           	psect	text4
  4429  1F1D                     __ptext4:	
  4430 ;; *************** function ___awdiv *****************
  4431 ;; Defined at:
  4432 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  divisor         2    7[COMMON] int 
  4435 ;;  dividend        2    9[COMMON] int 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  quotient        2    2[BANK0 ] int 
  4438 ;;  sign            1    1[BANK0 ] unsigned char 
  4439 ;;  counter         1    0[BANK0 ] unsigned char 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  2    7[COMMON] int 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4449 ;;      Params:         4       0       0       0       0
  4450 ;;      Locals:         0       4       0       0       0
  4451 ;;      Temps:          1       0       0       0       0
  4452 ;;      Totals:         5       4       0       0       0
  4453 ;;Total ram usage:        9 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_scale
  4459 ;;		_sprintf
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           
  4464                           ;psect for function ___awdiv
  4465  1F1D                     ___awdiv:	
  4466  1F1D                     l2334:	
  4467                           ;incstack = 0
  4468                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4469                           
  4470  1F1D  1283               	bcf	3,5	;RP0=0, select bank0
  4471  1F1E  1303               	bcf	3,6	;RP1=0, select bank0
  4472  1F1F  01A1               	clrf	___awdiv@sign
  4473  1F20                     l2336:	
  4474  1F20  1FF8               	btfss	___awdiv@divisor+1,7
  4475  1F21  2F23               	goto	u3381
  4476  1F22  2F24               	goto	u3380
  4477  1F23                     u3381:	
  4478  1F23  2F2B               	goto	l2342
  4479  1F24                     u3380:	
  4480  1F24                     l2338:	
  4481  1F24  09F7               	comf	___awdiv@divisor,f
  4482  1F25  09F8               	comf	___awdiv@divisor+1,f
  4483  1F26  0AF7               	incf	___awdiv@divisor,f
  4484  1F27  1903               	skipnz
  4485  1F28  0AF8               	incf	___awdiv@divisor+1,f
  4486  1F29                     l2340:	
  4487  1F29  01A1               	clrf	___awdiv@sign
  4488  1F2A  0AA1               	incf	___awdiv@sign,f
  4489  1F2B                     l2342:	
  4490  1F2B  1FFA               	btfss	___awdiv@dividend+1,7
  4491  1F2C  2F2E               	goto	u3391
  4492  1F2D  2F2F               	goto	u3390
  4493  1F2E                     u3391:	
  4494  1F2E  2F38               	goto	l2348
  4495  1F2F                     u3390:	
  4496  1F2F                     l2344:	
  4497  1F2F  09F9               	comf	___awdiv@dividend,f
  4498  1F30  09FA               	comf	___awdiv@dividend+1,f
  4499  1F31  0AF9               	incf	___awdiv@dividend,f
  4500  1F32  1903               	skipnz
  4501  1F33  0AFA               	incf	___awdiv@dividend+1,f
  4502  1F34                     l2346:	
  4503  1F34  3001               	movlw	1
  4504  1F35  00FB               	movwf	??___awdiv
  4505  1F36  087B               	movf	??___awdiv,w
  4506  1F37  06A1               	xorwf	___awdiv@sign,f
  4507  1F38                     l2348:	
  4508  1F38  01A2               	clrf	___awdiv@quotient
  4509  1F39  01A3               	clrf	___awdiv@quotient+1
  4510  1F3A                     l2350:	
  4511  1F3A  0877               	movf	___awdiv@divisor,w
  4512  1F3B  0478               	iorwf	___awdiv@divisor+1,w
  4513  1F3C  1903               	btfsc	3,2
  4514  1F3D  2F3F               	goto	u3401
  4515  1F3E  2F40               	goto	u3400
  4516  1F3F                     u3401:	
  4517  1F3F  2F77               	goto	l2370
  4518  1F40                     u3400:	
  4519  1F40                     l2352:	
  4520  1F40  01A0               	clrf	___awdiv@counter
  4521  1F41  0AA0               	incf	___awdiv@counter,f
  4522  1F42  2F4E               	goto	l2358
  4523  1F43                     l2354:	
  4524  1F43  3001               	movlw	1
  4525  1F44                     u3415:	
  4526  1F44  1003               	clrc
  4527  1F45  0DF7               	rlf	___awdiv@divisor,f
  4528  1F46  0DF8               	rlf	___awdiv@divisor+1,f
  4529  1F47  3EFF               	addlw	-1
  4530  1F48  1D03               	skipz
  4531  1F49  2F44               	goto	u3415
  4532  1F4A                     l2356:	
  4533  1F4A  3001               	movlw	1
  4534  1F4B  00FB               	movwf	??___awdiv
  4535  1F4C  087B               	movf	??___awdiv,w
  4536  1F4D  07A0               	addwf	___awdiv@counter,f
  4537  1F4E                     l2358:	
  4538  1F4E  1FF8               	btfss	___awdiv@divisor+1,7
  4539  1F4F  2F51               	goto	u3421
  4540  1F50  2F52               	goto	u3420
  4541  1F51                     u3421:	
  4542  1F51  2F43               	goto	l2354
  4543  1F52                     u3420:	
  4544  1F52                     l2360:	
  4545  1F52  3001               	movlw	1
  4546  1F53                     u3435:	
  4547  1F53  1003               	clrc
  4548  1F54  0DA2               	rlf	___awdiv@quotient,f
  4549  1F55  0DA3               	rlf	___awdiv@quotient+1,f
  4550  1F56  3EFF               	addlw	-1
  4551  1F57  1D03               	skipz
  4552  1F58  2F53               	goto	u3435
  4553  1F59  0878               	movf	___awdiv@divisor+1,w
  4554  1F5A  027A               	subwf	___awdiv@dividend+1,w
  4555  1F5B  1D03               	skipz
  4556  1F5C  2F5F               	goto	u3445
  4557  1F5D  0877               	movf	___awdiv@divisor,w
  4558  1F5E  0279               	subwf	___awdiv@dividend,w
  4559  1F5F                     u3445:	
  4560  1F5F  1C03               	skipc
  4561  1F60  2F62               	goto	u3441
  4562  1F61  2F63               	goto	u3440
  4563  1F62                     u3441:	
  4564  1F62  2F6A               	goto	l2366
  4565  1F63                     u3440:	
  4566  1F63                     l2362:	
  4567  1F63  0877               	movf	___awdiv@divisor,w
  4568  1F64  02F9               	subwf	___awdiv@dividend,f
  4569  1F65  0878               	movf	___awdiv@divisor+1,w
  4570  1F66  1C03               	skipc
  4571  1F67  03FA               	decf	___awdiv@dividend+1,f
  4572  1F68  02FA               	subwf	___awdiv@dividend+1,f
  4573  1F69                     l2364:	
  4574  1F69  1422               	bsf	___awdiv@quotient,0
  4575  1F6A                     l2366:	
  4576  1F6A  3001               	movlw	1
  4577  1F6B                     u3455:	
  4578  1F6B  1003               	clrc
  4579  1F6C  0CF8               	rrf	___awdiv@divisor+1,f
  4580  1F6D  0CF7               	rrf	___awdiv@divisor,f
  4581  1F6E  3EFF               	addlw	-1
  4582  1F6F  1D03               	skipz
  4583  1F70  2F6B               	goto	u3455
  4584  1F71                     l2368:	
  4585  1F71  3001               	movlw	1
  4586  1F72  02A0               	subwf	___awdiv@counter,f
  4587  1F73  1D03               	btfss	3,2
  4588  1F74  2F76               	goto	u3461
  4589  1F75  2F77               	goto	u3460
  4590  1F76                     u3461:	
  4591  1F76  2F52               	goto	l2360
  4592  1F77                     u3460:	
  4593  1F77                     l2370:	
  4594  1F77  0821               	movf	___awdiv@sign,w
  4595  1F78  1903               	btfsc	3,2
  4596  1F79  2F7B               	goto	u3471
  4597  1F7A  2F7C               	goto	u3470
  4598  1F7B                     u3471:	
  4599  1F7B  2F81               	goto	l2374
  4600  1F7C                     u3470:	
  4601  1F7C                     l2372:	
  4602  1F7C  09A2               	comf	___awdiv@quotient,f
  4603  1F7D  09A3               	comf	___awdiv@quotient+1,f
  4604  1F7E  0AA2               	incf	___awdiv@quotient,f
  4605  1F7F  1903               	skipnz
  4606  1F80  0AA3               	incf	___awdiv@quotient+1,f
  4607  1F81                     l2374:	
  4608  1F81  0823               	movf	___awdiv@quotient+1,w
  4609  1F82  00F8               	movwf	?___awdiv+1
  4610  1F83  0822               	movf	___awdiv@quotient,w
  4611  1F84  00F7               	movwf	?___awdiv
  4612  1F85                     l530:	
  4613  1F85  0008               	return
  4614  1F86                     __end_of___awdiv:	
  4615                           
  4616                           	psect	text5
  4617  1B5C                     __ptext5:	
  4618 ;; *************** function _isdigit *****************
  4619 ;; Defined at:
  4620 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  c               1    wreg     unsigned char 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  c               1    1[COMMON] unsigned char 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;		None               void
  4627 ;; Registers used:
  4628 ;;		wreg, status,2, status,0
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4634 ;;      Params:         0       0       0       0       0
  4635 ;;      Locals:         2       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0
  4637 ;;      Totals:         2       0       0       0       0
  4638 ;;Total ram usage:        2 bytes
  4639 ;; Hardware stack levels used:    1
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_sprintf
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           
  4648                           ;psect for function _isdigit
  4649  1B5C                     _isdigit:	
  4650                           
  4651                           ;incstack = 0
  4652                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4653                           ;isdigit@c stored from wreg
  4654  1B5C  00F1               	movwf	isdigit@c
  4655  1B5D                     l2950:	
  4656  1B5D  01F0               	clrf	_isdigit$678
  4657  1B5E                     l2952:	
  4658  1B5E  303A               	movlw	58
  4659  1B5F  0271               	subwf	isdigit@c,w
  4660  1B60  1803               	skipnc
  4661  1B61  2B63               	goto	u4961
  4662  1B62  2B64               	goto	u4960
  4663  1B63                     u4961:	
  4664  1B63  2B6C               	goto	l2958
  4665  1B64                     u4960:	
  4666  1B64                     l2954:	
  4667  1B64  3030               	movlw	48
  4668  1B65  0271               	subwf	isdigit@c,w
  4669  1B66  1C03               	skipc
  4670  1B67  2B69               	goto	u4971
  4671  1B68  2B6A               	goto	u4970
  4672  1B69                     u4971:	
  4673  1B69  2B6C               	goto	l2958
  4674  1B6A                     u4970:	
  4675  1B6A                     l2956:	
  4676  1B6A  01F0               	clrf	_isdigit$678
  4677  1B6B  0AF0               	incf	_isdigit$678,f
  4678  1B6C                     l2958:	
  4679  1B6C  0C70               	rrf	_isdigit$678,w
  4680  1B6D                     l858:	
  4681  1B6D  0008               	return
  4682  1B6E                     __end_of_isdigit:	
  4683                           
  4684                           	psect	text6
  4685  136D                     __ptext6:	
  4686 ;; *************** function _fround *****************
  4687 ;; Defined at:
  4688 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  prec            1    wreg     unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  prec            1   49[BANK0 ] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  4   30[BANK0 ] unsigned char 
  4695 ;; Registers used:
  4696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4702 ;;      Params:         0       4       0       0       0
  4703 ;;      Locals:         0       9       0       0       0
  4704 ;;      Temps:          0       7       0       0       0
  4705 ;;      Totals:         0      20       0       0       0
  4706 ;;Total ram usage:       20 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    2
  4709 ;; This function calls:
  4710 ;;		___flmul
  4711 ;;		___lwdiv
  4712 ;;		___lwmod
  4713 ;; This function is called by:
  4714 ;;		_sprintf
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function _fround
  4720  136D                     _fround:	
  4721                           
  4722                           ;incstack = 0
  4723                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4724                           ;fround@prec stored from wreg
  4725  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4726  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4727  136F  00D1               	movwf	fround@prec
  4728  1370                     l2892:	
  4729                           
  4730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4731  1370  306E               	movlw	110
  4732  1371  0251               	subwf	fround@prec,w
  4733  1372  1C03               	skipc
  4734  1373  2B75               	goto	u4711
  4735  1374  2B76               	goto	u4710
  4736  1375                     u4711:	
  4737  1375  2C83               	goto	l2900
  4738  1376                     u4710:	
  4739  1376                     l2894:	
  4740                           
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4742  1376  303F               	movlw	63
  4743  1377  00A7               	movwf	___flmul@b+3
  4744  1378  3000               	movlw	0
  4745  1379  00A6               	movwf	___flmul@b+2
  4746  137A  3000               	movlw	0
  4747  137B  00A5               	movwf	___flmul@b+1
  4748  137C  3000               	movlw	0
  4749  137D  00A4               	movwf	___flmul@b
  4750  137E  3064               	movlw	100
  4751  137F  00F6               	movwf	___lwdiv@divisor
  4752  1380  3000               	movlw	0
  4753  1381  00F7               	movwf	___lwdiv@divisor+1
  4754  1382  0851               	movf	fround@prec,w
  4755  1383  00C2               	movwf	??_fround
  4756  1384  01C3               	clrf	??_fround+1
  4757  1385  0842               	movf	??_fround,w
  4758  1386  00F8               	movwf	___lwdiv@dividend
  4759  1387  0843               	movf	??_fround+1,w
  4760  1388  00F9               	movwf	___lwdiv@dividend+1
  4761  1389  160A  158A  2506  160A  118A  	fcall	___lwdiv
  4762  138E  0876               	movf	?___lwdiv,w
  4763  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4764  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4765  1391  00C4               	movwf	??_fround+2
  4766  1392  3001               	movlw	1
  4767  1393                     u4725:	
  4768  1393  1003               	clrc
  4769  1394  0DC4               	rlf	??_fround+2,f
  4770  1395  3EFF               	addlw	-1
  4771  1396  1D03               	skipz
  4772  1397  2B93               	goto	u4725
  4773  1398  1003               	clrc
  4774  1399  0D44               	rlf	??_fround+2,w
  4775  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4776  139B  0084               	movwf	4
  4777  139C  160A  118A  2000  160A  118A  	fcall	stringdir
  4778  13A1  00C5               	movwf	??_fround+3
  4779  13A2  160A  118A  2000  160A  118A  	fcall	stringdir
  4780  13A7  00C6               	movwf	??_fround+4
  4781  13A8  160A  118A  2000  160A  118A  	fcall	stringdir
  4782  13AD  00C7               	movwf	??_fround+5
  4783  13AE  160A  118A  2000  160A  118A  	fcall	stringdir
  4784  13B3  00C8               	movwf	??_fround+6
  4785  13B4  0848               	movf	??_fround+6,w
  4786  13B5  00AB               	movwf	___flmul@a+3
  4787  13B6  0847               	movf	??_fround+5,w
  4788  13B7  00AA               	movwf	___flmul@a+2
  4789  13B8  0846               	movf	??_fround+4,w
  4790  13B9  00A9               	movwf	___flmul@a+1
  4791  13BA  0845               	movf	??_fround+3,w
  4792  13BB  00A8               	movwf	___flmul@a
  4793  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  4794  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4795  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  4796  13C3  0827               	movf	?___flmul+3,w
  4797  13C4  00D0               	movwf	_fround$882+3
  4798  13C5  0826               	movf	?___flmul+2,w
  4799  13C6  00CF               	movwf	_fround$882+2
  4800  13C7  0825               	movf	?___flmul+1,w
  4801  13C8  00CE               	movwf	_fround$882+1
  4802  13C9  0824               	movf	?___flmul,w
  4803  13CA  00CD               	movwf	_fround$882
  4804                           
  4805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4806  13CB  300A               	movlw	10
  4807  13CC  00F6               	movwf	___lwdiv@divisor
  4808  13CD  3000               	movlw	0
  4809  13CE  00F7               	movwf	___lwdiv@divisor+1
  4810  13CF  0851               	movf	fround@prec,w
  4811  13D0  00C2               	movwf	??_fround
  4812  13D1  01C3               	clrf	??_fround+1
  4813  13D2  0842               	movf	??_fround,w
  4814  13D3  00F2               	movwf	___lwmod@dividend
  4815  13D4  0843               	movf	??_fround+1,w
  4816  13D5  00F3               	movwf	___lwmod@dividend+1
  4817  13D6  3064               	movlw	100
  4818  13D7  00F0               	movwf	___lwmod@divisor
  4819  13D8  3000               	movlw	0
  4820  13D9  00F1               	movwf	___lwmod@divisor+1
  4821  13DA  160A  158A  24CC  160A  118A  	fcall	___lwmod
  4822  13DF  0871               	movf	?___lwmod+1,w
  4823  13E0  00F9               	movwf	___lwdiv@dividend+1
  4824  13E1  0870               	movf	?___lwmod,w
  4825  13E2  00F8               	movwf	___lwdiv@dividend
  4826  13E3  160A  158A  2506  160A  118A  	fcall	___lwdiv
  4827  13E8  0876               	movf	?___lwdiv,w
  4828  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  4829  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  4830  13EB  00C4               	movwf	??_fround+2
  4831  13EC  3001               	movlw	1
  4832  13ED                     u4735:	
  4833  13ED  1003               	clrc
  4834  13EE  0DC4               	rlf	??_fround+2,f
  4835  13EF  3EFF               	addlw	-1
  4836  13F0  1D03               	skipz
  4837  13F1  2BED               	goto	u4735
  4838  13F2  1003               	clrc
  4839  13F3  0D44               	rlf	??_fround+2,w
  4840  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4841  13F5  0084               	movwf	4
  4842  13F6  160A  118A  2000  160A  118A  	fcall	stringdir
  4843  13FB  00C5               	movwf	??_fround+3
  4844  13FC  160A  118A  2000  160A  118A  	fcall	stringdir
  4845  1401  00C6               	movwf	??_fround+4
  4846  1402  160A  118A  2000  160A  118A  	fcall	stringdir
  4847  1407  00C7               	movwf	??_fround+5
  4848  1408  160A  118A  2000  160A  118A  	fcall	stringdir
  4849  140D  00C8               	movwf	??_fround+6
  4850  140E  0848               	movf	??_fround+6,w
  4851  140F  00A7               	movwf	___flmul@b+3
  4852  1410  0847               	movf	??_fround+5,w
  4853  1411  00A6               	movwf	___flmul@b+2
  4854  1412  0846               	movf	??_fround+4,w
  4855  1413  00A5               	movwf	___flmul@b+1
  4856  1414  0845               	movf	??_fround+3,w
  4857  1415  00A4               	movwf	___flmul@b
  4858  1416  0850               	movf	_fround$882+3,w
  4859  1417  00AB               	movwf	___flmul@a+3
  4860  1418  084F               	movf	_fround$882+2,w
  4861  1419  00AA               	movwf	___flmul@a+2
  4862  141A  084E               	movf	_fround$882+1,w
  4863  141B  00A9               	movwf	___flmul@a+1
  4864  141C  084D               	movf	_fround$882,w
  4865  141D  00A8               	movwf	___flmul@a
  4866  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  4867  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4868  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4869  1425  0827               	movf	?___flmul+3,w
  4870  1426  00CC               	movwf	_fround$883+3
  4871  1427  0826               	movf	?___flmul+2,w
  4872  1428  00CB               	movwf	_fround$883+2
  4873  1429  0825               	movf	?___flmul+1,w
  4874  142A  00CA               	movwf	_fround$883+1
  4875  142B  0824               	movf	?___flmul,w
  4876  142C  00C9               	movwf	_fround$883
  4877                           
  4878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4879  142D  300A               	movlw	10
  4880  142E  00F0               	movwf	___lwmod@divisor
  4881  142F  3000               	movlw	0
  4882  1430  00F1               	movwf	___lwmod@divisor+1
  4883  1431  0851               	movf	fround@prec,w
  4884  1432  00C2               	movwf	??_fround
  4885  1433  01C3               	clrf	??_fround+1
  4886  1434  0842               	movf	??_fround,w
  4887  1435  00F2               	movwf	___lwmod@dividend
  4888  1436  0843               	movf	??_fround+1,w
  4889  1437  00F3               	movwf	___lwmod@dividend+1
  4890  1438  160A  158A  24CC  160A  118A  	fcall	___lwmod
  4891  143D  0870               	movf	?___lwmod,w
  4892  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4893  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4894  1440  00C4               	movwf	??_fround+2
  4895  1441  3001               	movlw	1
  4896  1442                     u4745:	
  4897  1442  1003               	clrc
  4898  1443  0DC4               	rlf	??_fround+2,f
  4899  1444  3EFF               	addlw	-1
  4900  1445  1D03               	skipz
  4901  1446  2C42               	goto	u4745
  4902  1447  1003               	clrc
  4903  1448  0D44               	rlf	??_fround+2,w
  4904  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4905  144A  0084               	movwf	4
  4906  144B  160A  118A  2000  160A  118A  	fcall	stringdir
  4907  1450  00C5               	movwf	??_fround+3
  4908  1451  160A  118A  2000  160A  118A  	fcall	stringdir
  4909  1456  00C6               	movwf	??_fround+4
  4910  1457  160A  118A  2000  160A  118A  	fcall	stringdir
  4911  145C  00C7               	movwf	??_fround+5
  4912  145D  160A  118A  2000  160A  118A  	fcall	stringdir
  4913  1462  00C8               	movwf	??_fround+6
  4914  1463  0848               	movf	??_fround+6,w
  4915  1464  00A7               	movwf	___flmul@b+3
  4916  1465  0847               	movf	??_fround+5,w
  4917  1466  00A6               	movwf	___flmul@b+2
  4918  1467  0846               	movf	??_fround+4,w
  4919  1468  00A5               	movwf	___flmul@b+1
  4920  1469  0845               	movf	??_fround+3,w
  4921  146A  00A4               	movwf	___flmul@b
  4922  146B  084C               	movf	_fround$883+3,w
  4923  146C  00AB               	movwf	___flmul@a+3
  4924  146D  084B               	movf	_fround$883+2,w
  4925  146E  00AA               	movwf	___flmul@a+2
  4926  146F  084A               	movf	_fround$883+1,w
  4927  1470  00A9               	movwf	___flmul@a+1
  4928  1471  0849               	movf	_fround$883,w
  4929  1472  00A8               	movwf	___flmul@a
  4930  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  4931  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4932  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4933  147A  0827               	movf	?___flmul+3,w
  4934  147B  00C1               	movwf	?_fround+3
  4935  147C  0826               	movf	?___flmul+2,w
  4936  147D  00C0               	movwf	?_fround+2
  4937  147E  0825               	movf	?___flmul+1,w
  4938  147F  00BF               	movwf	?_fround+1
  4939  1480  0824               	movf	?___flmul,w
  4940  1481  00BE               	movwf	?_fround
  4941  1482  2D77               	goto	l283
  4942  1483                     l2900:	
  4943  1483  300B               	movlw	11
  4944  1484  0251               	subwf	fround@prec,w
  4945  1485  1C03               	skipc
  4946  1486  2C88               	goto	u4751
  4947  1487  2C89               	goto	u4750
  4948  1488                     u4751:	
  4949  1488  2D34               	goto	l2906
  4950  1489                     u4750:	
  4951  1489                     l2902:	
  4952                           
  4953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4954  1489  303F               	movlw	63
  4955  148A  00A7               	movwf	___flmul@b+3
  4956  148B  3000               	movlw	0
  4957  148C  00A6               	movwf	___flmul@b+2
  4958  148D  3000               	movlw	0
  4959  148E  00A5               	movwf	___flmul@b+1
  4960  148F  3000               	movlw	0
  4961  1490  00A4               	movwf	___flmul@b
  4962  1491  300A               	movlw	10
  4963  1492  00F6               	movwf	___lwdiv@divisor
  4964  1493  3000               	movlw	0
  4965  1494  00F7               	movwf	___lwdiv@divisor+1
  4966  1495  0851               	movf	fround@prec,w
  4967  1496  00C2               	movwf	??_fround
  4968  1497  01C3               	clrf	??_fround+1
  4969  1498  0842               	movf	??_fround,w
  4970  1499  00F8               	movwf	___lwdiv@dividend
  4971  149A  0843               	movf	??_fround+1,w
  4972  149B  00F9               	movwf	___lwdiv@dividend+1
  4973  149C  160A  158A  2506  160A  118A  	fcall	___lwdiv
  4974  14A1  0876               	movf	?___lwdiv,w
  4975  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  4976  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  4977  14A4  00C4               	movwf	??_fround+2
  4978  14A5  3001               	movlw	1
  4979  14A6                     u4765:	
  4980  14A6  1003               	clrc
  4981  14A7  0DC4               	rlf	??_fround+2,f
  4982  14A8  3EFF               	addlw	-1
  4983  14A9  1D03               	skipz
  4984  14AA  2CA6               	goto	u4765
  4985  14AB  1003               	clrc
  4986  14AC  0D44               	rlf	??_fround+2,w
  4987  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4988  14AE  0084               	movwf	4
  4989  14AF  160A  118A  2000  160A  118A  	fcall	stringdir
  4990  14B4  00C5               	movwf	??_fround+3
  4991  14B5  160A  118A  2000  160A  118A  	fcall	stringdir
  4992  14BA  00C6               	movwf	??_fround+4
  4993  14BB  160A  118A  2000  160A  118A  	fcall	stringdir
  4994  14C0  00C7               	movwf	??_fround+5
  4995  14C1  160A  118A  2000  160A  118A  	fcall	stringdir
  4996  14C6  00C8               	movwf	??_fround+6
  4997  14C7  0848               	movf	??_fround+6,w
  4998  14C8  00AB               	movwf	___flmul@a+3
  4999  14C9  0847               	movf	??_fround+5,w
  5000  14CA  00AA               	movwf	___flmul@a+2
  5001  14CB  0846               	movf	??_fround+4,w
  5002  14CC  00A9               	movwf	___flmul@a+1
  5003  14CD  0845               	movf	??_fround+3,w
  5004  14CE  00A8               	movwf	___flmul@a
  5005  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5006  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5007  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5008  14D6  0827               	movf	?___flmul+3,w
  5009  14D7  00D0               	movwf	_fround$882+3
  5010  14D8  0826               	movf	?___flmul+2,w
  5011  14D9  00CF               	movwf	_fround$882+2
  5012  14DA  0825               	movf	?___flmul+1,w
  5013  14DB  00CE               	movwf	_fround$882+1
  5014  14DC  0824               	movf	?___flmul,w
  5015  14DD  00CD               	movwf	_fround$882
  5016                           
  5017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5018  14DE  300A               	movlw	10
  5019  14DF  00F0               	movwf	___lwmod@divisor
  5020  14E0  3000               	movlw	0
  5021  14E1  00F1               	movwf	___lwmod@divisor+1
  5022  14E2  0851               	movf	fround@prec,w
  5023  14E3  00C2               	movwf	??_fround
  5024  14E4  01C3               	clrf	??_fround+1
  5025  14E5  0842               	movf	??_fround,w
  5026  14E6  00F2               	movwf	___lwmod@dividend
  5027  14E7  0843               	movf	??_fround+1,w
  5028  14E8  00F3               	movwf	___lwmod@dividend+1
  5029  14E9  160A  158A  24CC  160A  118A  	fcall	___lwmod
  5030  14EE  0870               	movf	?___lwmod,w
  5031  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5032  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5033  14F1  00C4               	movwf	??_fround+2
  5034  14F2  3001               	movlw	1
  5035  14F3                     u4775:	
  5036  14F3  1003               	clrc
  5037  14F4  0DC4               	rlf	??_fround+2,f
  5038  14F5  3EFF               	addlw	-1
  5039  14F6  1D03               	skipz
  5040  14F7  2CF3               	goto	u4775
  5041  14F8  1003               	clrc
  5042  14F9  0D44               	rlf	??_fround+2,w
  5043  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5044  14FB  0084               	movwf	4
  5045  14FC  160A  118A  2000  160A  118A  	fcall	stringdir
  5046  1501  00C5               	movwf	??_fround+3
  5047  1502  160A  118A  2000  160A  118A  	fcall	stringdir
  5048  1507  00C6               	movwf	??_fround+4
  5049  1508  160A  118A  2000  160A  118A  	fcall	stringdir
  5050  150D  00C7               	movwf	??_fround+5
  5051  150E  160A  118A  2000  160A  118A  	fcall	stringdir
  5052  1513  00C8               	movwf	??_fround+6
  5053  1514  0848               	movf	??_fround+6,w
  5054  1515  00A7               	movwf	___flmul@b+3
  5055  1516  0847               	movf	??_fround+5,w
  5056  1517  00A6               	movwf	___flmul@b+2
  5057  1518  0846               	movf	??_fround+4,w
  5058  1519  00A5               	movwf	___flmul@b+1
  5059  151A  0845               	movf	??_fround+3,w
  5060  151B  00A4               	movwf	___flmul@b
  5061  151C  0850               	movf	_fround$882+3,w
  5062  151D  00AB               	movwf	___flmul@a+3
  5063  151E  084F               	movf	_fround$882+2,w
  5064  151F  00AA               	movwf	___flmul@a+2
  5065  1520  084E               	movf	_fround$882+1,w
  5066  1521  00A9               	movwf	___flmul@a+1
  5067  1522  084D               	movf	_fround$882,w
  5068  1523  00A8               	movwf	___flmul@a
  5069  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5070  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5071  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5072  152B  0827               	movf	?___flmul+3,w
  5073  152C  00C1               	movwf	?_fround+3
  5074  152D  0826               	movf	?___flmul+2,w
  5075  152E  00C0               	movwf	?_fround+2
  5076  152F  0825               	movf	?___flmul+1,w
  5077  1530  00BF               	movwf	?_fround+1
  5078  1531  0824               	movf	?___flmul,w
  5079  1532  00BE               	movwf	?_fround
  5080  1533  2D77               	goto	l283
  5081  1534                     l2906:	
  5082                           
  5083                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5084  1534  303F               	movlw	63
  5085  1535  00A7               	movwf	___flmul@b+3
  5086  1536  3000               	movlw	0
  5087  1537  00A6               	movwf	___flmul@b+2
  5088  1538  3000               	movlw	0
  5089  1539  00A5               	movwf	___flmul@b+1
  5090  153A  3000               	movlw	0
  5091  153B  00A4               	movwf	___flmul@b
  5092  153C  0851               	movf	fround@prec,w
  5093  153D  00C2               	movwf	??_fround
  5094  153E  3001               	movlw	1
  5095  153F                     u4785:	
  5096  153F  1003               	clrc
  5097  1540  0DC2               	rlf	??_fround,f
  5098  1541  3EFF               	addlw	-1
  5099  1542  1D03               	skipz
  5100  1543  2D3F               	goto	u4785
  5101  1544  1003               	clrc
  5102  1545  0D42               	rlf	??_fround,w
  5103  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5104  1547  0084               	movwf	4
  5105  1548  160A  118A  2000  160A  118A  	fcall	stringdir
  5106  154D  00C3               	movwf	??_fround+1
  5107  154E  160A  118A  2000  160A  118A  	fcall	stringdir
  5108  1553  00C4               	movwf	??_fround+2
  5109  1554  160A  118A  2000  160A  118A  	fcall	stringdir
  5110  1559  00C5               	movwf	??_fround+3
  5111  155A  160A  118A  2000  160A  118A  	fcall	stringdir
  5112  155F  00C6               	movwf	??_fround+4
  5113  1560  0846               	movf	??_fround+4,w
  5114  1561  00AB               	movwf	___flmul@a+3
  5115  1562  0845               	movf	??_fround+3,w
  5116  1563  00AA               	movwf	___flmul@a+2
  5117  1564  0844               	movf	??_fround+2,w
  5118  1565  00A9               	movwf	___flmul@a+1
  5119  1566  0843               	movf	??_fround+1,w
  5120  1567  00A8               	movwf	___flmul@a
  5121  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5122  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5123  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5124  156F  0827               	movf	?___flmul+3,w
  5125  1570  00C1               	movwf	?_fround+3
  5126  1571  0826               	movf	?___flmul+2,w
  5127  1572  00C0               	movwf	?_fround+2
  5128  1573  0825               	movf	?___flmul+1,w
  5129  1574  00BF               	movwf	?_fround+1
  5130  1575  0824               	movf	?___flmul,w
  5131  1576  00BE               	movwf	?_fround
  5132  1577                     l283:	
  5133  1577  0008               	return
  5134  1578                     __end_of_fround:	
  5135                           
  5136                           	psect	text7
  5137  1CCC                     __ptext7:	
  5138 ;; *************** function ___lwmod *****************
  5139 ;; Defined at:
  5140 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  divisor         2    0[COMMON] unsigned int 
  5143 ;;  dividend        2    2[COMMON] unsigned int 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  counter         1    5[COMMON] unsigned char 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  2    0[COMMON] unsigned int 
  5148 ;; Registers used:
  5149 ;;		wreg, status,2, status,0
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5155 ;;      Params:         4       0       0       0       0
  5156 ;;      Locals:         1       0       0       0       0
  5157 ;;      Temps:          1       0       0       0       0
  5158 ;;      Totals:         6       0       0       0       0
  5159 ;;Total ram usage:        6 bytes
  5160 ;; Hardware stack levels used:    1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_fround
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           
  5169                           ;psect for function ___lwmod
  5170  1CCC                     ___lwmod:	
  5171  1CCC                     l2442:	
  5172                           ;incstack = 0
  5173                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5174                           
  5175  1CCC  0870               	movf	___lwmod@divisor,w
  5176  1CCD  0471               	iorwf	___lwmod@divisor+1,w
  5177  1CCE  1903               	btfsc	3,2
  5178  1CCF  2CD1               	goto	u3641
  5179  1CD0  2CD2               	goto	u3640
  5180  1CD1                     u3641:	
  5181  1CD1  2D01               	goto	l2460
  5182  1CD2                     u3640:	
  5183  1CD2                     l2444:	
  5184  1CD2  01F5               	clrf	___lwmod@counter
  5185  1CD3  0AF5               	incf	___lwmod@counter,f
  5186  1CD4  2CE0               	goto	l2450
  5187  1CD5                     l2446:	
  5188  1CD5  3001               	movlw	1
  5189  1CD6                     u3655:	
  5190  1CD6  1003               	clrc
  5191  1CD7  0DF0               	rlf	___lwmod@divisor,f
  5192  1CD8  0DF1               	rlf	___lwmod@divisor+1,f
  5193  1CD9  3EFF               	addlw	-1
  5194  1CDA  1D03               	skipz
  5195  1CDB  2CD6               	goto	u3655
  5196  1CDC                     l2448:	
  5197  1CDC  3001               	movlw	1
  5198  1CDD  00F4               	movwf	??___lwmod
  5199  1CDE  0874               	movf	??___lwmod,w
  5200  1CDF  07F5               	addwf	___lwmod@counter,f
  5201  1CE0                     l2450:	
  5202  1CE0  1FF1               	btfss	___lwmod@divisor+1,7
  5203  1CE1  2CE3               	goto	u3661
  5204  1CE2  2CE4               	goto	u3660
  5205  1CE3                     u3661:	
  5206  1CE3  2CD5               	goto	l2446
  5207  1CE4                     u3660:	
  5208  1CE4                     l2452:	
  5209  1CE4  0871               	movf	___lwmod@divisor+1,w
  5210  1CE5  0273               	subwf	___lwmod@dividend+1,w
  5211  1CE6  1D03               	skipz
  5212  1CE7  2CEA               	goto	u3675
  5213  1CE8  0870               	movf	___lwmod@divisor,w
  5214  1CE9  0272               	subwf	___lwmod@dividend,w
  5215  1CEA                     u3675:	
  5216  1CEA  1C03               	skipc
  5217  1CEB  2CED               	goto	u3671
  5218  1CEC  2CEE               	goto	u3670
  5219  1CED                     u3671:	
  5220  1CED  2CF4               	goto	l2456
  5221  1CEE                     u3670:	
  5222  1CEE                     l2454:	
  5223  1CEE  0870               	movf	___lwmod@divisor,w
  5224  1CEF  02F2               	subwf	___lwmod@dividend,f
  5225  1CF0  0871               	movf	___lwmod@divisor+1,w
  5226  1CF1  1C03               	skipc
  5227  1CF2  03F3               	decf	___lwmod@dividend+1,f
  5228  1CF3  02F3               	subwf	___lwmod@dividend+1,f
  5229  1CF4                     l2456:	
  5230  1CF4  3001               	movlw	1
  5231  1CF5                     u3685:	
  5232  1CF5  1003               	clrc
  5233  1CF6  0CF1               	rrf	___lwmod@divisor+1,f
  5234  1CF7  0CF0               	rrf	___lwmod@divisor,f
  5235  1CF8  3EFF               	addlw	-1
  5236  1CF9  1D03               	skipz
  5237  1CFA  2CF5               	goto	u3685
  5238  1CFB                     l2458:	
  5239  1CFB  3001               	movlw	1
  5240  1CFC  02F5               	subwf	___lwmod@counter,f
  5241  1CFD  1D03               	btfss	3,2
  5242  1CFE  2D00               	goto	u3691
  5243  1CFF  2D01               	goto	u3690
  5244  1D00                     u3691:	
  5245  1D00  2CE4               	goto	l2452
  5246  1D01                     u3690:	
  5247  1D01                     l2460:	
  5248  1D01  0873               	movf	___lwmod@dividend+1,w
  5249  1D02  00F1               	movwf	?___lwmod+1
  5250  1D03  0872               	movf	___lwmod@dividend,w
  5251  1D04  00F0               	movwf	?___lwmod
  5252  1D05                     l693:	
  5253  1D05  0008               	return
  5254  1D06                     __end_of___lwmod:	
  5255                           
  5256                           	psect	text8
  5257  1D06                     __ptext8:	
  5258 ;; *************** function ___lwdiv *****************
  5259 ;; Defined at:
  5260 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;  divisor         2    6[COMMON] unsigned int 
  5263 ;;  dividend        2    8[COMMON] unsigned int 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  quotient        2   11[COMMON] unsigned int 
  5266 ;;  counter         1   13[COMMON] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  2    6[COMMON] unsigned int 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5276 ;;      Params:         4       0       0       0       0
  5277 ;;      Locals:         3       0       0       0       0
  5278 ;;      Temps:          1       0       0       0       0
  5279 ;;      Totals:         8       0       0       0       0
  5280 ;;Total ram usage:        8 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_fround
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           
  5290                           ;psect for function ___lwdiv
  5291  1D06                     ___lwdiv:	
  5292  1D06                     l2416:	
  5293                           ;incstack = 0
  5294                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5295                           
  5296  1D06  01FB               	clrf	___lwdiv@quotient
  5297  1D07  01FC               	clrf	___lwdiv@quotient+1
  5298  1D08                     l2418:	
  5299  1D08  0876               	movf	___lwdiv@divisor,w
  5300  1D09  0477               	iorwf	___lwdiv@divisor+1,w
  5301  1D0A  1903               	btfsc	3,2
  5302  1D0B  2D0D               	goto	u3571
  5303  1D0C  2D0E               	goto	u3570
  5304  1D0D                     u3571:	
  5305  1D0D  2D45               	goto	l2438
  5306  1D0E                     u3570:	
  5307  1D0E                     l2420:	
  5308  1D0E  01FD               	clrf	___lwdiv@counter
  5309  1D0F  0AFD               	incf	___lwdiv@counter,f
  5310  1D10  2D1C               	goto	l2426
  5311  1D11                     l2422:	
  5312  1D11  3001               	movlw	1
  5313  1D12                     u3585:	
  5314  1D12  1003               	clrc
  5315  1D13  0DF6               	rlf	___lwdiv@divisor,f
  5316  1D14  0DF7               	rlf	___lwdiv@divisor+1,f
  5317  1D15  3EFF               	addlw	-1
  5318  1D16  1D03               	skipz
  5319  1D17  2D12               	goto	u3585
  5320  1D18                     l2424:	
  5321  1D18  3001               	movlw	1
  5322  1D19  00FA               	movwf	??___lwdiv
  5323  1D1A  087A               	movf	??___lwdiv,w
  5324  1D1B  07FD               	addwf	___lwdiv@counter,f
  5325  1D1C                     l2426:	
  5326  1D1C  1FF7               	btfss	___lwdiv@divisor+1,7
  5327  1D1D  2D1F               	goto	u3591
  5328  1D1E  2D20               	goto	u3590
  5329  1D1F                     u3591:	
  5330  1D1F  2D11               	goto	l2422
  5331  1D20                     u3590:	
  5332  1D20                     l2428:	
  5333  1D20  3001               	movlw	1
  5334  1D21                     u3605:	
  5335  1D21  1003               	clrc
  5336  1D22  0DFB               	rlf	___lwdiv@quotient,f
  5337  1D23  0DFC               	rlf	___lwdiv@quotient+1,f
  5338  1D24  3EFF               	addlw	-1
  5339  1D25  1D03               	skipz
  5340  1D26  2D21               	goto	u3605
  5341  1D27  0877               	movf	___lwdiv@divisor+1,w
  5342  1D28  0279               	subwf	___lwdiv@dividend+1,w
  5343  1D29  1D03               	skipz
  5344  1D2A  2D2D               	goto	u3615
  5345  1D2B  0876               	movf	___lwdiv@divisor,w
  5346  1D2C  0278               	subwf	___lwdiv@dividend,w
  5347  1D2D                     u3615:	
  5348  1D2D  1C03               	skipc
  5349  1D2E  2D30               	goto	u3611
  5350  1D2F  2D31               	goto	u3610
  5351  1D30                     u3611:	
  5352  1D30  2D38               	goto	l2434
  5353  1D31                     u3610:	
  5354  1D31                     l2430:	
  5355  1D31  0876               	movf	___lwdiv@divisor,w
  5356  1D32  02F8               	subwf	___lwdiv@dividend,f
  5357  1D33  0877               	movf	___lwdiv@divisor+1,w
  5358  1D34  1C03               	skipc
  5359  1D35  03F9               	decf	___lwdiv@dividend+1,f
  5360  1D36  02F9               	subwf	___lwdiv@dividend+1,f
  5361  1D37                     l2432:	
  5362  1D37  147B               	bsf	___lwdiv@quotient,0
  5363  1D38                     l2434:	
  5364  1D38  3001               	movlw	1
  5365  1D39                     u3625:	
  5366  1D39  1003               	clrc
  5367  1D3A  0CF7               	rrf	___lwdiv@divisor+1,f
  5368  1D3B  0CF6               	rrf	___lwdiv@divisor,f
  5369  1D3C  3EFF               	addlw	-1
  5370  1D3D  1D03               	skipz
  5371  1D3E  2D39               	goto	u3625
  5372  1D3F                     l2436:	
  5373  1D3F  3001               	movlw	1
  5374  1D40  02FD               	subwf	___lwdiv@counter,f
  5375  1D41  1D03               	btfss	3,2
  5376  1D42  2D44               	goto	u3631
  5377  1D43  2D45               	goto	u3630
  5378  1D44                     u3631:	
  5379  1D44  2D20               	goto	l2428
  5380  1D45                     u3630:	
  5381  1D45                     l2438:	
  5382  1D45  087C               	movf	___lwdiv@quotient+1,w
  5383  1D46  00F7               	movwf	?___lwdiv+1
  5384  1D47  087B               	movf	___lwdiv@quotient,w
  5385  1D48  00F6               	movwf	?___lwdiv
  5386  1D49                     l683:	
  5387  1D49  0008               	return
  5388  1D4A                     __end_of___lwdiv:	
  5389                           
  5390                           	psect	text9
  5391  0C9F                     __ptext9:	
  5392 ;; *************** function ___flmul *****************
  5393 ;; Defined at:
  5394 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  b               4    4[BANK0 ] unsigned int 
  5397 ;;  a               4    8[BANK0 ] unsigned int 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  prod            4   24[BANK0 ] struct .
  5400 ;;  grs             4   18[BANK0 ] unsigned long 
  5401 ;;  temp            2   28[BANK0 ] struct .
  5402 ;;  bexp            1   23[BANK0 ] unsigned char 
  5403 ;;  aexp            1   22[BANK0 ] unsigned char 
  5404 ;;  sign            1   17[BANK0 ] unsigned char 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  4    4[BANK0 ] unsigned char 
  5407 ;; Registers used:
  5408 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5414 ;;      Params:         0       8       0       0       0
  5415 ;;      Locals:         0      13       0       0       0
  5416 ;;      Temps:          0       5       0       0       0
  5417 ;;      Totals:         0      26       0       0       0
  5418 ;;Total ram usage:       26 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    1
  5421 ;; This function calls:
  5422 ;;		__Umul8_16
  5423 ;; This function is called by:
  5424 ;;		_fround
  5425 ;;		_scale
  5426 ;;		_sprintf
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function ___flmul
  5432  0C9F                     ___flmul:	
  5433  0C9F                     l2658:	
  5434                           ;incstack = 0
  5435                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5436                           
  5437  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5438  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5439  0CA1  0827               	movf	___flmul@b+3,w
  5440  0CA2  3980               	andlw	128
  5441  0CA3  00AC               	movwf	??___flmul
  5442  0CA4  082C               	movf	??___flmul,w
  5443  0CA5  00B1               	movwf	___flmul@sign
  5444  0CA6                     l2660:	
  5445  0CA6  0827               	movf	___flmul@b+3,w
  5446  0CA7  00AC               	movwf	??___flmul
  5447  0CA8  072C               	addwf	??___flmul,w
  5448  0CA9  00AD               	movwf	??___flmul+1
  5449  0CAA  082D               	movf	??___flmul+1,w
  5450  0CAB  00B7               	movwf	___flmul@bexp
  5451  0CAC                     l2662:	
  5452  0CAC  1FA6               	btfss	___flmul@b+2,7
  5453  0CAD  2CAF               	goto	u4161
  5454  0CAE  2CB0               	goto	u4160
  5455  0CAF                     u4161:	
  5456  0CAF  2CB1               	goto	l2666
  5457  0CB0                     u4160:	
  5458  0CB0                     l2664:	
  5459  0CB0  1437               	bsf	___flmul@bexp,0
  5460  0CB1                     l2666:	
  5461  0CB1  0837               	movf	___flmul@bexp,w
  5462  0CB2  1903               	btfsc	3,2
  5463  0CB3  2CB5               	goto	u4171
  5464  0CB4  2CB6               	goto	u4170
  5465  0CB5                     u4171:	
  5466  0CB5  2CC5               	goto	l2674
  5467  0CB6                     u4170:	
  5468  0CB6                     l2668:	
  5469  0CB6  0A37               	incf	___flmul@bexp,w
  5470  0CB7  1D03               	btfss	3,2
  5471  0CB8  2CBA               	goto	u4181
  5472  0CB9  2CBB               	goto	u4180
  5473  0CBA                     u4181:	
  5474  0CBA  2CC3               	goto	l2672
  5475  0CBB                     u4180:	
  5476  0CBB                     l2670:	
  5477  0CBB  3000               	movlw	0
  5478  0CBC  00A7               	movwf	___flmul@b+3
  5479  0CBD  3000               	movlw	0
  5480  0CBE  00A6               	movwf	___flmul@b+2
  5481  0CBF  3000               	movlw	0
  5482  0CC0  00A5               	movwf	___flmul@b+1
  5483  0CC1  3000               	movlw	0
  5484  0CC2  00A4               	movwf	___flmul@b
  5485  0CC3                     l2672:	
  5486  0CC3  17A6               	bsf	___flmul@b+2,7
  5487  0CC4  2CCD               	goto	l2676
  5488  0CC5                     l2674:	
  5489  0CC5  3000               	movlw	0
  5490  0CC6  00A7               	movwf	___flmul@b+3
  5491  0CC7  3000               	movlw	0
  5492  0CC8  00A6               	movwf	___flmul@b+2
  5493  0CC9  3000               	movlw	0
  5494  0CCA  00A5               	movwf	___flmul@b+1
  5495  0CCB  3000               	movlw	0
  5496  0CCC  00A4               	movwf	___flmul@b
  5497  0CCD                     l2676:	
  5498  0CCD  082B               	movf	___flmul@a+3,w
  5499  0CCE  3980               	andlw	128
  5500  0CCF  00AC               	movwf	??___flmul
  5501  0CD0  082C               	movf	??___flmul,w
  5502  0CD1  06B1               	xorwf	___flmul@sign,f
  5503  0CD2                     l2678:	
  5504  0CD2  082B               	movf	___flmul@a+3,w
  5505  0CD3  00AC               	movwf	??___flmul
  5506  0CD4  072C               	addwf	??___flmul,w
  5507  0CD5  00AD               	movwf	??___flmul+1
  5508  0CD6  082D               	movf	??___flmul+1,w
  5509  0CD7  00B6               	movwf	___flmul@aexp
  5510  0CD8                     l2680:	
  5511  0CD8  1FAA               	btfss	___flmul@a+2,7
  5512  0CD9  2CDB               	goto	u4191
  5513  0CDA  2CDC               	goto	u4190
  5514  0CDB                     u4191:	
  5515  0CDB  2CDD               	goto	l2684
  5516  0CDC                     u4190:	
  5517  0CDC                     l2682:	
  5518  0CDC  1436               	bsf	___flmul@aexp,0
  5519  0CDD                     l2684:	
  5520  0CDD  0836               	movf	___flmul@aexp,w
  5521  0CDE  1903               	btfsc	3,2
  5522  0CDF  2CE1               	goto	u4201
  5523  0CE0  2CE2               	goto	u4200
  5524  0CE1                     u4201:	
  5525  0CE1  2CF1               	goto	l2692
  5526  0CE2                     u4200:	
  5527  0CE2                     l2686:	
  5528  0CE2  0A36               	incf	___flmul@aexp,w
  5529  0CE3  1D03               	btfss	3,2
  5530  0CE4  2CE6               	goto	u4211
  5531  0CE5  2CE7               	goto	u4210
  5532  0CE6                     u4211:	
  5533  0CE6  2CEF               	goto	l2690
  5534  0CE7                     u4210:	
  5535  0CE7                     l2688:	
  5536  0CE7  3000               	movlw	0
  5537  0CE8  00AB               	movwf	___flmul@a+3
  5538  0CE9  3000               	movlw	0
  5539  0CEA  00AA               	movwf	___flmul@a+2
  5540  0CEB  3000               	movlw	0
  5541  0CEC  00A9               	movwf	___flmul@a+1
  5542  0CED  3000               	movlw	0
  5543  0CEE  00A8               	movwf	___flmul@a
  5544  0CEF                     l2690:	
  5545  0CEF  17AA               	bsf	___flmul@a+2,7
  5546  0CF0  2CF9               	goto	l2694
  5547  0CF1                     l2692:	
  5548  0CF1  3000               	movlw	0
  5549  0CF2  00AB               	movwf	___flmul@a+3
  5550  0CF3  3000               	movlw	0
  5551  0CF4  00AA               	movwf	___flmul@a+2
  5552  0CF5  3000               	movlw	0
  5553  0CF6  00A9               	movwf	___flmul@a+1
  5554  0CF7  3000               	movlw	0
  5555  0CF8  00A8               	movwf	___flmul@a
  5556  0CF9                     l2694:	
  5557  0CF9  0836               	movf	___flmul@aexp,w
  5558  0CFA  1903               	btfsc	3,2
  5559  0CFB  2CFD               	goto	u4221
  5560  0CFC  2CFE               	goto	u4220
  5561  0CFD                     u4221:	
  5562  0CFD  2D03               	goto	l2698
  5563  0CFE                     u4220:	
  5564  0CFE                     l2696:	
  5565  0CFE  0837               	movf	___flmul@bexp,w
  5566  0CFF  1D03               	btfss	3,2
  5567  0D00  2D02               	goto	u4231
  5568  0D01  2D03               	goto	u4230
  5569  0D02                     u4231:	
  5570  0D02  2D0C               	goto	l2702
  5571  0D03                     u4230:	
  5572  0D03                     l2698:	
  5573  0D03  3000               	movlw	0
  5574  0D04  00A7               	movwf	?___flmul+3
  5575  0D05  3000               	movlw	0
  5576  0D06  00A6               	movwf	?___flmul+2
  5577  0D07  3000               	movlw	0
  5578  0D08  00A5               	movwf	?___flmul+1
  5579  0D09  3000               	movlw	0
  5580  0D0A  00A4               	movwf	?___flmul
  5581  0D0B  2FFF               	goto	l800
  5582  0D0C                     l2702:	
  5583  0D0C  0824               	movf	___flmul@b,w
  5584  0D0D  00AC               	movwf	??___flmul
  5585  0D0E  082C               	movf	??___flmul,w
  5586  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5587  0D10  082A               	movf	___flmul@a+2,w
  5588  0D11  160A  118A  20A3  120A  158A  	fcall	__Umul8_16
  5589  0D16  0871               	movf	?__Umul8_16+1,w
  5590  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5591  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5592  0D19  00BD               	movwf	___flmul@temp+1
  5593  0D1A  0870               	movf	?__Umul8_16,w
  5594  0D1B  00BC               	movwf	___flmul@temp
  5595  0D1C                     l2704:	
  5596  0D1C  083C               	movf	___flmul@temp,w
  5597  0D1D  00AC               	movwf	??___flmul
  5598  0D1E  01AD               	clrf	??___flmul+1
  5599  0D1F  01AE               	clrf	??___flmul+2
  5600  0D20  01AF               	clrf	??___flmul+3
  5601  0D21  082F               	movf	??___flmul+3,w
  5602  0D22  00B5               	movwf	___flmul@grs+3
  5603  0D23  082E               	movf	??___flmul+2,w
  5604  0D24  00B4               	movwf	___flmul@grs+2
  5605  0D25  082D               	movf	??___flmul+1,w
  5606  0D26  00B3               	movwf	___flmul@grs+1
  5607  0D27  082C               	movf	??___flmul,w
  5608  0D28  00B2               	movwf	___flmul@grs
  5609  0D29                     l2706:	
  5610  0D29  083D               	movf	___flmul@temp+1,w
  5611  0D2A  00AC               	movwf	??___flmul
  5612  0D2B  01AD               	clrf	??___flmul+1
  5613  0D2C  01AE               	clrf	??___flmul+2
  5614  0D2D  01AF               	clrf	??___flmul+3
  5615  0D2E  082F               	movf	??___flmul+3,w
  5616  0D2F  00BB               	movwf	___flmul@prod+3
  5617  0D30  082E               	movf	??___flmul+2,w
  5618  0D31  00BA               	movwf	___flmul@prod+2
  5619  0D32  082D               	movf	??___flmul+1,w
  5620  0D33  00B9               	movwf	___flmul@prod+1
  5621  0D34  082C               	movf	??___flmul,w
  5622  0D35  00B8               	movwf	___flmul@prod
  5623  0D36  0825               	movf	___flmul@b+1,w
  5624  0D37  00AC               	movwf	??___flmul
  5625  0D38  082C               	movf	??___flmul,w
  5626  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5627  0D3A  0829               	movf	___flmul@a+1,w
  5628  0D3B  160A  118A  20A3  120A  158A  	fcall	__Umul8_16
  5629  0D40  0871               	movf	?__Umul8_16+1,w
  5630  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5631  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5632  0D43  00BD               	movwf	___flmul@temp+1
  5633  0D44  0870               	movf	?__Umul8_16,w
  5634  0D45  00BC               	movwf	___flmul@temp
  5635  0D46                     l2708:	
  5636  0D46  083C               	movf	___flmul@temp,w
  5637  0D47  00AC               	movwf	??___flmul
  5638  0D48  01AD               	clrf	??___flmul+1
  5639  0D49  01AE               	clrf	??___flmul+2
  5640  0D4A  01AF               	clrf	??___flmul+3
  5641  0D4B  082C               	movf	??___flmul,w
  5642  0D4C  07B2               	addwf	___flmul@grs,f
  5643  0D4D  082D               	movf	??___flmul+1,w
  5644  0D4E  1103               	clrz
  5645  0D4F  1803               	skipnc
  5646  0D50  3E01               	addlw	1
  5647  0D51  1903               	skipnz
  5648  0D52  2D54               	goto	u4241
  5649  0D53  07B3               	addwf	___flmul@grs+1,f
  5650  0D54                     u4241:	
  5651  0D54  082E               	movf	??___flmul+2,w
  5652  0D55  1103               	clrz
  5653  0D56  1803               	skipnc
  5654  0D57  3E01               	addlw	1
  5655  0D58  1903               	skipnz
  5656  0D59  2D5B               	goto	u4242
  5657  0D5A  07B4               	addwf	___flmul@grs+2,f
  5658  0D5B                     u4242:	
  5659  0D5B  082F               	movf	??___flmul+3,w
  5660  0D5C  1103               	clrz
  5661  0D5D  1803               	skipnc
  5662  0D5E  3E01               	addlw	1
  5663  0D5F  1903               	skipnz
  5664  0D60  2D62               	goto	u4243
  5665  0D61  07B5               	addwf	___flmul@grs+3,f
  5666  0D62                     u4243:	
  5667  0D62                     l2710:	
  5668  0D62  083D               	movf	___flmul@temp+1,w
  5669  0D63  00AC               	movwf	??___flmul
  5670  0D64  01AD               	clrf	??___flmul+1
  5671  0D65  01AE               	clrf	??___flmul+2
  5672  0D66  01AF               	clrf	??___flmul+3
  5673  0D67  082C               	movf	??___flmul,w
  5674  0D68  07B8               	addwf	___flmul@prod,f
  5675  0D69  082D               	movf	??___flmul+1,w
  5676  0D6A  1103               	clrz
  5677  0D6B  1803               	skipnc
  5678  0D6C  3E01               	addlw	1
  5679  0D6D  1903               	skipnz
  5680  0D6E  2D70               	goto	u4251
  5681  0D6F  07B9               	addwf	___flmul@prod+1,f
  5682  0D70                     u4251:	
  5683  0D70  082E               	movf	??___flmul+2,w
  5684  0D71  1103               	clrz
  5685  0D72  1803               	skipnc
  5686  0D73  3E01               	addlw	1
  5687  0D74  1903               	skipnz
  5688  0D75  2D77               	goto	u4252
  5689  0D76  07BA               	addwf	___flmul@prod+2,f
  5690  0D77                     u4252:	
  5691  0D77  082F               	movf	??___flmul+3,w
  5692  0D78  1103               	clrz
  5693  0D79  1803               	skipnc
  5694  0D7A  3E01               	addlw	1
  5695  0D7B  1903               	skipnz
  5696  0D7C  2D7E               	goto	u4253
  5697  0D7D  07BB               	addwf	___flmul@prod+3,f
  5698  0D7E                     u4253:	
  5699  0D7E  0826               	movf	___flmul@b+2,w
  5700  0D7F  00AC               	movwf	??___flmul
  5701  0D80  082C               	movf	??___flmul,w
  5702  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5703  0D82  0828               	movf	___flmul@a,w
  5704  0D83  160A  118A  20A3  120A  158A  	fcall	__Umul8_16
  5705  0D88  0871               	movf	?__Umul8_16+1,w
  5706  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5707  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5708  0D8B  00BD               	movwf	___flmul@temp+1
  5709  0D8C  0870               	movf	?__Umul8_16,w
  5710  0D8D  00BC               	movwf	___flmul@temp
  5711  0D8E                     l2712:	
  5712  0D8E  083C               	movf	___flmul@temp,w
  5713  0D8F  00AC               	movwf	??___flmul
  5714  0D90  01AD               	clrf	??___flmul+1
  5715  0D91  01AE               	clrf	??___flmul+2
  5716  0D92  01AF               	clrf	??___flmul+3
  5717  0D93  082C               	movf	??___flmul,w
  5718  0D94  07B2               	addwf	___flmul@grs,f
  5719  0D95  082D               	movf	??___flmul+1,w
  5720  0D96  1103               	clrz
  5721  0D97  1803               	skipnc
  5722  0D98  3E01               	addlw	1
  5723  0D99  1903               	skipnz
  5724  0D9A  2D9C               	goto	u4261
  5725  0D9B  07B3               	addwf	___flmul@grs+1,f
  5726  0D9C                     u4261:	
  5727  0D9C  082E               	movf	??___flmul+2,w
  5728  0D9D  1103               	clrz
  5729  0D9E  1803               	skipnc
  5730  0D9F  3E01               	addlw	1
  5731  0DA0  1903               	skipnz
  5732  0DA1  2DA3               	goto	u4262
  5733  0DA2  07B4               	addwf	___flmul@grs+2,f
  5734  0DA3                     u4262:	
  5735  0DA3  082F               	movf	??___flmul+3,w
  5736  0DA4  1103               	clrz
  5737  0DA5  1803               	skipnc
  5738  0DA6  3E01               	addlw	1
  5739  0DA7  1903               	skipnz
  5740  0DA8  2DAA               	goto	u4263
  5741  0DA9  07B5               	addwf	___flmul@grs+3,f
  5742  0DAA                     u4263:	
  5743  0DAA                     l2714:	
  5744  0DAA  083D               	movf	___flmul@temp+1,w
  5745  0DAB  00AC               	movwf	??___flmul
  5746  0DAC  01AD               	clrf	??___flmul+1
  5747  0DAD  01AE               	clrf	??___flmul+2
  5748  0DAE  01AF               	clrf	??___flmul+3
  5749  0DAF  082C               	movf	??___flmul,w
  5750  0DB0  07B8               	addwf	___flmul@prod,f
  5751  0DB1  082D               	movf	??___flmul+1,w
  5752  0DB2  1103               	clrz
  5753  0DB3  1803               	skipnc
  5754  0DB4  3E01               	addlw	1
  5755  0DB5  1903               	skipnz
  5756  0DB6  2DB8               	goto	u4271
  5757  0DB7  07B9               	addwf	___flmul@prod+1,f
  5758  0DB8                     u4271:	
  5759  0DB8  082E               	movf	??___flmul+2,w
  5760  0DB9  1103               	clrz
  5761  0DBA  1803               	skipnc
  5762  0DBB  3E01               	addlw	1
  5763  0DBC  1903               	skipnz
  5764  0DBD  2DBF               	goto	u4272
  5765  0DBE  07BA               	addwf	___flmul@prod+2,f
  5766  0DBF                     u4272:	
  5767  0DBF  082F               	movf	??___flmul+3,w
  5768  0DC0  1103               	clrz
  5769  0DC1  1803               	skipnc
  5770  0DC2  3E01               	addlw	1
  5771  0DC3  1903               	skipnz
  5772  0DC4  2DC6               	goto	u4273
  5773  0DC5  07BB               	addwf	___flmul@prod+3,f
  5774  0DC6                     u4273:	
  5775  0DC6                     l2716:	
  5776  0DC6  3008               	movlw	8
  5777  0DC7  00AC               	movwf	??___flmul
  5778  0DC8                     u4285:	
  5779  0DC8  1003               	clrc
  5780  0DC9  0DB2               	rlf	___flmul@grs,f
  5781  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5782  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5783  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5784  0DCD  0BAC               	decfsz	??___flmul,f
  5785  0DCE  2DC8               	goto	u4285
  5786  0DCF                     l2718:	
  5787  0DCF  0825               	movf	___flmul@b+1,w
  5788  0DD0  00AC               	movwf	??___flmul
  5789  0DD1  082C               	movf	??___flmul,w
  5790  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5791  0DD3  0828               	movf	___flmul@a,w
  5792  0DD4  160A  118A  20A3  120A  158A  	fcall	__Umul8_16
  5793  0DD9  0871               	movf	?__Umul8_16+1,w
  5794  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5795  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5796  0DDC  00BD               	movwf	___flmul@temp+1
  5797  0DDD  0870               	movf	?__Umul8_16,w
  5798  0DDE  00BC               	movwf	___flmul@temp
  5799  0DDF                     l2720:	
  5800  0DDF  083C               	movf	___flmul@temp,w
  5801  0DE0  00AC               	movwf	??___flmul
  5802  0DE1  083D               	movf	___flmul@temp+1,w
  5803  0DE2  00AD               	movwf	??___flmul+1
  5804  0DE3  01AE               	clrf	??___flmul+2
  5805  0DE4  01AF               	clrf	??___flmul+3
  5806  0DE5  082C               	movf	??___flmul,w
  5807  0DE6  07B2               	addwf	___flmul@grs,f
  5808  0DE7  082D               	movf	??___flmul+1,w
  5809  0DE8  1103               	clrz
  5810  0DE9  1803               	skipnc
  5811  0DEA  3E01               	addlw	1
  5812  0DEB  1903               	skipnz
  5813  0DEC  2DEE               	goto	u4291
  5814  0DED  07B3               	addwf	___flmul@grs+1,f
  5815  0DEE                     u4291:	
  5816  0DEE  082E               	movf	??___flmul+2,w
  5817  0DEF  1103               	clrz
  5818  0DF0  1803               	skipnc
  5819  0DF1  3E01               	addlw	1
  5820  0DF2  1903               	skipnz
  5821  0DF3  2DF5               	goto	u4292
  5822  0DF4  07B4               	addwf	___flmul@grs+2,f
  5823  0DF5                     u4292:	
  5824  0DF5  082F               	movf	??___flmul+3,w
  5825  0DF6  1103               	clrz
  5826  0DF7  1803               	skipnc
  5827  0DF8  3E01               	addlw	1
  5828  0DF9  1903               	skipnz
  5829  0DFA  2DFC               	goto	u4293
  5830  0DFB  07B5               	addwf	___flmul@grs+3,f
  5831  0DFC                     u4293:	
  5832  0DFC                     l2722:	
  5833  0DFC  0824               	movf	___flmul@b,w
  5834  0DFD  00AC               	movwf	??___flmul
  5835  0DFE  082C               	movf	??___flmul,w
  5836  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5837  0E00  0829               	movf	___flmul@a+1,w
  5838  0E01  160A  118A  20A3  120A  158A  	fcall	__Umul8_16
  5839  0E06  0871               	movf	?__Umul8_16+1,w
  5840  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5841  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5842  0E09  00BD               	movwf	___flmul@temp+1
  5843  0E0A  0870               	movf	?__Umul8_16,w
  5844  0E0B  00BC               	movwf	___flmul@temp
  5845  0E0C                     l2724:	
  5846  0E0C  083C               	movf	___flmul@temp,w
  5847  0E0D  00AC               	movwf	??___flmul
  5848  0E0E  083D               	movf	___flmul@temp+1,w
  5849  0E0F  00AD               	movwf	??___flmul+1
  5850  0E10  01AE               	clrf	??___flmul+2
  5851  0E11  01AF               	clrf	??___flmul+3
  5852  0E12  082C               	movf	??___flmul,w
  5853  0E13  07B2               	addwf	___flmul@grs,f
  5854  0E14  082D               	movf	??___flmul+1,w
  5855  0E15  1103               	clrz
  5856  0E16  1803               	skipnc
  5857  0E17  3E01               	addlw	1
  5858  0E18  1903               	skipnz
  5859  0E19  2E1B               	goto	u4301
  5860  0E1A  07B3               	addwf	___flmul@grs+1,f
  5861  0E1B                     u4301:	
  5862  0E1B  082E               	movf	??___flmul+2,w
  5863  0E1C  1103               	clrz
  5864  0E1D  1803               	skipnc
  5865  0E1E  3E01               	addlw	1
  5866  0E1F  1903               	skipnz
  5867  0E20  2E22               	goto	u4302
  5868  0E21  07B4               	addwf	___flmul@grs+2,f
  5869  0E22                     u4302:	
  5870  0E22  082F               	movf	??___flmul+3,w
  5871  0E23  1103               	clrz
  5872  0E24  1803               	skipnc
  5873  0E25  3E01               	addlw	1
  5874  0E26  1903               	skipnz
  5875  0E27  2E29               	goto	u4303
  5876  0E28  07B5               	addwf	___flmul@grs+3,f
  5877  0E29                     u4303:	
  5878  0E29                     l2726:	
  5879  0E29  3008               	movlw	8
  5880  0E2A  00AC               	movwf	??___flmul
  5881  0E2B                     u4315:	
  5882  0E2B  1003               	clrc
  5883  0E2C  0DB2               	rlf	___flmul@grs,f
  5884  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5885  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5886  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5887  0E30  0BAC               	decfsz	??___flmul,f
  5888  0E31  2E2B               	goto	u4315
  5889  0E32  0824               	movf	___flmul@b,w
  5890  0E33  00AC               	movwf	??___flmul
  5891  0E34  082C               	movf	??___flmul,w
  5892  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5893  0E36  0828               	movf	___flmul@a,w
  5894  0E37  160A  118A  20A3  120A  158A  	fcall	__Umul8_16
  5895  0E3C  0871               	movf	?__Umul8_16+1,w
  5896  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5897  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5898  0E3F  00BD               	movwf	___flmul@temp+1
  5899  0E40  0870               	movf	?__Umul8_16,w
  5900  0E41  00BC               	movwf	___flmul@temp
  5901  0E42                     l2728:	
  5902  0E42  083C               	movf	___flmul@temp,w
  5903  0E43  00AC               	movwf	??___flmul
  5904  0E44  083D               	movf	___flmul@temp+1,w
  5905  0E45  00AD               	movwf	??___flmul+1
  5906  0E46  01AE               	clrf	??___flmul+2
  5907  0E47  01AF               	clrf	??___flmul+3
  5908  0E48  082C               	movf	??___flmul,w
  5909  0E49  07B2               	addwf	___flmul@grs,f
  5910  0E4A  082D               	movf	??___flmul+1,w
  5911  0E4B  1103               	clrz
  5912  0E4C  1803               	skipnc
  5913  0E4D  3E01               	addlw	1
  5914  0E4E  1903               	skipnz
  5915  0E4F  2E51               	goto	u4321
  5916  0E50  07B3               	addwf	___flmul@grs+1,f
  5917  0E51                     u4321:	
  5918  0E51  082E               	movf	??___flmul+2,w
  5919  0E52  1103               	clrz
  5920  0E53  1803               	skipnc
  5921  0E54  3E01               	addlw	1
  5922  0E55  1903               	skipnz
  5923  0E56  2E58               	goto	u4322
  5924  0E57  07B4               	addwf	___flmul@grs+2,f
  5925  0E58                     u4322:	
  5926  0E58  082F               	movf	??___flmul+3,w
  5927  0E59  1103               	clrz
  5928  0E5A  1803               	skipnc
  5929  0E5B  3E01               	addlw	1
  5930  0E5C  1903               	skipnz
  5931  0E5D  2E5F               	goto	u4323
  5932  0E5E  07B5               	addwf	___flmul@grs+3,f
  5933  0E5F                     u4323:	
  5934  0E5F                     l2730:	
  5935  0E5F  0825               	movf	___flmul@b+1,w
  5936  0E60  00AC               	movwf	??___flmul
  5937  0E61  082C               	movf	??___flmul,w
  5938  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5939  0E63  082A               	movf	___flmul@a+2,w
  5940  0E64  160A  118A  20A3  120A  158A  	fcall	__Umul8_16
  5941  0E69  0871               	movf	?__Umul8_16+1,w
  5942  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5943  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5944  0E6C  00BD               	movwf	___flmul@temp+1
  5945  0E6D  0870               	movf	?__Umul8_16,w
  5946  0E6E  00BC               	movwf	___flmul@temp
  5947  0E6F  083C               	movf	___flmul@temp,w
  5948  0E70  00AC               	movwf	??___flmul
  5949  0E71  083D               	movf	___flmul@temp+1,w
  5950  0E72  00AD               	movwf	??___flmul+1
  5951  0E73  01AE               	clrf	??___flmul+2
  5952  0E74  01AF               	clrf	??___flmul+3
  5953  0E75  082C               	movf	??___flmul,w
  5954  0E76  07B8               	addwf	___flmul@prod,f
  5955  0E77  082D               	movf	??___flmul+1,w
  5956  0E78  1103               	clrz
  5957  0E79  1803               	skipnc
  5958  0E7A  3E01               	addlw	1
  5959  0E7B  1903               	skipnz
  5960  0E7C  2E7E               	goto	u4331
  5961  0E7D  07B9               	addwf	___flmul@prod+1,f
  5962  0E7E                     u4331:	
  5963  0E7E  082E               	movf	??___flmul+2,w
  5964  0E7F  1103               	clrz
  5965  0E80  1803               	skipnc
  5966  0E81  3E01               	addlw	1
  5967  0E82  1903               	skipnz
  5968  0E83  2E85               	goto	u4332
  5969  0E84  07BA               	addwf	___flmul@prod+2,f
  5970  0E85                     u4332:	
  5971  0E85  082F               	movf	??___flmul+3,w
  5972  0E86  1103               	clrz
  5973  0E87  1803               	skipnc
  5974  0E88  3E01               	addlw	1
  5975  0E89  1903               	skipnz
  5976  0E8A  2E8C               	goto	u4333
  5977  0E8B  07BB               	addwf	___flmul@prod+3,f
  5978  0E8C                     u4333:	
  5979  0E8C                     l2732:	
  5980  0E8C  0826               	movf	___flmul@b+2,w
  5981  0E8D  00AC               	movwf	??___flmul
  5982  0E8E  082C               	movf	??___flmul,w
  5983  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5984  0E90  0829               	movf	___flmul@a+1,w
  5985  0E91  160A  118A  20A3  120A  158A  	fcall	__Umul8_16
  5986  0E96  0871               	movf	?__Umul8_16+1,w
  5987  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5988  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5989  0E99  00BD               	movwf	___flmul@temp+1
  5990  0E9A  0870               	movf	?__Umul8_16,w
  5991  0E9B  00BC               	movwf	___flmul@temp
  5992  0E9C                     l2734:	
  5993  0E9C  083C               	movf	___flmul@temp,w
  5994  0E9D  00AC               	movwf	??___flmul
  5995  0E9E  083D               	movf	___flmul@temp+1,w
  5996  0E9F  00AD               	movwf	??___flmul+1
  5997  0EA0  01AE               	clrf	??___flmul+2
  5998  0EA1  01AF               	clrf	??___flmul+3
  5999  0EA2  082C               	movf	??___flmul,w
  6000  0EA3  07B8               	addwf	___flmul@prod,f
  6001  0EA4  082D               	movf	??___flmul+1,w
  6002  0EA5  1103               	clrz
  6003  0EA6  1803               	skipnc
  6004  0EA7  3E01               	addlw	1
  6005  0EA8  1903               	skipnz
  6006  0EA9  2EAB               	goto	u4341
  6007  0EAA  07B9               	addwf	___flmul@prod+1,f
  6008  0EAB                     u4341:	
  6009  0EAB  082E               	movf	??___flmul+2,w
  6010  0EAC  1103               	clrz
  6011  0EAD  1803               	skipnc
  6012  0EAE  3E01               	addlw	1
  6013  0EAF  1903               	skipnz
  6014  0EB0  2EB2               	goto	u4342
  6015  0EB1  07BA               	addwf	___flmul@prod+2,f
  6016  0EB2                     u4342:	
  6017  0EB2  082F               	movf	??___flmul+3,w
  6018  0EB3  1103               	clrz
  6019  0EB4  1803               	skipnc
  6020  0EB5  3E01               	addlw	1
  6021  0EB6  1903               	skipnz
  6022  0EB7  2EB9               	goto	u4343
  6023  0EB8  07BB               	addwf	___flmul@prod+3,f
  6024  0EB9                     u4343:	
  6025  0EB9  0826               	movf	___flmul@b+2,w
  6026  0EBA  00AC               	movwf	??___flmul
  6027  0EBB  082C               	movf	??___flmul,w
  6028  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6029  0EBD  082A               	movf	___flmul@a+2,w
  6030  0EBE  160A  118A  20A3  120A  158A  	fcall	__Umul8_16
  6031  0EC3  0871               	movf	?__Umul8_16+1,w
  6032  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6033  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6034  0EC6  00BD               	movwf	___flmul@temp+1
  6035  0EC7  0870               	movf	?__Umul8_16,w
  6036  0EC8  00BC               	movwf	___flmul@temp
  6037  0EC9                     l2736:	
  6038  0EC9  083C               	movf	___flmul@temp,w
  6039  0ECA  00AC               	movwf	??___flmul
  6040  0ECB  083D               	movf	___flmul@temp+1,w
  6041  0ECC  00AD               	movwf	??___flmul+1
  6042  0ECD  01AE               	clrf	??___flmul+2
  6043  0ECE  01AF               	clrf	??___flmul+3
  6044  0ECF  3008               	movlw	8
  6045  0ED0                     u4355:	
  6046  0ED0  1003               	clrc
  6047  0ED1  0DAC               	rlf	??___flmul,f
  6048  0ED2  0DAD               	rlf	??___flmul+1,f
  6049  0ED3  0DAE               	rlf	??___flmul+2,f
  6050  0ED4  0DAF               	rlf	??___flmul+3,f
  6051  0ED5                     u4350:	
  6052  0ED5  3EFF               	addlw	-1
  6053  0ED6  1D03               	skipz
  6054  0ED7  2ED0               	goto	u4355
  6055  0ED8  082C               	movf	??___flmul,w
  6056  0ED9  07B8               	addwf	___flmul@prod,f
  6057  0EDA  082D               	movf	??___flmul+1,w
  6058  0EDB  1103               	clrz
  6059  0EDC  1803               	skipnc
  6060  0EDD  3E01               	addlw	1
  6061  0EDE  1903               	skipnz
  6062  0EDF  2EE1               	goto	u4361
  6063  0EE0  07B9               	addwf	___flmul@prod+1,f
  6064  0EE1                     u4361:	
  6065  0EE1  082E               	movf	??___flmul+2,w
  6066  0EE2  1103               	clrz
  6067  0EE3  1803               	skipnc
  6068  0EE4  3E01               	addlw	1
  6069  0EE5  1903               	skipnz
  6070  0EE6  2EE8               	goto	u4362
  6071  0EE7  07BA               	addwf	___flmul@prod+2,f
  6072  0EE8                     u4362:	
  6073  0EE8  082F               	movf	??___flmul+3,w
  6074  0EE9  1103               	clrz
  6075  0EEA  1803               	skipnc
  6076  0EEB  3E01               	addlw	1
  6077  0EEC  1903               	skipnz
  6078  0EED  2EEF               	goto	u4363
  6079  0EEE  07BB               	addwf	___flmul@prod+3,f
  6080  0EEF                     u4363:	
  6081  0EEF                     l2738:	
  6082  0EEF  0832               	movf	___flmul@grs,w
  6083  0EF0  00AC               	movwf	??___flmul
  6084  0EF1  0833               	movf	___flmul@grs+1,w
  6085  0EF2  00AD               	movwf	??___flmul+1
  6086  0EF3  0834               	movf	___flmul@grs+2,w
  6087  0EF4  00AE               	movwf	??___flmul+2
  6088  0EF5  0835               	movf	___flmul@grs+3,w
  6089  0EF6  00AF               	movwf	??___flmul+3
  6090  0EF7  3018               	movlw	24
  6091  0EF8                     u4375:	
  6092  0EF8  1003               	clrc
  6093  0EF9  0CAF               	rrf	??___flmul+3,f
  6094  0EFA  0CAE               	rrf	??___flmul+2,f
  6095  0EFB  0CAD               	rrf	??___flmul+1,f
  6096  0EFC  0CAC               	rrf	??___flmul,f
  6097  0EFD                     u4370:	
  6098  0EFD  3EFF               	addlw	-1
  6099  0EFE  1D03               	skipz
  6100  0EFF  2EF8               	goto	u4375
  6101  0F00  082C               	movf	??___flmul,w
  6102  0F01  07B8               	addwf	___flmul@prod,f
  6103  0F02  082D               	movf	??___flmul+1,w
  6104  0F03  1103               	clrz
  6105  0F04  1803               	skipnc
  6106  0F05  3E01               	addlw	1
  6107  0F06  1903               	skipnz
  6108  0F07  2F09               	goto	u4381
  6109  0F08  07B9               	addwf	___flmul@prod+1,f
  6110  0F09                     u4381:	
  6111  0F09  082E               	movf	??___flmul+2,w
  6112  0F0A  1103               	clrz
  6113  0F0B  1803               	skipnc
  6114  0F0C  3E01               	addlw	1
  6115  0F0D  1903               	skipnz
  6116  0F0E  2F10               	goto	u4382
  6117  0F0F  07BA               	addwf	___flmul@prod+2,f
  6118  0F10                     u4382:	
  6119  0F10  082F               	movf	??___flmul+3,w
  6120  0F11  1103               	clrz
  6121  0F12  1803               	skipnc
  6122  0F13  3E01               	addlw	1
  6123  0F14  1903               	skipnz
  6124  0F15  2F17               	goto	u4383
  6125  0F16  07BB               	addwf	___flmul@prod+3,f
  6126  0F17                     u4383:	
  6127  0F17                     l2740:	
  6128  0F17  3008               	movlw	8
  6129  0F18  00AC               	movwf	??___flmul
  6130  0F19                     u4395:	
  6131  0F19  1003               	clrc
  6132  0F1A  0DB2               	rlf	___flmul@grs,f
  6133  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6134  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6135  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6136  0F1E  0BAC               	decfsz	??___flmul,f
  6137  0F1F  2F19               	goto	u4395
  6138  0F20                     l2742:	
  6139  0F20  0837               	movf	___flmul@bexp,w
  6140  0F21  0736               	addwf	___flmul@aexp,w
  6141  0F22  00AC               	movwf	??___flmul
  6142  0F23  01AD               	clrf	??___flmul+1
  6143  0F24  0DAD               	rlf	??___flmul+1,f
  6144  0F25  082C               	movf	??___flmul,w
  6145  0F26  3E82               	addlw	130
  6146  0F27  00BC               	movwf	___flmul@temp
  6147  0F28  082D               	movf	??___flmul+1,w
  6148  0F29  1803               	skipnc
  6149  0F2A  3E01               	addlw	1
  6150  0F2B  3EFF               	addlw	255
  6151  0F2C  00BD               	movwf	___flmul@temp+1
  6152  0F2D  2F4B               	goto	l2754
  6153  0F2E                     l2744:	
  6154  0F2E  3001               	movlw	1
  6155  0F2F  00AC               	movwf	??___flmul
  6156  0F30                     u4405:	
  6157  0F30  1003               	clrc
  6158  0F31  0DB8               	rlf	___flmul@prod,f
  6159  0F32  0DB9               	rlf	___flmul@prod+1,f
  6160  0F33  0DBA               	rlf	___flmul@prod+2,f
  6161  0F34  0DBB               	rlf	___flmul@prod+3,f
  6162  0F35  0BAC               	decfsz	??___flmul,f
  6163  0F36  2F30               	goto	u4405
  6164  0F37                     l2746:	
  6165  0F37  1FB5               	btfss	___flmul@grs+3,7
  6166  0F38  2F3A               	goto	u4411
  6167  0F39  2F3B               	goto	u4410
  6168  0F3A                     u4411:	
  6169  0F3A  2F3C               	goto	l2750
  6170  0F3B                     u4410:	
  6171  0F3B                     l2748:	
  6172  0F3B  1438               	bsf	___flmul@prod,0
  6173  0F3C                     l2750:	
  6174  0F3C  3001               	movlw	1
  6175  0F3D  00AC               	movwf	??___flmul
  6176  0F3E                     u4425:	
  6177  0F3E  1003               	clrc
  6178  0F3F  0DB2               	rlf	___flmul@grs,f
  6179  0F40  0DB3               	rlf	___flmul@grs+1,f
  6180  0F41  0DB4               	rlf	___flmul@grs+2,f
  6181  0F42  0DB5               	rlf	___flmul@grs+3,f
  6182  0F43  0BAC               	decfsz	??___flmul,f
  6183  0F44  2F3E               	goto	u4425
  6184  0F45                     l2752:	
  6185  0F45  30FF               	movlw	255
  6186  0F46  07BC               	addwf	___flmul@temp,f
  6187  0F47  1803               	skipnc
  6188  0F48  0ABD               	incf	___flmul@temp+1,f
  6189  0F49  30FF               	movlw	255
  6190  0F4A  07BD               	addwf	___flmul@temp+1,f
  6191  0F4B                     l2754:	
  6192  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6193  0F4C  2F4E               	goto	u4431
  6194  0F4D  2F4F               	goto	u4430
  6195  0F4E                     u4431:	
  6196  0F4E  2F2E               	goto	l2744
  6197  0F4F                     u4430:	
  6198  0F4F                     l2756:	
  6199  0F4F  01B6               	clrf	___flmul@aexp
  6200  0F50                     l2758:	
  6201  0F50  1FB5               	btfss	___flmul@grs+3,7
  6202  0F51  2F53               	goto	u4441
  6203  0F52  2F54               	goto	u4440
  6204  0F53                     u4441:	
  6205  0F53  2F70               	goto	l2766
  6206  0F54                     u4440:	
  6207  0F54                     l2760:	
  6208  0F54  30FF               	movlw	255
  6209  0F55  0532               	andwf	___flmul@grs,w
  6210  0F56  00AC               	movwf	??___flmul
  6211  0F57  30FF               	movlw	255
  6212  0F58  0533               	andwf	___flmul@grs+1,w
  6213  0F59  00AD               	movwf	??___flmul+1
  6214  0F5A  30FF               	movlw	255
  6215  0F5B  0534               	andwf	___flmul@grs+2,w
  6216  0F5C  00AE               	movwf	??___flmul+2
  6217  0F5D  307F               	movlw	127
  6218  0F5E  0535               	andwf	___flmul@grs+3,w
  6219  0F5F  00AF               	movwf	??___flmul+3
  6220  0F60  082F               	movf	??___flmul+3,w
  6221  0F61  042E               	iorwf	??___flmul+2,w
  6222  0F62  042D               	iorwf	??___flmul+1,w
  6223  0F63  042C               	iorwf	??___flmul,w
  6224  0F64  1903               	skipnz
  6225  0F65  2F67               	goto	u4451
  6226  0F66  2F68               	goto	u4450
  6227  0F67                     u4451:	
  6228  0F67  2F6B               	goto	l806
  6229  0F68                     u4450:	
  6230  0F68                     l2762:	
  6231  0F68  01B6               	clrf	___flmul@aexp
  6232  0F69  0AB6               	incf	___flmul@aexp,f
  6233  0F6A  2F70               	goto	l2766
  6234  0F6B                     l806:	
  6235  0F6B  1C38               	btfss	___flmul@prod,0
  6236  0F6C  2F6E               	goto	u4461
  6237  0F6D  2F6F               	goto	u4460
  6238  0F6E                     u4461:	
  6239  0F6E  2F70               	goto	l2766
  6240  0F6F                     u4460:	
  6241  0F6F  2F68               	goto	l2762
  6242  0F70                     l2766:	
  6243  0F70  0836               	movf	___flmul@aexp,w
  6244  0F71  1903               	btfsc	3,2
  6245  0F72  2F74               	goto	u4471
  6246  0F73  2F75               	goto	u4470
  6247  0F74                     u4471:	
  6248  0F74  2FA6               	goto	l2776
  6249  0F75                     u4470:	
  6250  0F75                     l2768:	
  6251  0F75  3001               	movlw	1
  6252  0F76  07B8               	addwf	___flmul@prod,f
  6253  0F77  3000               	movlw	0
  6254  0F78  1803               	skipnc
  6255  0F79  3001               	movlw	1
  6256  0F7A  07B9               	addwf	___flmul@prod+1,f
  6257  0F7B  3000               	movlw	0
  6258  0F7C  1803               	skipnc
  6259  0F7D  3001               	movlw	1
  6260  0F7E  07BA               	addwf	___flmul@prod+2,f
  6261  0F7F  3000               	movlw	0
  6262  0F80  1803               	skipnc
  6263  0F81  3001               	movlw	1
  6264  0F82  07BB               	addwf	___flmul@prod+3,f
  6265  0F83                     l2770:	
  6266  0F83  1C3B               	btfss	___flmul@prod+3,0
  6267  0F84  2F86               	goto	u4481
  6268  0F85  2F87               	goto	u4480
  6269  0F86                     u4481:	
  6270  0F86  2FA6               	goto	l2776
  6271  0F87                     u4480:	
  6272  0F87                     l2772:	
  6273  0F87  0838               	movf	___flmul@prod,w
  6274  0F88  00AC               	movwf	??___flmul
  6275  0F89  0839               	movf	___flmul@prod+1,w
  6276  0F8A  00AD               	movwf	??___flmul+1
  6277  0F8B  083A               	movf	___flmul@prod+2,w
  6278  0F8C  00AE               	movwf	??___flmul+2
  6279  0F8D  083B               	movf	___flmul@prod+3,w
  6280  0F8E  00AF               	movwf	??___flmul+3
  6281  0F8F  3001               	movlw	1
  6282  0F90  00B0               	movwf	??___flmul+4
  6283  0F91                     u4495:	
  6284  0F91  0D2F               	rlf	??___flmul+3,w
  6285  0F92  0CAF               	rrf	??___flmul+3,f
  6286  0F93  0CAE               	rrf	??___flmul+2,f
  6287  0F94  0CAD               	rrf	??___flmul+1,f
  6288  0F95  0CAC               	rrf	??___flmul,f
  6289  0F96                     u4490:	
  6290  0F96  0BB0               	decfsz	??___flmul+4,f
  6291  0F97  2F91               	goto	u4495
  6292  0F98  082F               	movf	??___flmul+3,w
  6293  0F99  00BB               	movwf	___flmul@prod+3
  6294  0F9A  082E               	movf	??___flmul+2,w
  6295  0F9B  00BA               	movwf	___flmul@prod+2
  6296  0F9C  082D               	movf	??___flmul+1,w
  6297  0F9D  00B9               	movwf	___flmul@prod+1
  6298  0F9E  082C               	movf	??___flmul,w
  6299  0F9F  00B8               	movwf	___flmul@prod
  6300  0FA0                     l2774:	
  6301  0FA0  3001               	movlw	1
  6302  0FA1  07BC               	addwf	___flmul@temp,f
  6303  0FA2  1803               	skipnc
  6304  0FA3  0ABD               	incf	___flmul@temp+1,f
  6305  0FA4  3000               	movlw	0
  6306  0FA5  07BD               	addwf	___flmul@temp+1,f
  6307  0FA6                     l2776:	
  6308  0FA6  083D               	movf	___flmul@temp+1,w
  6309  0FA7  3A80               	xorlw	128
  6310  0FA8  00FF               	movwf	btemp+1
  6311  0FA9  3080               	movlw	128
  6312  0FAA  027F               	subwf	btemp+1,w
  6313  0FAB  1D03               	skipz
  6314  0FAC  2FAF               	goto	u4505
  6315  0FAD  30FF               	movlw	255
  6316  0FAE  023C               	subwf	___flmul@temp,w
  6317  0FAF                     u4505:	
  6318  0FAF  1C03               	skipc
  6319  0FB0  2FB2               	goto	u4501
  6320  0FB1  2FB3               	goto	u4500
  6321  0FB2                     u4501:	
  6322  0FB2  2FBE               	goto	l2780
  6323  0FB3                     u4500:	
  6324  0FB3                     l2778:	
  6325  0FB3  307F               	movlw	127
  6326  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6327  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6328  0FB6  00BB               	movwf	___flmul@prod+3
  6329  0FB7  3080               	movlw	128
  6330  0FB8  00BA               	movwf	___flmul@prod+2
  6331  0FB9  3000               	movlw	0
  6332  0FBA  00B9               	movwf	___flmul@prod+1
  6333  0FBB  3000               	movlw	0
  6334  0FBC  00B8               	movwf	___flmul@prod
  6335  0FBD  2FF3               	goto	l812
  6336  0FBE                     l2780:	
  6337  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6338  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6339  0FC0  083D               	movf	___flmul@temp+1,w
  6340  0FC1  3A80               	xorlw	128
  6341  0FC2  00FF               	movwf	btemp+1
  6342  0FC3  3080               	movlw	128
  6343  0FC4  027F               	subwf	btemp+1,w
  6344  0FC5  1D03               	skipz
  6345  0FC6  2FC9               	goto	u4515
  6346  0FC7  3001               	movlw	1
  6347  0FC8  023C               	subwf	___flmul@temp,w
  6348  0FC9                     u4515:	
  6349  0FC9  1803               	skipnc
  6350  0FCA  2FCC               	goto	u4511
  6351  0FCB  2FCD               	goto	u4510
  6352  0FCC                     u4511:	
  6353  0FCC  2FD9               	goto	l2786
  6354  0FCD                     u4510:	
  6355  0FCD                     l2782:	
  6356  0FCD  3000               	movlw	0
  6357  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6358  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6359  0FD0  00BB               	movwf	___flmul@prod+3
  6360  0FD1  3000               	movlw	0
  6361  0FD2  00BA               	movwf	___flmul@prod+2
  6362  0FD3  3000               	movlw	0
  6363  0FD4  00B9               	movwf	___flmul@prod+1
  6364  0FD5  3000               	movlw	0
  6365  0FD6  00B8               	movwf	___flmul@prod
  6366  0FD7                     l2784:	
  6367  0FD7  01B1               	clrf	___flmul@sign
  6368  0FD8  2FF3               	goto	l812
  6369  0FD9                     l2786:	
  6370  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6371  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6372  0FDB  083C               	movf	___flmul@temp,w
  6373  0FDC  00AC               	movwf	??___flmul
  6374  0FDD  082C               	movf	??___flmul,w
  6375  0FDE  00B7               	movwf	___flmul@bexp
  6376  0FDF  30FF               	movlw	255
  6377  0FE0  05B8               	andwf	___flmul@prod,f
  6378  0FE1  30FF               	movlw	255
  6379  0FE2  05B9               	andwf	___flmul@prod+1,f
  6380  0FE3  307F               	movlw	127
  6381  0FE4  05BA               	andwf	___flmul@prod+2,f
  6382  0FE5  3000               	movlw	0
  6383  0FE6  05BB               	andwf	___flmul@prod+3,f
  6384  0FE7                     l2788:	
  6385  0FE7  1C37               	btfss	___flmul@bexp,0
  6386  0FE8  2FEA               	goto	u4521
  6387  0FE9  2FEB               	goto	u4520
  6388  0FEA                     u4521:	
  6389  0FEA  2FEC               	goto	l2792
  6390  0FEB                     u4520:	
  6391  0FEB                     l2790:	
  6392  0FEB  17BA               	bsf	___flmul@prod+2,7
  6393  0FEC                     l2792:	
  6394  0FEC  0837               	movf	___flmul@bexp,w
  6395  0FED  00AC               	movwf	??___flmul
  6396  0FEE  1003               	clrc
  6397  0FEF  0C2C               	rrf	??___flmul,w
  6398  0FF0  00AD               	movwf	??___flmul+1
  6399  0FF1  082D               	movf	??___flmul+1,w
  6400  0FF2  00BB               	movwf	___flmul@prod+3
  6401  0FF3                     l812:	
  6402  0FF3  0831               	movf	___flmul@sign,w
  6403  0FF4  00AC               	movwf	??___flmul
  6404  0FF5  082C               	movf	??___flmul,w
  6405  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6406  0FF7                     l2794:	
  6407  0FF7  083B               	movf	___flmul@prod+3,w
  6408  0FF8  00A7               	movwf	?___flmul+3
  6409  0FF9  083A               	movf	___flmul@prod+2,w
  6410  0FFA  00A6               	movwf	?___flmul+2
  6411  0FFB  0839               	movf	___flmul@prod+1,w
  6412  0FFC  00A5               	movwf	?___flmul+1
  6413  0FFD  0838               	movf	___flmul@prod,w
  6414  0FFE  00A4               	movwf	?___flmul
  6415  0FFF                     l800:	
  6416  0FFF  0008               	return
  6417  1000                     __end_of___flmul:	
  6418                           
  6419                           	psect	text10
  6420  10A3                     __ptext10:	
  6421 ;; *************** function __Umul8_16 *****************
  6422 ;; Defined at:
  6423 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  multiplier      1    wreg     unsigned char 
  6426 ;;  multiplicand    1    0[COMMON] unsigned char 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  multiplier      1    8[COMMON] unsigned char 
  6429 ;;  word_mpld       2    6[COMMON] unsigned int 
  6430 ;;  product         2    4[COMMON] unsigned int 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  2    0[COMMON] unsigned int 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6440 ;;      Params:         2       0       0       0       0
  6441 ;;      Locals:         5       0       0       0       0
  6442 ;;      Temps:          2       0       0       0       0
  6443 ;;      Totals:         9       0       0       0       0
  6444 ;;Total ram usage:        9 bytes
  6445 ;; Hardware stack levels used:    1
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		___flmul
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           
  6454                           ;psect for function __Umul8_16
  6455  10A3                     __Umul8_16:	
  6456                           
  6457                           ;incstack = 0
  6458                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6459                           ;__Umul8_16@multiplier stored from wreg
  6460  10A3  00F8               	movwf	__Umul8_16@multiplier
  6461  10A4                     l2286:	
  6462  10A4  01F4               	clrf	__Umul8_16@product
  6463  10A5  01F5               	clrf	__Umul8_16@product+1
  6464  10A6                     l2288:	
  6465  10A6  0870               	movf	__Umul8_16@multiplicand,w
  6466  10A7  00F2               	movwf	??__Umul8_16
  6467  10A8  01F3               	clrf	??__Umul8_16+1
  6468  10A9  0872               	movf	??__Umul8_16,w
  6469  10AA  00F6               	movwf	__Umul8_16@word_mpld
  6470  10AB  0873               	movf	??__Umul8_16+1,w
  6471  10AC  00F7               	movwf	__Umul8_16@word_mpld+1
  6472  10AD                     l2290:	
  6473  10AD  1C78               	btfss	__Umul8_16@multiplier,0
  6474  10AE  28B0               	goto	u3221
  6475  10AF  28B1               	goto	u3220
  6476  10B0                     u3221:	
  6477  10B0  28B7               	goto	l866
  6478  10B1                     u3220:	
  6479  10B1                     l2292:	
  6480  10B1  0876               	movf	__Umul8_16@word_mpld,w
  6481  10B2  07F4               	addwf	__Umul8_16@product,f
  6482  10B3  1803               	skipnc
  6483  10B4  0AF5               	incf	__Umul8_16@product+1,f
  6484  10B5  0877               	movf	__Umul8_16@word_mpld+1,w
  6485  10B6  07F5               	addwf	__Umul8_16@product+1,f
  6486  10B7                     l866:	
  6487  10B7  3001               	movlw	1
  6488  10B8                     u3235:	
  6489  10B8  1003               	clrc
  6490  10B9  0DF6               	rlf	__Umul8_16@word_mpld,f
  6491  10BA  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6492  10BB  3EFF               	addlw	-1
  6493  10BC  1D03               	skipz
  6494  10BD  28B8               	goto	u3235
  6495  10BE  1003               	clrc
  6496  10BF  0CF8               	rrf	__Umul8_16@multiplier,f
  6497  10C0                     l2294:	
  6498  10C0  0878               	movf	__Umul8_16@multiplier,w
  6499  10C1  1D03               	btfss	3,2
  6500  10C2  28C4               	goto	u3241
  6501  10C3  28C5               	goto	u3240
  6502  10C4                     u3241:	
  6503  10C4  28AD               	goto	l2290
  6504  10C5                     u3240:	
  6505  10C5                     l2296:	
  6506  10C5  0875               	movf	__Umul8_16@product+1,w
  6507  10C6  00F1               	movwf	?__Umul8_16+1
  6508  10C7  0874               	movf	__Umul8_16@product,w
  6509  10C8  00F0               	movwf	?__Umul8_16
  6510  10C9                     l868:	
  6511  10C9  0008               	return
  6512  10CA                     __end_of__Umul8_16:	
  6513                           
  6514                           	psect	text11
  6515  12B0                     __ptext11:	
  6516 ;; *************** function __tdiv_to_l_ *****************
  6517 ;; Defined at:
  6518 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  f1              4    0[COMMON] float 
  6521 ;;  f2              4    4[COMMON] float 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  quot            4    0[BANK0 ] unsigned long 
  6524 ;;  exp1            1    5[BANK0 ] unsigned char 
  6525 ;;  cntr            1    4[BANK0 ] unsigned char 
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  4    0[COMMON] unsigned long 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6535 ;;      Params:         8       0       0       0       0
  6536 ;;      Locals:         0       6       0       0       0
  6537 ;;      Temps:          4       0       0       0       0
  6538 ;;      Totals:        12       6       0       0       0
  6539 ;;Total ram usage:       18 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_sprintf
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           
  6549                           ;psect for function __tdiv_to_l_
  6550  12B0                     __tdiv_to_l_:	
  6551  12B0                     l2962:	
  6552                           ;incstack = 0
  6553                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6554                           
  6555  12B0  0870               	movf	__tdiv_to_l_@f1,w
  6556  12B1  00F8               	movwf	??__tdiv_to_l_
  6557  12B2  0871               	movf	__tdiv_to_l_@f1+1,w
  6558  12B3  00F9               	movwf	??__tdiv_to_l_+1
  6559  12B4  0872               	movf	__tdiv_to_l_@f1+2,w
  6560  12B5  00FA               	movwf	??__tdiv_to_l_+2
  6561  12B6  1003               	clrc
  6562  12B7  0D79               	rlf	??__tdiv_to_l_+1,w
  6563  12B8  0D7A               	rlf	??__tdiv_to_l_+2,w
  6564  12B9  00FB               	movwf	??__tdiv_to_l_+3
  6565  12BA  087B               	movf	??__tdiv_to_l_+3,w
  6566  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  6567  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  6568  12BD  00A5               	movwf	__tdiv_to_l_@exp1
  6569  12BE  0825               	movf	__tdiv_to_l_@exp1,w
  6570  12BF  1D03               	btfss	3,2
  6571  12C0  2AC2               	goto	u4981
  6572  12C1  2AC3               	goto	u4980
  6573  12C2                     u4981:	
  6574  12C2  2ACC               	goto	l2968
  6575  12C3                     u4980:	
  6576  12C3                     l2964:	
  6577  12C3  3000               	movlw	0
  6578  12C4  00F3               	movwf	?__tdiv_to_l_+3
  6579  12C5  3000               	movlw	0
  6580  12C6  00F2               	movwf	?__tdiv_to_l_+2
  6581  12C7  3000               	movlw	0
  6582  12C8  00F1               	movwf	?__tdiv_to_l_+1
  6583  12C9  3000               	movlw	0
  6584  12CA  00F0               	movwf	?__tdiv_to_l_
  6585  12CB  2B6C               	goto	l594
  6586  12CC                     l2968:	
  6587  12CC  0874               	movf	__tdiv_to_l_@f2,w
  6588  12CD  00F8               	movwf	??__tdiv_to_l_
  6589  12CE  0875               	movf	__tdiv_to_l_@f2+1,w
  6590  12CF  00F9               	movwf	??__tdiv_to_l_+1
  6591  12D0  0876               	movf	__tdiv_to_l_@f2+2,w
  6592  12D1  00FA               	movwf	??__tdiv_to_l_+2
  6593  12D2  1003               	clrc
  6594  12D3  0D79               	rlf	??__tdiv_to_l_+1,w
  6595  12D4  0D7A               	rlf	??__tdiv_to_l_+2,w
  6596  12D5  00FB               	movwf	??__tdiv_to_l_+3
  6597  12D6  087B               	movf	??__tdiv_to_l_+3,w
  6598  12D7  00A4               	movwf	__tdiv_to_l_@cntr
  6599  12D8  0824               	movf	__tdiv_to_l_@cntr,w
  6600  12D9  1D03               	btfss	3,2
  6601  12DA  2ADC               	goto	u4991
  6602  12DB  2ADD               	goto	u4990
  6603  12DC                     u4991:	
  6604  12DC  2ADE               	goto	l595
  6605  12DD                     u4990:	
  6606  12DD  2AC3               	goto	l2964
  6607  12DE                     l595:	
  6608  12DE  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6609  12DF                     l2974:	
  6610  12DF  30FF               	movlw	255
  6611  12E0  05F0               	andwf	__tdiv_to_l_@f1,f
  6612  12E1  30FF               	movlw	255
  6613  12E2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6614  12E3  3000               	movlw	0
  6615  12E4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6616  12E5                     l2976:	
  6617  12E5  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6618  12E6  30FF               	movlw	255
  6619  12E7  05F4               	andwf	__tdiv_to_l_@f2,f
  6620  12E8  30FF               	movlw	255
  6621  12E9  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6622  12EA  3000               	movlw	0
  6623  12EB  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6624  12EC  3000               	movlw	0
  6625  12ED  00A3               	movwf	__tdiv_to_l_@quot+3
  6626  12EE  3000               	movlw	0
  6627  12EF  00A2               	movwf	__tdiv_to_l_@quot+2
  6628  12F0  3000               	movlw	0
  6629  12F1  00A1               	movwf	__tdiv_to_l_@quot+1
  6630  12F2  3000               	movlw	0
  6631  12F3  00A0               	movwf	__tdiv_to_l_@quot
  6632  12F4                     l2978:	
  6633  12F4  307F               	movlw	127
  6634  12F5  02A5               	subwf	__tdiv_to_l_@exp1,f
  6635  12F6                     l2980:	
  6636  12F6  3098               	movlw	152
  6637  12F7  0724               	addwf	__tdiv_to_l_@cntr,w
  6638  12F8  00F8               	movwf	??__tdiv_to_l_
  6639  12F9  0878               	movf	??__tdiv_to_l_,w
  6640  12FA  02A5               	subwf	__tdiv_to_l_@exp1,f
  6641  12FB  3018               	movlw	24
  6642  12FC  00F8               	movwf	??__tdiv_to_l_
  6643  12FD  0878               	movf	??__tdiv_to_l_,w
  6644  12FE  00A4               	movwf	__tdiv_to_l_@cntr
  6645  12FF                     l2982:	
  6646  12FF  3001               	movlw	1
  6647  1300  00F8               	movwf	??__tdiv_to_l_
  6648  1301                     u5005:	
  6649  1301  1003               	clrc
  6650  1302  0DA0               	rlf	__tdiv_to_l_@quot,f
  6651  1303  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6652  1304  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6653  1305  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6654  1306  0BF8               	decfsz	??__tdiv_to_l_,f
  6655  1307  2B01               	goto	u5005
  6656  1308                     l2984:	
  6657  1308  0876               	movf	__tdiv_to_l_@f2+2,w
  6658  1309  0272               	subwf	__tdiv_to_l_@f1+2,w
  6659  130A  1D03               	skipz
  6660  130B  2B12               	goto	u5015
  6661  130C  0875               	movf	__tdiv_to_l_@f2+1,w
  6662  130D  0271               	subwf	__tdiv_to_l_@f1+1,w
  6663  130E  1D03               	skipz
  6664  130F  2B12               	goto	u5015
  6665  1310  0874               	movf	__tdiv_to_l_@f2,w
  6666  1311  0270               	subwf	__tdiv_to_l_@f1,w
  6667  1312                     u5015:	
  6668  1312  1C03               	skipc
  6669  1313  2B15               	goto	u5011
  6670  1314  2B16               	goto	u5010
  6671  1315                     u5011:	
  6672  1315  2B21               	goto	l2990
  6673  1316                     u5010:	
  6674  1316                     l2986:	
  6675  1316  0874               	movf	__tdiv_to_l_@f2,w
  6676  1317  02F0               	subwf	__tdiv_to_l_@f1,f
  6677  1318  0875               	movf	__tdiv_to_l_@f2+1,w
  6678  1319  1C03               	skipc
  6679  131A  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6680  131B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6681  131C  0876               	movf	__tdiv_to_l_@f2+2,w
  6682  131D  1C03               	skipc
  6683  131E  0A76               	incf	__tdiv_to_l_@f2+2,w
  6684  131F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6685  1320                     l2988:	
  6686  1320  1420               	bsf	__tdiv_to_l_@quot,0
  6687  1321                     l2990:	
  6688  1321  3001               	movlw	1
  6689  1322                     u5025:	
  6690  1322  1003               	clrc
  6691  1323  0DF0               	rlf	__tdiv_to_l_@f1,f
  6692  1324  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6693  1325  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6694  1326  3EFF               	addlw	-1
  6695  1327  1D03               	skipz
  6696  1328  2B22               	goto	u5025
  6697  1329                     l2992:	
  6698  1329  3001               	movlw	1
  6699  132A  02A4               	subwf	__tdiv_to_l_@cntr,f
  6700  132B  1D03               	btfss	3,2
  6701  132C  2B2E               	goto	u5031
  6702  132D  2B2F               	goto	u5030
  6703  132E                     u5031:	
  6704  132E  2AFF               	goto	l2982
  6705  132F                     u5030:	
  6706  132F                     l598:	
  6707  132F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6708  1330  2B32               	goto	u5041
  6709  1331  2B33               	goto	u5040
  6710  1332                     u5041:	
  6711  1332  2B4D               	goto	l3002
  6712  1333                     u5040:	
  6713  1333                     l2994:	
  6714  1333  0825               	movf	__tdiv_to_l_@exp1,w
  6715  1334  3A80               	xorlw	128
  6716  1335  3E97               	addlw	151
  6717  1336  1803               	skipnc
  6718  1337  2B39               	goto	u5051
  6719  1338  2B3A               	goto	u5050
  6720  1339                     u5051:	
  6721  1339  2B3B               	goto	l3000
  6722  133A                     u5050:	
  6723  133A  2AC3               	goto	l2964
  6724  133B                     l3000:	
  6725  133B  3001               	movlw	1
  6726  133C                     u5065:	
  6727  133C  1003               	clrc
  6728  133D  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6729  133E  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6730  133F  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6731  1340  0CA0               	rrf	__tdiv_to_l_@quot,f
  6732  1341  3EFF               	addlw	-1
  6733  1342  1D03               	skipz
  6734  1343  2B3C               	goto	u5065
  6735  1344  3001               	movlw	1
  6736  1345  00F8               	movwf	??__tdiv_to_l_
  6737  1346  0878               	movf	??__tdiv_to_l_,w
  6738  1347  07A5               	addwf	__tdiv_to_l_@exp1,f
  6739  1348  1D03               	btfss	3,2
  6740  1349  2B4B               	goto	u5071
  6741  134A  2B4C               	goto	u5070
  6742  134B                     u5071:	
  6743  134B  2B3B               	goto	l3000
  6744  134C                     u5070:	
  6745  134C  2B64               	goto	l3010
  6746  134D                     l3002:	
  6747  134D  3018               	movlw	24
  6748  134E  0225               	subwf	__tdiv_to_l_@exp1,w
  6749  134F  1C03               	skipc
  6750  1350  2B52               	goto	u5081
  6751  1351  2B53               	goto	u5080
  6752  1352                     u5081:	
  6753  1352  2B5F               	goto	l605
  6754  1353                     u5080:	
  6755  1353  2AC3               	goto	l2964
  6756  1354                     l3008:	
  6757  1354  3001               	movlw	1
  6758  1355  00F8               	movwf	??__tdiv_to_l_
  6759  1356                     u5095:	
  6760  1356  1003               	clrc
  6761  1357  0DA0               	rlf	__tdiv_to_l_@quot,f
  6762  1358  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6763  1359  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6764  135A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6765  135B  0BF8               	decfsz	??__tdiv_to_l_,f
  6766  135C  2B56               	goto	u5095
  6767  135D  3001               	movlw	1
  6768  135E  02A5               	subwf	__tdiv_to_l_@exp1,f
  6769  135F                     l605:	
  6770  135F  0825               	movf	__tdiv_to_l_@exp1,w
  6771  1360  1D03               	btfss	3,2
  6772  1361  2B63               	goto	u5101
  6773  1362  2B64               	goto	u5100
  6774  1363                     u5101:	
  6775  1363  2B54               	goto	l3008
  6776  1364                     u5100:	
  6777  1364                     l3010:	
  6778  1364  0823               	movf	__tdiv_to_l_@quot+3,w
  6779  1365  00F3               	movwf	?__tdiv_to_l_+3
  6780  1366  0822               	movf	__tdiv_to_l_@quot+2,w
  6781  1367  00F2               	movwf	?__tdiv_to_l_+2
  6782  1368  0821               	movf	__tdiv_to_l_@quot+1,w
  6783  1369  00F1               	movwf	?__tdiv_to_l_+1
  6784  136A  0820               	movf	__tdiv_to_l_@quot,w
  6785  136B  00F0               	movwf	?__tdiv_to_l_
  6786  136C                     l594:	
  6787  136C  0008               	return
  6788  136D                     __end_of__tdiv_to_l_:	
  6789                           
  6790                           	psect	text12
  6791  0882                     __ptext12:	
  6792 ;; *************** function __div_to_l_ *****************
  6793 ;; Defined at:
  6794 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  f1              4    0[COMMON] unsigned long 
  6797 ;;  f2              4    4[COMMON] unsigned long 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  quot            4    0[BANK0 ] unsigned long 
  6800 ;;  exp1            1    5[BANK0 ] unsigned char 
  6801 ;;  cntr            1    4[BANK0 ] unsigned char 
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  4    0[COMMON] unsigned long 
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6811 ;;      Params:         8       0       0       0       0
  6812 ;;      Locals:         0       6       0       0       0
  6813 ;;      Temps:          1       0       0       0       0
  6814 ;;      Totals:         9       6       0       0       0
  6815 ;;Total ram usage:       15 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_sprintf
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           
  6825                           ;psect for function __div_to_l_
  6826  0882                     __div_to_l_:	
  6827  0882                     l3014:	
  6828                           ;incstack = 0
  6829                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6830                           
  6831  0882  1003               	clrc
  6832  0883  0D72               	rlf	__div_to_l_@f1+2,w
  6833  0884  0D73               	rlf	__div_to_l_@f1+3,w
  6834  0885  00F8               	movwf	??__div_to_l_
  6835  0886  0878               	movf	??__div_to_l_,w
  6836  0887  1283               	bcf	3,5	;RP0=0, select bank0
  6837  0888  1303               	bcf	3,6	;RP1=0, select bank0
  6838  0889  00A5               	movwf	__div_to_l_@exp1
  6839  088A  0825               	movf	__div_to_l_@exp1,w
  6840  088B  1D03               	btfss	3,2
  6841  088C  288E               	goto	u5111
  6842  088D  288F               	goto	u5110
  6843  088E                     u5111:	
  6844  088E  2898               	goto	l3020
  6845  088F                     u5110:	
  6846  088F                     l3016:	
  6847  088F  3000               	movlw	0
  6848  0890  00F3               	movwf	?__div_to_l_+3
  6849  0891  3000               	movlw	0
  6850  0892  00F2               	movwf	?__div_to_l_+2
  6851  0893  3000               	movlw	0
  6852  0894  00F1               	movwf	?__div_to_l_+1
  6853  0895  3000               	movlw	0
  6854  0896  00F0               	movwf	?__div_to_l_
  6855  0897  293F               	goto	l547
  6856  0898                     l3020:	
  6857  0898  1003               	clrc
  6858  0899  0D76               	rlf	__div_to_l_@f2+2,w
  6859  089A  0D77               	rlf	__div_to_l_@f2+3,w
  6860  089B  00F8               	movwf	??__div_to_l_
  6861  089C  0878               	movf	??__div_to_l_,w
  6862  089D  00A4               	movwf	__div_to_l_@cntr
  6863  089E  0824               	movf	__div_to_l_@cntr,w
  6864  089F  1D03               	btfss	3,2
  6865  08A0  28A2               	goto	u5121
  6866  08A1  28A3               	goto	u5120
  6867  08A2                     u5121:	
  6868  08A2  28A4               	goto	l548
  6869  08A3                     u5120:	
  6870  08A3  288F               	goto	l3016
  6871  08A4                     l548:	
  6872  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  6873  08A5                     l3026:	
  6874  08A5  30FF               	movlw	255
  6875  08A6  05F0               	andwf	__div_to_l_@f1,f
  6876  08A7  30FF               	movlw	255
  6877  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  6878  08A9  30FF               	movlw	255
  6879  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  6880  08AB  3000               	movlw	0
  6881  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  6882  08AD                     l3028:	
  6883  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  6884  08AE  30FF               	movlw	255
  6885  08AF  05F4               	andwf	__div_to_l_@f2,f
  6886  08B0  30FF               	movlw	255
  6887  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  6888  08B2  30FF               	movlw	255
  6889  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  6890  08B4  3000               	movlw	0
  6891  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  6892  08B6  3000               	movlw	0
  6893  08B7  00A3               	movwf	__div_to_l_@quot+3
  6894  08B8  3000               	movlw	0
  6895  08B9  00A2               	movwf	__div_to_l_@quot+2
  6896  08BA  3000               	movlw	0
  6897  08BB  00A1               	movwf	__div_to_l_@quot+1
  6898  08BC  3000               	movlw	0
  6899  08BD  00A0               	movwf	__div_to_l_@quot
  6900  08BE                     l3030:	
  6901  08BE  307F               	movlw	127
  6902  08BF  02A5               	subwf	__div_to_l_@exp1,f
  6903  08C0                     l3032:	
  6904  08C0  30A0               	movlw	160
  6905  08C1  0724               	addwf	__div_to_l_@cntr,w
  6906  08C2  00F8               	movwf	??__div_to_l_
  6907  08C3  0878               	movf	??__div_to_l_,w
  6908  08C4  02A5               	subwf	__div_to_l_@exp1,f
  6909  08C5  3020               	movlw	32
  6910  08C6  00F8               	movwf	??__div_to_l_
  6911  08C7  0878               	movf	??__div_to_l_,w
  6912  08C8  00A4               	movwf	__div_to_l_@cntr
  6913  08C9                     l3034:	
  6914  08C9  3001               	movlw	1
  6915  08CA  00F8               	movwf	??__div_to_l_
  6916  08CB                     u5135:	
  6917  08CB  1003               	clrc
  6918  08CC  0DA0               	rlf	__div_to_l_@quot,f
  6919  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  6920  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  6921  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  6922  08D0  0BF8               	decfsz	??__div_to_l_,f
  6923  08D1  28CB               	goto	u5135
  6924  08D2                     l3036:	
  6925  08D2  0877               	movf	__div_to_l_@f2+3,w
  6926  08D3  0273               	subwf	__div_to_l_@f1+3,w
  6927  08D4  1D03               	skipz
  6928  08D5  28E0               	goto	u5145
  6929  08D6  0876               	movf	__div_to_l_@f2+2,w
  6930  08D7  0272               	subwf	__div_to_l_@f1+2,w
  6931  08D8  1D03               	skipz
  6932  08D9  28E0               	goto	u5145
  6933  08DA  0875               	movf	__div_to_l_@f2+1,w
  6934  08DB  0271               	subwf	__div_to_l_@f1+1,w
  6935  08DC  1D03               	skipz
  6936  08DD  28E0               	goto	u5145
  6937  08DE  0874               	movf	__div_to_l_@f2,w
  6938  08DF  0270               	subwf	__div_to_l_@f1,w
  6939  08E0                     u5145:	
  6940  08E0  1C03               	skipc
  6941  08E1  28E3               	goto	u5141
  6942  08E2  28E4               	goto	u5140
  6943  08E3                     u5141:	
  6944  08E3  28F3               	goto	l3042
  6945  08E4                     u5140:	
  6946  08E4                     l3038:	
  6947  08E4  0874               	movf	__div_to_l_@f2,w
  6948  08E5  02F0               	subwf	__div_to_l_@f1,f
  6949  08E6  0875               	movf	__div_to_l_@f2+1,w
  6950  08E7  1C03               	skipc
  6951  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  6952  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  6953  08EA  0876               	movf	__div_to_l_@f2+2,w
  6954  08EB  1C03               	skipc
  6955  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  6956  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  6957  08EE  0877               	movf	__div_to_l_@f2+3,w
  6958  08EF  1C03               	skipc
  6959  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  6960  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  6961  08F2                     l3040:	
  6962  08F2  1420               	bsf	__div_to_l_@quot,0
  6963  08F3                     l3042:	
  6964  08F3  3001               	movlw	1
  6965  08F4  00F8               	movwf	??__div_to_l_
  6966  08F5                     u5155:	
  6967  08F5  1003               	clrc
  6968  08F6  0DF0               	rlf	__div_to_l_@f1,f
  6969  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  6970  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  6971  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  6972  08FA  0BF8               	decfsz	??__div_to_l_,f
  6973  08FB  28F5               	goto	u5155
  6974  08FC                     l3044:	
  6975  08FC  3001               	movlw	1
  6976  08FD  02A4               	subwf	__div_to_l_@cntr,f
  6977  08FE  1D03               	btfss	3,2
  6978  08FF  2901               	goto	u5161
  6979  0900  2902               	goto	u5160
  6980  0901                     u5161:	
  6981  0901  28C9               	goto	l3034
  6982  0902                     u5160:	
  6983  0902                     l551:	
  6984  0902  1FA5               	btfss	__div_to_l_@exp1,7
  6985  0903  2905               	goto	u5171
  6986  0904  2906               	goto	u5170
  6987  0905                     u5171:	
  6988  0905  2920               	goto	l3054
  6989  0906                     u5170:	
  6990  0906                     l3046:	
  6991  0906  0825               	movf	__div_to_l_@exp1,w
  6992  0907  3A80               	xorlw	128
  6993  0908  3E9F               	addlw	159
  6994  0909  1803               	skipnc
  6995  090A  290C               	goto	u5181
  6996  090B  290D               	goto	u5180
  6997  090C                     u5181:	
  6998  090C  290E               	goto	l3052
  6999  090D                     u5180:	
  7000  090D  288F               	goto	l3016
  7001  090E                     l3052:	
  7002  090E  3001               	movlw	1
  7003  090F                     u5195:	
  7004  090F  1003               	clrc
  7005  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  7006  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  7007  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  7008  0913  0CA0               	rrf	__div_to_l_@quot,f
  7009  0914  3EFF               	addlw	-1
  7010  0915  1D03               	skipz
  7011  0916  290F               	goto	u5195
  7012  0917  3001               	movlw	1
  7013  0918  00F8               	movwf	??__div_to_l_
  7014  0919  0878               	movf	??__div_to_l_,w
  7015  091A  07A5               	addwf	__div_to_l_@exp1,f
  7016  091B  1D03               	btfss	3,2
  7017  091C  291E               	goto	u5201
  7018  091D  291F               	goto	u5200
  7019  091E                     u5201:	
  7020  091E  290E               	goto	l3052
  7021  091F                     u5200:	
  7022  091F  2937               	goto	l3062
  7023  0920                     l3054:	
  7024  0920  3020               	movlw	32
  7025  0921  0225               	subwf	__div_to_l_@exp1,w
  7026  0922  1C03               	skipc
  7027  0923  2925               	goto	u5211
  7028  0924  2926               	goto	u5210
  7029  0925                     u5211:	
  7030  0925  2932               	goto	l558
  7031  0926                     u5210:	
  7032  0926  288F               	goto	l3016
  7033  0927                     l3060:	
  7034  0927  3001               	movlw	1
  7035  0928  00F8               	movwf	??__div_to_l_
  7036  0929                     u5225:	
  7037  0929  1003               	clrc
  7038  092A  0DA0               	rlf	__div_to_l_@quot,f
  7039  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  7040  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  7041  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  7042  092E  0BF8               	decfsz	??__div_to_l_,f
  7043  092F  2929               	goto	u5225
  7044  0930  3001               	movlw	1
  7045  0931  02A5               	subwf	__div_to_l_@exp1,f
  7046  0932                     l558:	
  7047  0932  0825               	movf	__div_to_l_@exp1,w
  7048  0933  1D03               	btfss	3,2
  7049  0934  2936               	goto	u5231
  7050  0935  2937               	goto	u5230
  7051  0936                     u5231:	
  7052  0936  2927               	goto	l3060
  7053  0937                     u5230:	
  7054  0937                     l3062:	
  7055  0937  0823               	movf	__div_to_l_@quot+3,w
  7056  0938  00F3               	movwf	?__div_to_l_+3
  7057  0939  0822               	movf	__div_to_l_@quot+2,w
  7058  093A  00F2               	movwf	?__div_to_l_+2
  7059  093B  0821               	movf	__div_to_l_@quot+1,w
  7060  093C  00F1               	movwf	?__div_to_l_+1
  7061  093D  0820               	movf	__div_to_l_@quot,w
  7062  093E  00F0               	movwf	?__div_to_l_
  7063  093F                     l547:	
  7064  093F  0008               	return
  7065  0940                     __end_of__div_to_l_:	
  7066                           
  7067                           	psect	text13
  7068  1C58                     __ptext13:	
  7069 ;; *************** function ___wmul *****************
  7070 ;; Defined at:
  7071 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  multiplier      2    0[COMMON] unsigned int 
  7074 ;;  multiplicand    2    2[COMMON] unsigned int 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  product         2    4[COMMON] unsigned int 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  2    0[COMMON] unsigned int 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7086 ;;      Params:         4       0       0       0       0
  7087 ;;      Locals:         2       0       0       0       0
  7088 ;;      Temps:          0       0       0       0       0
  7089 ;;      Totals:         6       0       0       0       0
  7090 ;;Total ram usage:        6 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_sprintf
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           
  7100                           ;psect for function ___wmul
  7101  1C58                     ___wmul:	
  7102  1C58                     l3066:	
  7103                           ;incstack = 0
  7104                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7105                           
  7106  1C58  01F4               	clrf	___wmul@product
  7107  1C59  01F5               	clrf	___wmul@product+1
  7108  1C5A                     l3068:	
  7109  1C5A  1C70               	btfss	___wmul@multiplier,0
  7110  1C5B  2C5D               	goto	u5241
  7111  1C5C  2C5E               	goto	u5240
  7112  1C5D                     u5241:	
  7113  1C5D  2C64               	goto	l377
  7114  1C5E                     u5240:	
  7115  1C5E                     l3070:	
  7116  1C5E  0872               	movf	___wmul@multiplicand,w
  7117  1C5F  07F4               	addwf	___wmul@product,f
  7118  1C60  1803               	skipnc
  7119  1C61  0AF5               	incf	___wmul@product+1,f
  7120  1C62  0873               	movf	___wmul@multiplicand+1,w
  7121  1C63  07F5               	addwf	___wmul@product+1,f
  7122  1C64                     l377:	
  7123  1C64  3001               	movlw	1
  7124  1C65                     u5255:	
  7125  1C65  1003               	clrc
  7126  1C66  0DF2               	rlf	___wmul@multiplicand,f
  7127  1C67  0DF3               	rlf	___wmul@multiplicand+1,f
  7128  1C68  3EFF               	addlw	-1
  7129  1C69  1D03               	skipz
  7130  1C6A  2C65               	goto	u5255
  7131  1C6B                     l3072:	
  7132  1C6B  3001               	movlw	1
  7133  1C6C                     u5265:	
  7134  1C6C  1003               	clrc
  7135  1C6D  0CF1               	rrf	___wmul@multiplier+1,f
  7136  1C6E  0CF0               	rrf	___wmul@multiplier,f
  7137  1C6F  3EFF               	addlw	-1
  7138  1C70  1D03               	skipz
  7139  1C71  2C6C               	goto	u5265
  7140  1C72                     l3074:	
  7141  1C72  0870               	movf	___wmul@multiplier,w
  7142  1C73  0471               	iorwf	___wmul@multiplier+1,w
  7143  1C74  1D03               	btfss	3,2
  7144  1C75  2C77               	goto	u5271
  7145  1C76  2C78               	goto	u5270
  7146  1C77                     u5271:	
  7147  1C77  2C5A               	goto	l3068
  7148  1C78                     u5270:	
  7149  1C78                     l3076:	
  7150  1C78  0875               	movf	___wmul@product+1,w
  7151  1C79  00F1               	movwf	?___wmul+1
  7152  1C7A  0874               	movf	___wmul@product,w
  7153  1C7B  00F0               	movwf	?___wmul
  7154  1C7C                     l379:	
  7155  1C7C  0008               	return
  7156  1C7D                     __end_of___wmul:	
  7157                           
  7158                           	psect	text14
  7159  0004                     __ptext14:	
  7160 ;; *************** function ___llmod *****************
  7161 ;; Defined at:
  7162 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  divisor         4    0[COMMON] unsigned long 
  7165 ;;  dividend        4    4[COMMON] unsigned long 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;  counter         1    9[COMMON] unsigned char 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  4    0[COMMON] unsigned long 
  7170 ;; Registers used:
  7171 ;;		wreg, status,2, status,0
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7177 ;;      Params:         8       0       0       0       0
  7178 ;;      Locals:         1       0       0       0       0
  7179 ;;      Temps:          1       0       0       0       0
  7180 ;;      Totals:        10       0       0       0       0
  7181 ;;Total ram usage:       10 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_sprintf
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           
  7191                           ;psect for function ___llmod
  7192  0004                     ___llmod:	
  7193  0004                     l3156:	
  7194                           ;incstack = 0
  7195                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7196                           
  7197  0004  0873               	movf	___llmod@divisor+3,w
  7198  0005  0472               	iorwf	___llmod@divisor+2,w
  7199  0006  0471               	iorwf	___llmod@divisor+1,w
  7200  0007  0470               	iorwf	___llmod@divisor,w
  7201  0008  1903               	skipnz
  7202  0009  280B               	goto	u5491
  7203  000A  280C               	goto	u5490
  7204  000B                     u5491:	
  7205  000B  284F               	goto	l3172
  7206  000C                     u5490:	
  7207  000C                     l3158:	
  7208  000C  01F9               	clrf	___llmod@counter
  7209  000D  0AF9               	incf	___llmod@counter,f
  7210  000E  281C               	goto	l3162
  7211  000F                     l3160:	
  7212  000F  3001               	movlw	1
  7213  0010  00F8               	movwf	??___llmod
  7214  0011                     u5505:	
  7215  0011  1003               	clrc
  7216  0012  0DF0               	rlf	___llmod@divisor,f
  7217  0013  0DF1               	rlf	___llmod@divisor+1,f
  7218  0014  0DF2               	rlf	___llmod@divisor+2,f
  7219  0015  0DF3               	rlf	___llmod@divisor+3,f
  7220  0016  0BF8               	decfsz	??___llmod,f
  7221  0017  2811               	goto	u5505
  7222  0018  3001               	movlw	1
  7223  0019  00F8               	movwf	??___llmod
  7224  001A  0878               	movf	??___llmod,w
  7225  001B  07F9               	addwf	___llmod@counter,f
  7226  001C                     l3162:	
  7227  001C  1FF3               	btfss	___llmod@divisor+3,7
  7228  001D  281F               	goto	u5511
  7229  001E  2820               	goto	u5510
  7230  001F                     u5511:	
  7231  001F  280F               	goto	l3160
  7232  0020                     u5510:	
  7233  0020                     l3164:	
  7234  0020  0873               	movf	___llmod@divisor+3,w
  7235  0021  0277               	subwf	___llmod@dividend+3,w
  7236  0022  1D03               	skipz
  7237  0023  282E               	goto	u5525
  7238  0024  0872               	movf	___llmod@divisor+2,w
  7239  0025  0276               	subwf	___llmod@dividend+2,w
  7240  0026  1D03               	skipz
  7241  0027  282E               	goto	u5525
  7242  0028  0871               	movf	___llmod@divisor+1,w
  7243  0029  0275               	subwf	___llmod@dividend+1,w
  7244  002A  1D03               	skipz
  7245  002B  282E               	goto	u5525
  7246  002C  0870               	movf	___llmod@divisor,w
  7247  002D  0274               	subwf	___llmod@dividend,w
  7248  002E                     u5525:	
  7249  002E  1C03               	skipc
  7250  002F  2831               	goto	u5521
  7251  0030  2832               	goto	u5520
  7252  0031                     u5521:	
  7253  0031  2840               	goto	l3168
  7254  0032                     u5520:	
  7255  0032                     l3166:	
  7256  0032  0870               	movf	___llmod@divisor,w
  7257  0033  02F4               	subwf	___llmod@dividend,f
  7258  0034  0871               	movf	___llmod@divisor+1,w
  7259  0035  1C03               	skipc
  7260  0036  0F71               	incfsz	___llmod@divisor+1,w
  7261  0037  02F5               	subwf	___llmod@dividend+1,f
  7262  0038  0872               	movf	___llmod@divisor+2,w
  7263  0039  1C03               	skipc
  7264  003A  0F72               	incfsz	___llmod@divisor+2,w
  7265  003B  02F6               	subwf	___llmod@dividend+2,f
  7266  003C  0873               	movf	___llmod@divisor+3,w
  7267  003D  1C03               	skipc
  7268  003E  0F73               	incfsz	___llmod@divisor+3,w
  7269  003F  02F7               	subwf	___llmod@dividend+3,f
  7270  0040                     l3168:	
  7271  0040  3001               	movlw	1
  7272  0041                     u5535:	
  7273  0041  1003               	clrc
  7274  0042  0CF3               	rrf	___llmod@divisor+3,f
  7275  0043  0CF2               	rrf	___llmod@divisor+2,f
  7276  0044  0CF1               	rrf	___llmod@divisor+1,f
  7277  0045  0CF0               	rrf	___llmod@divisor,f
  7278  0046  3EFF               	addlw	-1
  7279  0047  1D03               	skipz
  7280  0048  2841               	goto	u5535
  7281  0049                     l3170:	
  7282  0049  3001               	movlw	1
  7283  004A  02F9               	subwf	___llmod@counter,f
  7284  004B  1D03               	btfss	3,2
  7285  004C  284E               	goto	u5541
  7286  004D  284F               	goto	u5540
  7287  004E                     u5541:	
  7288  004E  2820               	goto	l3164
  7289  004F                     u5540:	
  7290  004F                     l3172:	
  7291  004F  0877               	movf	___llmod@dividend+3,w
  7292  0050  00F3               	movwf	?___llmod+3
  7293  0051  0876               	movf	___llmod@dividend+2,w
  7294  0052  00F2               	movwf	?___llmod+2
  7295  0053  0875               	movf	___llmod@dividend+1,w
  7296  0054  00F1               	movwf	?___llmod+1
  7297  0055  0874               	movf	___llmod@dividend,w
  7298  0056  00F0               	movwf	?___llmod
  7299  0057                     l633:	
  7300  0057  0008               	return
  7301  0058                     __end_of___llmod:	
  7302                           
  7303                           	psect	text15
  7304  0806                     __ptext15:	
  7305 ;; *************** function ___fltol *****************
  7306 ;; Defined at:
  7307 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  f1              4   49[BANK0 ] unsigned long 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;  exp1            1   59[BANK0 ] unsigned char 
  7312 ;;  sign1           1   58[BANK0 ] unsigned char 
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  4   49[BANK0 ] long 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7322 ;;      Params:         0       4       0       0       0
  7323 ;;      Locals:         0       2       0       0       0
  7324 ;;      Temps:          0       5       0       0       0
  7325 ;;      Totals:         0      11       0       0       0
  7326 ;;Total ram usage:       11 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_sprintf
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           
  7336                           ;psect for function ___fltol
  7337  0806                     ___fltol:	
  7338  0806                     l3120:	
  7339                           ;incstack = 0
  7340                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7341                           
  7342  0806  1003               	clrc
  7343  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7344  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7345  0809  0D53               	rlf	___fltol@f1+2,w
  7346  080A  0D54               	rlf	___fltol@f1+3,w
  7347  080B  00D5               	movwf	??___fltol
  7348  080C  0855               	movf	??___fltol,w
  7349  080D  00DB               	movwf	___fltol@exp1
  7350  080E  085B               	movf	___fltol@exp1,w
  7351  080F  1D03               	btfss	3,2
  7352  0810  2812               	goto	u5391
  7353  0811  2813               	goto	u5390
  7354  0812                     u5391:	
  7355  0812  281C               	goto	l3126
  7356  0813                     u5390:	
  7357  0813                     l3122:	
  7358  0813  3000               	movlw	0
  7359  0814  00D4               	movwf	?___fltol+3
  7360  0815  3000               	movlw	0
  7361  0816  00D3               	movwf	?___fltol+2
  7362  0817  3000               	movlw	0
  7363  0818  00D2               	movwf	?___fltol+1
  7364  0819  3000               	movlw	0
  7365  081A  00D1               	movwf	?___fltol
  7366  081B  2881               	goto	l580
  7367  081C                     l3126:	
  7368  081C  0851               	movf	___fltol@f1,w
  7369  081D  00D5               	movwf	??___fltol
  7370  081E  0852               	movf	___fltol@f1+1,w
  7371  081F  00D6               	movwf	??___fltol+1
  7372  0820  0853               	movf	___fltol@f1+2,w
  7373  0821  00D7               	movwf	??___fltol+2
  7374  0822  0854               	movf	___fltol@f1+3,w
  7375  0823  00D8               	movwf	??___fltol+3
  7376  0824  301F               	movlw	31
  7377  0825                     u5405:	
  7378  0825  1003               	clrc
  7379  0826  0CD8               	rrf	??___fltol+3,f
  7380  0827  0CD7               	rrf	??___fltol+2,f
  7381  0828  0CD6               	rrf	??___fltol+1,f
  7382  0829  0CD5               	rrf	??___fltol,f
  7383  082A                     u5400:	
  7384  082A  3EFF               	addlw	-1
  7385  082B  1D03               	skipz
  7386  082C  2825               	goto	u5405
  7387  082D  0855               	movf	??___fltol,w
  7388  082E  00D9               	movwf	??___fltol+4
  7389  082F  0859               	movf	??___fltol+4,w
  7390  0830  00DA               	movwf	___fltol@sign1
  7391  0831                     l3128:	
  7392  0831  17D3               	bsf	___fltol@f1+2,7
  7393  0832                     l3130:	
  7394  0832  30FF               	movlw	255
  7395  0833  05D1               	andwf	___fltol@f1,f
  7396  0834  30FF               	movlw	255
  7397  0835  05D2               	andwf	___fltol@f1+1,f
  7398  0836  30FF               	movlw	255
  7399  0837  05D3               	andwf	___fltol@f1+2,f
  7400  0838  3000               	movlw	0
  7401  0839  05D4               	andwf	___fltol@f1+3,f
  7402  083A                     l3132:	
  7403  083A  3096               	movlw	150
  7404  083B  02DB               	subwf	___fltol@exp1,f
  7405  083C                     l3134:	
  7406  083C  1FDB               	btfss	___fltol@exp1,7
  7407  083D  283F               	goto	u5411
  7408  083E  2840               	goto	u5410
  7409  083F                     u5411:	
  7410  083F  285A               	goto	l3144
  7411  0840                     u5410:	
  7412  0840                     l3136:	
  7413  0840  085B               	movf	___fltol@exp1,w
  7414  0841  3A80               	xorlw	128
  7415  0842  3E97               	addlw	151
  7416  0843  1803               	skipnc
  7417  0844  2846               	goto	u5421
  7418  0845  2847               	goto	u5420
  7419  0846                     u5421:	
  7420  0846  2848               	goto	l3142
  7421  0847                     u5420:	
  7422  0847  2813               	goto	l3122
  7423  0848                     l3142:	
  7424  0848  3001               	movlw	1
  7425  0849                     u5435:	
  7426  0849  1003               	clrc
  7427  084A  0CD4               	rrf	___fltol@f1+3,f
  7428  084B  0CD3               	rrf	___fltol@f1+2,f
  7429  084C  0CD2               	rrf	___fltol@f1+1,f
  7430  084D  0CD1               	rrf	___fltol@f1,f
  7431  084E  3EFF               	addlw	-1
  7432  084F  1D03               	skipz
  7433  0850  2849               	goto	u5435
  7434  0851  3001               	movlw	1
  7435  0852  00D5               	movwf	??___fltol
  7436  0853  0855               	movf	??___fltol,w
  7437  0854  07DB               	addwf	___fltol@exp1,f
  7438  0855  1D03               	btfss	3,2
  7439  0856  2858               	goto	u5441
  7440  0857  2859               	goto	u5440
  7441  0858                     u5441:	
  7442  0858  2848               	goto	l3142
  7443  0859                     u5440:	
  7444  0859  2871               	goto	l3152
  7445  085A                     l3144:	
  7446  085A  3020               	movlw	32
  7447  085B  025B               	subwf	___fltol@exp1,w
  7448  085C  1C03               	skipc
  7449  085D  285F               	goto	u5451
  7450  085E  2860               	goto	u5450
  7451  085F                     u5451:	
  7452  085F  286C               	goto	l587
  7453  0860                     u5450:	
  7454  0860  2813               	goto	l3122
  7455  0861                     l3150:	
  7456  0861  3001               	movlw	1
  7457  0862  00D5               	movwf	??___fltol
  7458  0863                     u5465:	
  7459  0863  1003               	clrc
  7460  0864  0DD1               	rlf	___fltol@f1,f
  7461  0865  0DD2               	rlf	___fltol@f1+1,f
  7462  0866  0DD3               	rlf	___fltol@f1+2,f
  7463  0867  0DD4               	rlf	___fltol@f1+3,f
  7464  0868  0BD5               	decfsz	??___fltol,f
  7465  0869  2863               	goto	u5465
  7466  086A  3001               	movlw	1
  7467  086B  02DB               	subwf	___fltol@exp1,f
  7468  086C                     l587:	
  7469  086C  085B               	movf	___fltol@exp1,w
  7470  086D  1D03               	btfss	3,2
  7471  086E  2870               	goto	u5471
  7472  086F  2871               	goto	u5470
  7473  0870                     u5471:	
  7474  0870  2861               	goto	l3150
  7475  0871                     u5470:	
  7476  0871                     l3152:	
  7477  0871  085A               	movf	___fltol@sign1,w
  7478  0872  1903               	btfsc	3,2
  7479  0873  2875               	goto	u5481
  7480  0874  2876               	goto	u5480
  7481  0875                     u5481:	
  7482  0875  2881               	goto	l590
  7483  0876                     u5480:	
  7484  0876                     l3154:	
  7485  0876  09D1               	comf	___fltol@f1,f
  7486  0877  09D2               	comf	___fltol@f1+1,f
  7487  0878  09D3               	comf	___fltol@f1+2,f
  7488  0879  09D4               	comf	___fltol@f1+3,f
  7489  087A  0AD1               	incf	___fltol@f1,f
  7490  087B  1903               	skipnz
  7491  087C  0AD2               	incf	___fltol@f1+1,f
  7492  087D  1903               	skipnz
  7493  087E  0AD3               	incf	___fltol@f1+2,f
  7494  087F  1903               	skipnz
  7495  0880  0AD4               	incf	___fltol@f1+3,f
  7496  0881                     l590:	
  7497  0881                     l580:	
  7498  0881  0008               	return
  7499  0882                     __end_of___fltol:	
  7500                           
  7501                           	psect	text16
  7502  1C0F                     __ptext16:	
  7503 ;; *************** function ___flsub *****************
  7504 ;; Defined at:
  7505 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  a               4   70[BANK0 ] long 
  7508 ;;  b               4   74[BANK0 ] long 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;                  4   70[BANK0 ] long 
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7520 ;;      Params:         0       8       0       0       0
  7521 ;;      Locals:         0       0       0       0       0
  7522 ;;      Temps:          0       0       0       0       0
  7523 ;;      Totals:         0       8       0       0       0
  7524 ;;Total ram usage:        8 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; Hardware stack levels required when called:    1
  7527 ;; This function calls:
  7528 ;;		___fladd
  7529 ;; This function is called by:
  7530 ;;		_sprintf
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           
  7535                           ;psect for function ___flsub
  7536  1C0F                     ___flsub:	
  7537  1C0F                     l3176:	
  7538                           ;incstack = 0
  7539                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7540                           
  7541  1C0F  3080               	movlw	128
  7542  1C10  1283               	bcf	3,5	;RP0=0, select bank0
  7543  1C11  1303               	bcf	3,6	;RP1=0, select bank0
  7544  1C12  06E9               	xorwf	___flsub@a+3,f
  7545  1C13                     l3178:	
  7546  1C13  086D               	movf	___flsub@b+3,w
  7547  1C14  00D5               	movwf	___fladd@b+3
  7548  1C15  086C               	movf	___flsub@b+2,w
  7549  1C16  00D4               	movwf	___fladd@b+2
  7550  1C17  086B               	movf	___flsub@b+1,w
  7551  1C18  00D3               	movwf	___fladd@b+1
  7552  1C19  086A               	movf	___flsub@b,w
  7553  1C1A  00D2               	movwf	___fladd@b
  7554  1C1B  0869               	movf	___flsub@a+3,w
  7555  1C1C  00D9               	movwf	___fladd@a+3
  7556  1C1D  0868               	movf	___flsub@a+2,w
  7557  1C1E  00D8               	movwf	___fladd@a+2
  7558  1C1F  0867               	movf	___flsub@a+1,w
  7559  1C20  00D7               	movwf	___fladd@a+1
  7560  1C21  0866               	movf	___flsub@a,w
  7561  1C22  00D6               	movwf	___fladd@a
  7562  1C23  160A  118A  2578  160A  158A  	fcall	___fladd
  7563  1C28  1283               	bcf	3,5	;RP0=0, select bank0
  7564  1C29  1303               	bcf	3,6	;RP1=0, select bank0
  7565  1C2A  0855               	movf	?___fladd+3,w
  7566  1C2B  00E9               	movwf	?___flsub+3
  7567  1C2C  0854               	movf	?___fladd+2,w
  7568  1C2D  00E8               	movwf	?___flsub+2
  7569  1C2E  0853               	movf	?___fladd+1,w
  7570  1C2F  00E7               	movwf	?___flsub+1
  7571  1C30  0852               	movf	?___fladd,w
  7572  1C31  00E6               	movwf	?___flsub
  7573  1C32                     l750:	
  7574  1C32  0008               	return
  7575  1C33                     __end_of___flsub:	
  7576                           
  7577                           	psect	text17
  7578  1B42                     __ptext17:	
  7579 ;; *************** function ___flneg *****************
  7580 ;; Defined at:
  7581 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  f1              4    0[COMMON] long 
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;		None
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  4    0[COMMON] long 
  7588 ;; Registers used:
  7589 ;;		wreg
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7595 ;;      Params:         4       0       0       0       0
  7596 ;;      Locals:         0       0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0
  7598 ;;      Totals:         4       0       0       0       0
  7599 ;;Total ram usage:        4 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_sprintf
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           
  7609                           ;psect for function ___flneg
  7610  1B42                     ___flneg:	
  7611  1B42                     l3112:	
  7612                           ;incstack = 0
  7613                           ; Regs used in ___flneg: [wreg]
  7614                           
  7615  1B42  0873               	movf	___flneg@f1+3,w
  7616  1B43  0472               	iorwf	___flneg@f1+2,w
  7617  1B44  0471               	iorwf	___flneg@f1+1,w
  7618  1B45  0470               	iorwf	___flneg@f1,w
  7619  1B46  1903               	skipnz
  7620  1B47  2B49               	goto	u5381
  7621  1B48  2B4A               	goto	u5380
  7622  1B49                     u5381:	
  7623  1B49  2B4C               	goto	l3116
  7624  1B4A                     u5380:	
  7625  1B4A                     l3114:	
  7626  1B4A  3080               	movlw	128
  7627  1B4B  06F3               	xorwf	___flneg@f1+3,f
  7628  1B4C                     l3116:	
  7629  1B4C                     l576:	
  7630  1B4C  0008               	return
  7631  1B4D                     __end_of___flneg:	
  7632                           
  7633                           	psect	text18
  7634  1154                     __ptext18:	
  7635 ;; *************** function ___flge *****************
  7636 ;; Defined at:
  7637 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  ff1             4    0[COMMON] long 
  7640 ;;  ff2             4    4[COMMON] long 
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;		None
  7643 ;; Return value:  Size  Location     Type
  7644 ;;		None               void
  7645 ;; Registers used:
  7646 ;;		wreg, status,2, status,0
  7647 ;; Tracked objects:
  7648 ;;		On entry : 0/0
  7649 ;;		On exit  : 0/0
  7650 ;;		Unchanged: 0/0
  7651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7652 ;;      Params:         8       0       0       0       0
  7653 ;;      Locals:         0       0       0       0       0
  7654 ;;      Temps:          4       0       0       0       0
  7655 ;;      Totals:        12       0       0       0       0
  7656 ;;Total ram usage:       12 bytes
  7657 ;; Hardware stack levels used:    1
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_sprintf
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function ___flge
  7667  1154                     ___flge:	
  7668  1154                     l3092:	
  7669                           ;incstack = 0
  7670                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7671                           
  7672  1154  3000               	movlw	0
  7673  1155  0570               	andwf	___flge@ff1,w
  7674  1156  00F8               	movwf	??___flge
  7675  1157  3000               	movlw	0
  7676  1158  0571               	andwf	___flge@ff1+1,w
  7677  1159  00F9               	movwf	??___flge+1
  7678  115A  3080               	movlw	128
  7679  115B  0572               	andwf	___flge@ff1+2,w
  7680  115C  00FA               	movwf	??___flge+2
  7681  115D  307F               	movlw	127
  7682  115E  0573               	andwf	___flge@ff1+3,w
  7683  115F  00FB               	movwf	??___flge+3
  7684  1160  087B               	movf	??___flge+3,w
  7685  1161  047A               	iorwf	??___flge+2,w
  7686  1162  0479               	iorwf	??___flge+1,w
  7687  1163  0478               	iorwf	??___flge,w
  7688  1164  1D03               	skipz
  7689  1165  2967               	goto	u5311
  7690  1166  2968               	goto	u5310
  7691  1167                     u5311:	
  7692  1167  2970               	goto	l568
  7693  1168                     u5310:	
  7694  1168                     l3094:	
  7695  1168  3000               	movlw	0
  7696  1169  00F3               	movwf	___flge@ff1+3
  7697  116A  3000               	movlw	0
  7698  116B  00F2               	movwf	___flge@ff1+2
  7699  116C  3000               	movlw	0
  7700  116D  00F1               	movwf	___flge@ff1+1
  7701  116E  3000               	movlw	0
  7702  116F  00F0               	movwf	___flge@ff1
  7703  1170                     l568:	
  7704  1170  3000               	movlw	0
  7705  1171  0574               	andwf	___flge@ff2,w
  7706  1172  00F8               	movwf	??___flge
  7707  1173  3000               	movlw	0
  7708  1174  0575               	andwf	___flge@ff2+1,w
  7709  1175  00F9               	movwf	??___flge+1
  7710  1176  3080               	movlw	128
  7711  1177  0576               	andwf	___flge@ff2+2,w
  7712  1178  00FA               	movwf	??___flge+2
  7713  1179  307F               	movlw	127
  7714  117A  0577               	andwf	___flge@ff2+3,w
  7715  117B  00FB               	movwf	??___flge+3
  7716  117C  087B               	movf	??___flge+3,w
  7717  117D  047A               	iorwf	??___flge+2,w
  7718  117E  0479               	iorwf	??___flge+1,w
  7719  117F  0478               	iorwf	??___flge,w
  7720  1180  1D03               	skipz
  7721  1181  2983               	goto	u5321
  7722  1182  2984               	goto	u5320
  7723  1183                     u5321:	
  7724  1183  298C               	goto	l3098
  7725  1184                     u5320:	
  7726  1184                     l3096:	
  7727  1184  3000               	movlw	0
  7728  1185  00F7               	movwf	___flge@ff2+3
  7729  1186  3000               	movlw	0
  7730  1187  00F6               	movwf	___flge@ff2+2
  7731  1188  3000               	movlw	0
  7732  1189  00F5               	movwf	___flge@ff2+1
  7733  118A  3000               	movlw	0
  7734  118B  00F4               	movwf	___flge@ff2
  7735  118C                     l3098:	
  7736  118C  1FF3               	btfss	___flge@ff1+3,7
  7737  118D  298F               	goto	u5331
  7738  118E  2990               	goto	u5330
  7739  118F                     u5331:	
  7740  118F  29B4               	goto	l3102
  7741  1190                     u5330:	
  7742  1190                     l3100:	
  7743  1190  3000               	movlw	0
  7744  1191  00F8               	movwf	??___flge
  7745  1192  3000               	movlw	0
  7746  1193  00F9               	movwf	??___flge+1
  7747  1194  3000               	movlw	0
  7748  1195  00FA               	movwf	??___flge+2
  7749  1196  3080               	movlw	128
  7750  1197  00FB               	movwf	??___flge+3
  7751  1198  0870               	movf	___flge@ff1,w
  7752  1199  02F8               	subwf	??___flge,f
  7753  119A  0871               	movf	___flge@ff1+1,w
  7754  119B  1C03               	skipc
  7755  119C  0F71               	incfsz	___flge@ff1+1,w
  7756  119D  299F               	goto	u5341
  7757  119E  29A0               	goto	u5342
  7758  119F                     u5341:	
  7759  119F  02F9               	subwf	??___flge+1,f
  7760  11A0                     u5342:	
  7761  11A0  0872               	movf	___flge@ff1+2,w
  7762  11A1  1C03               	skipc
  7763  11A2  0F72               	incfsz	___flge@ff1+2,w
  7764  11A3  29A5               	goto	u5343
  7765  11A4  29A6               	goto	u5344
  7766  11A5                     u5343:	
  7767  11A5  02FA               	subwf	??___flge+2,f
  7768  11A6                     u5344:	
  7769  11A6  0873               	movf	___flge@ff1+3,w
  7770  11A7  1C03               	skipc
  7771  11A8  0F73               	incfsz	___flge@ff1+3,w
  7772  11A9  29AB               	goto	u5345
  7773  11AA  29AC               	goto	u5346
  7774  11AB                     u5345:	
  7775  11AB  02FB               	subwf	??___flge+3,f
  7776  11AC                     u5346:	
  7777  11AC  087B               	movf	??___flge+3,w
  7778  11AD  00F3               	movwf	___flge@ff1+3
  7779  11AE  087A               	movf	??___flge+2,w
  7780  11AF  00F2               	movwf	___flge@ff1+2
  7781  11B0  0879               	movf	??___flge+1,w
  7782  11B1  00F1               	movwf	___flge@ff1+1
  7783  11B2  0878               	movf	??___flge,w
  7784  11B3  00F0               	movwf	___flge@ff1
  7785  11B4                     l3102:	
  7786  11B4  1FF7               	btfss	___flge@ff2+3,7
  7787  11B5  29B7               	goto	u5351
  7788  11B6  29B8               	goto	u5350
  7789  11B7                     u5351:	
  7790  11B7  29DC               	goto	l571
  7791  11B8                     u5350:	
  7792  11B8                     l3104:	
  7793  11B8  3000               	movlw	0
  7794  11B9  00F8               	movwf	??___flge
  7795  11BA  3000               	movlw	0
  7796  11BB  00F9               	movwf	??___flge+1
  7797  11BC  3000               	movlw	0
  7798  11BD  00FA               	movwf	??___flge+2
  7799  11BE  3080               	movlw	128
  7800  11BF  00FB               	movwf	??___flge+3
  7801  11C0  0874               	movf	___flge@ff2,w
  7802  11C1  02F8               	subwf	??___flge,f
  7803  11C2  0875               	movf	___flge@ff2+1,w
  7804  11C3  1C03               	skipc
  7805  11C4  0F75               	incfsz	___flge@ff2+1,w
  7806  11C5  29C7               	goto	u5361
  7807  11C6  29C8               	goto	u5362
  7808  11C7                     u5361:	
  7809  11C7  02F9               	subwf	??___flge+1,f
  7810  11C8                     u5362:	
  7811  11C8  0876               	movf	___flge@ff2+2,w
  7812  11C9  1C03               	skipc
  7813  11CA  0F76               	incfsz	___flge@ff2+2,w
  7814  11CB  29CD               	goto	u5363
  7815  11CC  29CE               	goto	u5364
  7816  11CD                     u5363:	
  7817  11CD  02FA               	subwf	??___flge+2,f
  7818  11CE                     u5364:	
  7819  11CE  0877               	movf	___flge@ff2+3,w
  7820  11CF  1C03               	skipc
  7821  11D0  0F77               	incfsz	___flge@ff2+3,w
  7822  11D1  29D3               	goto	u5365
  7823  11D2  29D4               	goto	u5366
  7824  11D3                     u5365:	
  7825  11D3  02FB               	subwf	??___flge+3,f
  7826  11D4                     u5366:	
  7827  11D4  087B               	movf	??___flge+3,w
  7828  11D5  00F7               	movwf	___flge@ff2+3
  7829  11D6  087A               	movf	??___flge+2,w
  7830  11D7  00F6               	movwf	___flge@ff2+2
  7831  11D8  0879               	movf	??___flge+1,w
  7832  11D9  00F5               	movwf	___flge@ff2+1
  7833  11DA  0878               	movf	??___flge,w
  7834  11DB  00F4               	movwf	___flge@ff2
  7835  11DC                     l571:	
  7836  11DC  3080               	movlw	128
  7837  11DD  06F3               	xorwf	___flge@ff1+3,f
  7838  11DE  3080               	movlw	128
  7839  11DF  06F7               	xorwf	___flge@ff2+3,f
  7840  11E0  0877               	movf	___flge@ff2+3,w
  7841  11E1  0273               	subwf	___flge@ff1+3,w
  7842  11E2  1D03               	skipz
  7843  11E3  29EE               	goto	u5375
  7844  11E4  0876               	movf	___flge@ff2+2,w
  7845  11E5  0272               	subwf	___flge@ff1+2,w
  7846  11E6  1D03               	skipz
  7847  11E7  29EE               	goto	u5375
  7848  11E8  0875               	movf	___flge@ff2+1,w
  7849  11E9  0271               	subwf	___flge@ff1+1,w
  7850  11EA  1D03               	skipz
  7851  11EB  29EE               	goto	u5375
  7852  11EC  0874               	movf	___flge@ff2,w
  7853  11ED  0270               	subwf	___flge@ff1,w
  7854  11EE                     u5375:	
  7855  11EE  1803               	skipnc
  7856  11EF  29F1               	goto	u5371
  7857  11F0  29F2               	goto	u5370
  7858  11F1                     u5371:	
  7859  11F1  29F4               	goto	l3108
  7860  11F2                     u5370:	
  7861  11F2                     l3106:	
  7862  11F2  1003               	clrc
  7863  11F3  29F5               	goto	l572
  7864  11F4                     l3108:	
  7865  11F4  1403               	setc
  7866  11F5                     l572:	
  7867  11F5  0008               	return
  7868  11F6                     __end_of___flge:	
  7869                           
  7870                           	psect	text19
  7871  1D4A                     __ptext19:	
  7872 ;; *************** function ___fleq *****************
  7873 ;; Defined at:
  7874 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  ff1             4    0[COMMON] long 
  7877 ;;  ff2             4    4[COMMON] long 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;		None
  7880 ;; Return value:  Size  Location     Type
  7881 ;;		None               void
  7882 ;; Registers used:
  7883 ;;		wreg, status,2, status,0
  7884 ;; Tracked objects:
  7885 ;;		On entry : 0/0
  7886 ;;		On exit  : 0/0
  7887 ;;		Unchanged: 0/0
  7888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7889 ;;      Params:         8       0       0       0       0
  7890 ;;      Locals:         0       0       0       0       0
  7891 ;;      Temps:          4       0       0       0       0
  7892 ;;      Totals:        12       0       0       0       0
  7893 ;;Total ram usage:       12 bytes
  7894 ;; Hardware stack levels used:    1
  7895 ;; This function calls:
  7896 ;;		Nothing
  7897 ;; This function is called by:
  7898 ;;		_sprintf
  7899 ;; This function uses a non-reentrant model
  7900 ;;
  7901                           
  7902                           
  7903                           ;psect for function ___fleq
  7904  1D4A                     ___fleq:	
  7905  1D4A                     l3080:	
  7906                           ;incstack = 0
  7907                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7908                           
  7909  1D4A  3000               	movlw	0
  7910  1D4B  0570               	andwf	___fleq@ff1,w
  7911  1D4C  00F8               	movwf	??___fleq
  7912  1D4D  3000               	movlw	0
  7913  1D4E  0571               	andwf	___fleq@ff1+1,w
  7914  1D4F  00F9               	movwf	??___fleq+1
  7915  1D50  3080               	movlw	128
  7916  1D51  0572               	andwf	___fleq@ff1+2,w
  7917  1D52  00FA               	movwf	??___fleq+2
  7918  1D53  307F               	movlw	127
  7919  1D54  0573               	andwf	___fleq@ff1+3,w
  7920  1D55  00FB               	movwf	??___fleq+3
  7921  1D56  087B               	movf	??___fleq+3,w
  7922  1D57  047A               	iorwf	??___fleq+2,w
  7923  1D58  0479               	iorwf	??___fleq+1,w
  7924  1D59  0478               	iorwf	??___fleq,w
  7925  1D5A  1D03               	skipz
  7926  1D5B  2D5D               	goto	u5281
  7927  1D5C  2D5E               	goto	u5280
  7928  1D5D                     u5281:	
  7929  1D5D  2D66               	goto	l563
  7930  1D5E                     u5280:	
  7931  1D5E                     l3082:	
  7932  1D5E  3000               	movlw	0
  7933  1D5F  00F3               	movwf	___fleq@ff1+3
  7934  1D60  3000               	movlw	0
  7935  1D61  00F2               	movwf	___fleq@ff1+2
  7936  1D62  3000               	movlw	0
  7937  1D63  00F1               	movwf	___fleq@ff1+1
  7938  1D64  3000               	movlw	0
  7939  1D65  00F0               	movwf	___fleq@ff1
  7940  1D66                     l563:	
  7941  1D66  3000               	movlw	0
  7942  1D67  0574               	andwf	___fleq@ff2,w
  7943  1D68  00F8               	movwf	??___fleq
  7944  1D69  3000               	movlw	0
  7945  1D6A  0575               	andwf	___fleq@ff2+1,w
  7946  1D6B  00F9               	movwf	??___fleq+1
  7947  1D6C  3080               	movlw	128
  7948  1D6D  0576               	andwf	___fleq@ff2+2,w
  7949  1D6E  00FA               	movwf	??___fleq+2
  7950  1D6F  307F               	movlw	127
  7951  1D70  0577               	andwf	___fleq@ff2+3,w
  7952  1D71  00FB               	movwf	??___fleq+3
  7953  1D72  087B               	movf	??___fleq+3,w
  7954  1D73  047A               	iorwf	??___fleq+2,w
  7955  1D74  0479               	iorwf	??___fleq+1,w
  7956  1D75  0478               	iorwf	??___fleq,w
  7957  1D76  1D03               	skipz
  7958  1D77  2D79               	goto	u5291
  7959  1D78  2D7A               	goto	u5290
  7960  1D79                     u5291:	
  7961  1D79  2D82               	goto	l564
  7962  1D7A                     u5290:	
  7963  1D7A                     l3084:	
  7964  1D7A  3000               	movlw	0
  7965  1D7B  00F7               	movwf	___fleq@ff2+3
  7966  1D7C  3000               	movlw	0
  7967  1D7D  00F6               	movwf	___fleq@ff2+2
  7968  1D7E  3000               	movlw	0
  7969  1D7F  00F5               	movwf	___fleq@ff2+1
  7970  1D80  3000               	movlw	0
  7971  1D81  00F4               	movwf	___fleq@ff2
  7972  1D82                     l564:	
  7973  1D82  0877               	movf	___fleq@ff2+3,w
  7974  1D83  0673               	xorwf	___fleq@ff1+3,w
  7975  1D84  1D03               	skipz
  7976  1D85  2D90               	goto	u5305
  7977  1D86  0876               	movf	___fleq@ff2+2,w
  7978  1D87  0672               	xorwf	___fleq@ff1+2,w
  7979  1D88  1D03               	skipz
  7980  1D89  2D90               	goto	u5305
  7981  1D8A  0875               	movf	___fleq@ff2+1,w
  7982  1D8B  0671               	xorwf	___fleq@ff1+1,w
  7983  1D8C  1D03               	skipz
  7984  1D8D  2D90               	goto	u5305
  7985  1D8E  0874               	movf	___fleq@ff2,w
  7986  1D8F  0670               	xorwf	___fleq@ff1,w
  7987  1D90                     u5305:	
  7988  1D90  1903               	skipnz
  7989  1D91  2D93               	goto	u5301
  7990  1D92  2D94               	goto	u5300
  7991  1D93                     u5301:	
  7992  1D93  2D96               	goto	l3088
  7993  1D94                     u5300:	
  7994  1D94                     l3086:	
  7995  1D94  1003               	clrc
  7996  1D95  2D97               	goto	l565
  7997  1D96                     l3088:	
  7998  1D96  1403               	setc
  7999  1D97                     l565:	
  8000  1D97  0008               	return
  8001  1D98                     __end_of___fleq:	
  8002                           
  8003                           	psect	text20
  8004  1EB4                     __ptext20:	
  8005 ;; *************** function _LM75_read *****************
  8006 ;; Defined at:
  8007 ;;		line 16 in file "./LM75.h"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;  regAddress      1    wreg     unsigned char 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  regAddress      1   11[BANK1 ] unsigned char 
  8012 ;;  LSB             2    9[BANK1 ] int 
  8013 ;;  MSB             2    7[BANK1 ] int 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  4   76[BANK0 ] float 
  8016 ;; Registers used:
  8017 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8023 ;;      Params:         0       4       0       0       0
  8024 ;;      Locals:         0       0       5       0       0
  8025 ;;      Temps:          0       0       2       0       0
  8026 ;;      Totals:         0       4       7       0       0
  8027 ;;Total ram usage:       11 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    2
  8030 ;; This function calls:
  8031 ;;		_I2C_read
  8032 ;;		_I2C_restart
  8033 ;;		_I2C_start
  8034 ;;		_I2C_stop
  8035 ;;		_I2C_write
  8036 ;;		_toFloat
  8037 ;; This function is called by:
  8038 ;;		_main
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           
  8043                           ;psect for function _LM75_read
  8044  1EB4                     _LM75_read:	
  8045                           
  8046                           ;incstack = 0
  8047                           ; Regs used in _LM75_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8048                           ;LM75_read@regAddress stored from wreg
  8049  1EB4  1683               	bsf	3,5	;RP0=1, select bank1
  8050  1EB5  1303               	bcf	3,6	;RP1=0, select bank1
  8051  1EB6  00AB               	movwf	LM75_read@regAddress^(0+128)
  8052  1EB7                     l3184:	
  8053                           
  8054                           ;./LM75.h: 16: float LM75_read(char regAddress);./LM75.h: 17: {;./LM75.h: 18:   signed i
      +                          nt MSB,LSB;;./LM75.h: 20:   I2C_start();
  8055  1EB7  160A  158A  2303  160A  158A  	fcall	_I2C_start
  8056  1EBC                     l3186:	
  8057                           
  8058                           ;./LM75.h: 22:   I2C_write(0x90 + 0);
  8059  1EBC  3090               	movlw	144
  8060  1EBD  160A  158A  2337  160A  158A  	fcall	_I2C_write
  8061  1EC2                     l3188:	
  8062                           
  8063                           ;./LM75.h: 23:   I2C_write(regAddress);
  8064  1EC2  1683               	bsf	3,5	;RP0=1, select bank1
  8065  1EC3  1303               	bcf	3,6	;RP1=0, select bank1
  8066  1EC4  082B               	movf	LM75_read@regAddress^(0+128),w
  8067  1EC5  160A  158A  2337  160A  158A  	fcall	_I2C_write
  8068                           
  8069                           ;./LM75.h: 24:   I2C_restart();
  8070  1ECA  160A  158A  2317  160A  158A  	fcall	_I2C_restart
  8071  1ECF                     l3190:	
  8072                           
  8073                           ;./LM75.h: 25:   I2C_write(0x90 + 1);
  8074  1ECF  3091               	movlw	145
  8075  1ED0  160A  158A  2337  160A  158A  	fcall	_I2C_write
  8076  1ED5                     l3192:	
  8077                           
  8078                           ;./LM75.h: 26:   MSB = I2C_read(0);
  8079  1ED5  3000               	movlw	0
  8080  1ED6  160A  158A  2395  160A  158A  	fcall	_I2C_read
  8081  1EDB  1683               	bsf	3,5	;RP0=1, select bank1
  8082  1EDC  1303               	bcf	3,6	;RP1=0, select bank1
  8083  1EDD  00A5               	movwf	??_LM75_read^(0+128)
  8084  1EDE  01A6               	clrf	(??_LM75_read^(0+128)+1)
  8085  1EDF  0825               	movf	??_LM75_read^(0+128),w
  8086  1EE0  00A7               	movwf	LM75_read@MSB^(0+128)
  8087  1EE1  0826               	movf	(??_LM75_read+1)^(0+128),w
  8088  1EE2  00A8               	movwf	(LM75_read@MSB+1)^(0+128)
  8089  1EE3                     l3194:	
  8090                           
  8091                           ;./LM75.h: 27:   LSB = I2C_read(1);
  8092  1EE3  3001               	movlw	1
  8093  1EE4  160A  158A  2395  160A  158A  	fcall	_I2C_read
  8094  1EE9  1683               	bsf	3,5	;RP0=1, select bank1
  8095  1EEA  1303               	bcf	3,6	;RP1=0, select bank1
  8096  1EEB  00A5               	movwf	??_LM75_read^(0+128)
  8097  1EEC  01A6               	clrf	(??_LM75_read^(0+128)+1)
  8098  1EED  0825               	movf	??_LM75_read^(0+128),w
  8099  1EEE  00A9               	movwf	LM75_read@LSB^(0+128)
  8100  1EEF  0826               	movf	(??_LM75_read+1)^(0+128),w
  8101  1EF0  00AA               	movwf	(LM75_read@LSB+1)^(0+128)
  8102  1EF1                     l3196:	
  8103                           
  8104                           ;./LM75.h: 29:   I2C_stop();
  8105  1EF1  160A  158A  230D  160A  158A  	fcall	_I2C_stop
  8106  1EF6                     l3198:	
  8107                           
  8108                           ;./LM75.h: 31:   return toFloat((MSB << 8) + LSB);
  8109  1EF6  1683               	bsf	3,5	;RP0=1, select bank1
  8110  1EF7  1303               	bcf	3,6	;RP1=0, select bank1
  8111  1EF8  0828               	movf	(LM75_read@MSB+1)^(0+128),w
  8112  1EF9  00A6               	movwf	(??_LM75_read^(0+128)+1)
  8113  1EFA  0827               	movf	LM75_read@MSB^(0+128),w
  8114  1EFB  00A5               	movwf	??_LM75_read^(0+128)
  8115  1EFC  0825               	movf	??_LM75_read^(0+128),w
  8116  1EFD  00A6               	movwf	(??_LM75_read^(0+128)+1)
  8117  1EFE  01A5               	clrf	??_LM75_read^(0+128)
  8118  1EFF  0829               	movf	LM75_read@LSB^(0+128),w
  8119  1F00  0725               	addwf	??_LM75_read^(0+128),w
  8120  1F01  1283               	bcf	3,5	;RP0=0, select bank0
  8121  1F02  1303               	bcf	3,6	;RP1=0, select bank0
  8122  1F03  00E6               	movwf	toFloat@tempr
  8123  1F04  1683               	bsf	3,5	;RP0=1, select bank1
  8124  1F05  1303               	bcf	3,6	;RP1=0, select bank1
  8125  1F06  082A               	movf	(LM75_read@LSB+1)^(0+128),w
  8126  1F07  1803               	skipnc
  8127  1F08  0A2A               	incf	(LM75_read@LSB+1)^(0+128),w
  8128  1F09  0726               	addwf	(??_LM75_read+1)^(0+128),w
  8129  1F0A  1283               	bcf	3,5	;RP0=0, select bank0
  8130  1F0B  1303               	bcf	3,6	;RP1=0, select bank0
  8131  1F0C  00E7               	movwf	toFloat@tempr+1
  8132  1F0D  160A  118A  20CA  160A  158A  	fcall	_toFloat
  8133  1F12  1283               	bcf	3,5	;RP0=0, select bank0
  8134  1F13  1303               	bcf	3,6	;RP1=0, select bank0
  8135  1F14  0869               	movf	?_toFloat+3,w
  8136  1F15  00EF               	movwf	?_LM75_read+3
  8137  1F16  0868               	movf	?_toFloat+2,w
  8138  1F17  00EE               	movwf	?_LM75_read+2
  8139  1F18  0867               	movf	?_toFloat+1,w
  8140  1F19  00ED               	movwf	?_LM75_read+1
  8141  1F1A  0866               	movf	?_toFloat,w
  8142  1F1B  00EC               	movwf	?_LM75_read
  8143  1F1C                     l124:	
  8144  1F1C  0008               	return
  8145  1F1D                     __end_of_LM75_read:	
  8146                           
  8147                           	psect	text21
  8148  10CA                     __ptext21:	
  8149 ;; *************** function _toFloat *****************
  8150 ;; Defined at:
  8151 ;;		line 72 in file "./LM75.h"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;  tempr           2   70[BANK0 ] int 
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  result          4    1[BANK1 ] float 
  8156 ;;  isfraction      1    0[BANK1 ] unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  4   70[BANK0 ] float 
  8159 ;; Registers used:
  8160 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8166 ;;      Params:         0       4       0       0       0
  8167 ;;      Locals:         0       0       5       0       0
  8168 ;;      Temps:          0       2       0       0       0
  8169 ;;      Totals:         0       6       5       0       0
  8170 ;;Total ram usage:       11 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; Hardware stack levels required when called:    1
  8173 ;; This function calls:
  8174 ;;		___fladd
  8175 ;;		___xxtofl
  8176 ;; This function is called by:
  8177 ;;		_LM75_read
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           
  8182                           ;psect for function _toFloat
  8183  10CA                     _toFloat:	
  8184  10CA                     l2870:	
  8185                           ;incstack = 0
  8186                           ; Regs used in _toFloat: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8187                           
  8188                           
  8189                           ;./LM75.h: 72: float toFloat(signed int tempr);./LM75.h: 73: {;./LM75.h: 74:   float res
      +                          ult = (float)(tempr>>8);
  8190  10CA  1283               	bcf	3,5	;RP0=0, select bank0
  8191  10CB  1303               	bcf	3,6	;RP1=0, select bank0
  8192  10CC  0867               	movf	toFloat@tempr+1,w
  8193  10CD  00EB               	movwf	??_toFloat+1
  8194  10CE  0866               	movf	toFloat@tempr,w
  8195  10CF  00EA               	movwf	??_toFloat
  8196  10D0  3008               	movlw	8
  8197  10D1  00FF               	movwf	btemp+1
  8198  10D2                     u4695:	
  8199  10D2  0D6B               	rlf	??_toFloat+1,w
  8200  10D3  0CEB               	rrf	??_toFloat+1,f
  8201  10D4  0CEA               	rrf	??_toFloat,f
  8202  10D5  0BFF               	decfsz	btemp+1,f
  8203  10D6  28D2               	goto	u4695
  8204  10D7  086A               	movf	??_toFloat,w
  8205  10D8  00F0               	movwf	___xxtofl@val
  8206  10D9  086B               	movf	??_toFloat+1,w
  8207  10DA  00F1               	movwf	___xxtofl@val+1
  8208  10DB  3000               	movlw	0
  8209  10DC  1BF1               	btfsc	___xxtofl@val+1,7
  8210  10DD  30FF               	movlw	255
  8211  10DE  00F2               	movwf	___xxtofl@val+2
  8212  10DF  00F3               	movwf	___xxtofl@val+3
  8213  10E0  3001               	movlw	1
  8214  10E1  160A  118A  21F6  160A  118A  	fcall	___xxtofl
  8215  10E6  0873               	movf	?___xxtofl+3,w
  8216  10E7  1683               	bsf	3,5	;RP0=1, select bank1
  8217  10E8  1303               	bcf	3,6	;RP1=0, select bank1
  8218  10E9  00A4               	movwf	(toFloat@result+3)^(0+128)
  8219  10EA  0872               	movf	?___xxtofl+2,w
  8220  10EB  00A3               	movwf	(toFloat@result+2)^(0+128)
  8221  10EC  0871               	movf	?___xxtofl+1,w
  8222  10ED  00A2               	movwf	(toFloat@result+1)^(0+128)
  8223  10EE  0870               	movf	?___xxtofl,w
  8224  10EF  00A1               	movwf	toFloat@result^(0+128)
  8225  10F0                     l2872:	
  8226                           
  8227                           ;./LM75.h: 75:   char isfraction = tempr & 0x0080;
  8228  10F0  1283               	bcf	3,5	;RP0=0, select bank0
  8229  10F1  1303               	bcf	3,6	;RP1=0, select bank0
  8230  10F2  0866               	movf	toFloat@tempr,w
  8231  10F3  3980               	andlw	128
  8232  10F4  00EA               	movwf	??_toFloat
  8233  10F5  086A               	movf	??_toFloat,w
  8234  10F6  1683               	bsf	3,5	;RP0=1, select bank1
  8235  10F7  1303               	bcf	3,6	;RP1=0, select bank1
  8236  10F8  00A0               	movwf	toFloat@isfraction^(0+128)
  8237  10F9                     l2874:	
  8238                           
  8239                           ;./LM75.h: 77:   if(isfraction)
  8240  10F9  0820               	movf	toFloat@isfraction^(0+128),w
  8241  10FA  1903               	btfsc	3,2
  8242  10FB  28FD               	goto	u4701
  8243  10FC  28FE               	goto	u4700
  8244  10FD                     u4701:	
  8245  10FD  293D               	goto	l2878
  8246  10FE                     u4700:	
  8247  10FE                     l2876:	
  8248                           
  8249                           ;./LM75.h: 78:   {;./LM75.h: 79:     result = result + 0.5;
  8250  10FE  303F               	movlw	63
  8251  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  8252  1100  1303               	bcf	3,6	;RP1=0, select bank0
  8253  1101  00D5               	movwf	___fladd@b+3
  8254  1102  3000               	movlw	0
  8255  1103  00D4               	movwf	___fladd@b+2
  8256  1104  3000               	movlw	0
  8257  1105  00D3               	movwf	___fladd@b+1
  8258  1106  3000               	movlw	0
  8259  1107  00D2               	movwf	___fladd@b
  8260  1108  1683               	bsf	3,5	;RP0=1, select bank1
  8261  1109  1303               	bcf	3,6	;RP1=0, select bank1
  8262  110A  0824               	movf	(toFloat@result+3)^(0+128),w
  8263  110B  1283               	bcf	3,5	;RP0=0, select bank0
  8264  110C  1303               	bcf	3,6	;RP1=0, select bank0
  8265  110D  00D9               	movwf	___fladd@a+3
  8266  110E  1683               	bsf	3,5	;RP0=1, select bank1
  8267  110F  1303               	bcf	3,6	;RP1=0, select bank1
  8268  1110  0823               	movf	(toFloat@result+2)^(0+128),w
  8269  1111  1283               	bcf	3,5	;RP0=0, select bank0
  8270  1112  1303               	bcf	3,6	;RP1=0, select bank0
  8271  1113  00D8               	movwf	___fladd@a+2
  8272  1114  1683               	bsf	3,5	;RP0=1, select bank1
  8273  1115  1303               	bcf	3,6	;RP1=0, select bank1
  8274  1116  0822               	movf	(toFloat@result+1)^(0+128),w
  8275  1117  1283               	bcf	3,5	;RP0=0, select bank0
  8276  1118  1303               	bcf	3,6	;RP1=0, select bank0
  8277  1119  00D7               	movwf	___fladd@a+1
  8278  111A  1683               	bsf	3,5	;RP0=1, select bank1
  8279  111B  1303               	bcf	3,6	;RP1=0, select bank1
  8280  111C  0821               	movf	toFloat@result^(0+128),w
  8281  111D  1283               	bcf	3,5	;RP0=0, select bank0
  8282  111E  1303               	bcf	3,6	;RP1=0, select bank0
  8283  111F  00D6               	movwf	___fladd@a
  8284  1120  160A  118A  2578  160A  118A  	fcall	___fladd
  8285  1125  1283               	bcf	3,5	;RP0=0, select bank0
  8286  1126  1303               	bcf	3,6	;RP1=0, select bank0
  8287  1127  0855               	movf	?___fladd+3,w
  8288  1128  1683               	bsf	3,5	;RP0=1, select bank1
  8289  1129  1303               	bcf	3,6	;RP1=0, select bank1
  8290  112A  00A4               	movwf	(toFloat@result+3)^(0+128)
  8291  112B  1283               	bcf	3,5	;RP0=0, select bank0
  8292  112C  1303               	bcf	3,6	;RP1=0, select bank0
  8293  112D  0854               	movf	?___fladd+2,w
  8294  112E  1683               	bsf	3,5	;RP0=1, select bank1
  8295  112F  1303               	bcf	3,6	;RP1=0, select bank1
  8296  1130  00A3               	movwf	(toFloat@result+2)^(0+128)
  8297  1131  1283               	bcf	3,5	;RP0=0, select bank0
  8298  1132  1303               	bcf	3,6	;RP1=0, select bank0
  8299  1133  0853               	movf	?___fladd+1,w
  8300  1134  1683               	bsf	3,5	;RP0=1, select bank1
  8301  1135  1303               	bcf	3,6	;RP1=0, select bank1
  8302  1136  00A2               	movwf	(toFloat@result+1)^(0+128)
  8303  1137  1283               	bcf	3,5	;RP0=0, select bank0
  8304  1138  1303               	bcf	3,6	;RP1=0, select bank0
  8305  1139  0852               	movf	?___fladd,w
  8306  113A  1683               	bsf	3,5	;RP0=1, select bank1
  8307  113B  1303               	bcf	3,6	;RP1=0, select bank1
  8308  113C  00A1               	movwf	toFloat@result^(0+128)
  8309  113D                     l2878:	
  8310                           
  8311                           ;./LM75.h: 82:   return (result);
  8312  113D  0824               	movf	(toFloat@result+3)^(0+128),w
  8313  113E  1283               	bcf	3,5	;RP0=0, select bank0
  8314  113F  1303               	bcf	3,6	;RP1=0, select bank0
  8315  1140  00E9               	movwf	?_toFloat+3
  8316  1141  1683               	bsf	3,5	;RP0=1, select bank1
  8317  1142  1303               	bcf	3,6	;RP1=0, select bank1
  8318  1143  0823               	movf	(toFloat@result+2)^(0+128),w
  8319  1144  1283               	bcf	3,5	;RP0=0, select bank0
  8320  1145  1303               	bcf	3,6	;RP1=0, select bank0
  8321  1146  00E8               	movwf	?_toFloat+2
  8322  1147  1683               	bsf	3,5	;RP0=1, select bank1
  8323  1148  1303               	bcf	3,6	;RP1=0, select bank1
  8324  1149  0822               	movf	(toFloat@result+1)^(0+128),w
  8325  114A  1283               	bcf	3,5	;RP0=0, select bank0
  8326  114B  1303               	bcf	3,6	;RP1=0, select bank0
  8327  114C  00E7               	movwf	?_toFloat+1
  8328  114D  1683               	bsf	3,5	;RP0=1, select bank1
  8329  114E  1303               	bcf	3,6	;RP1=0, select bank1
  8330  114F  0821               	movf	toFloat@result^(0+128),w
  8331  1150  1283               	bcf	3,5	;RP0=0, select bank0
  8332  1151  1303               	bcf	3,6	;RP1=0, select bank0
  8333  1152  00E6               	movwf	?_toFloat
  8334  1153                     l137:	
  8335  1153  0008               	return
  8336  1154                     __end_of_toFloat:	
  8337                           
  8338                           	psect	text22
  8339  11F6                     __ptext22:	
  8340 ;; *************** function ___xxtofl *****************
  8341 ;; Defined at:
  8342 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  sign            1    wreg     unsigned char 
  8345 ;;  val             4    0[COMMON] long 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;  sign            1    8[COMMON] unsigned char 
  8348 ;;  arg             4   10[COMMON] unsigned long 
  8349 ;;  exp             1    9[COMMON] unsigned char 
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  4    0[COMMON] unsigned char 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8359 ;;      Params:         4       0       0       0       0
  8360 ;;      Locals:         6       0       0       0       0
  8361 ;;      Temps:          4       0       0       0       0
  8362 ;;      Totals:        14       0       0       0       0
  8363 ;;Total ram usage:       14 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_toFloat
  8369 ;;		_sprintf
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           
  8374                           ;psect for function ___xxtofl
  8375  11F6                     ___xxtofl:	
  8376                           
  8377                           ;incstack = 0
  8378                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8379                           ;___xxtofl@sign stored from wreg
  8380  11F6  00F8               	movwf	___xxtofl@sign
  8381  11F7                     l2798:	
  8382  11F7  0878               	movf	___xxtofl@sign,w
  8383  11F8  1903               	btfsc	3,2
  8384  11F9  29FB               	goto	u4531
  8385  11FA  29FC               	goto	u4530
  8386  11FB                     u4531:	
  8387  11FB  2A10               	goto	l2804
  8388  11FC                     u4530:	
  8389  11FC                     l2800:	
  8390  11FC  1FF3               	btfss	___xxtofl@val+3,7
  8391  11FD  29FF               	goto	u4541
  8392  11FE  2A00               	goto	u4540
  8393  11FF                     u4541:	
  8394  11FF  2A10               	goto	l2804
  8395  1200                     u4540:	
  8396  1200                     l2802:	
  8397  1200  0970               	comf	___xxtofl@val,w
  8398  1201  00FA               	movwf	___xxtofl@arg
  8399  1202  0971               	comf	___xxtofl@val+1,w
  8400  1203  00FB               	movwf	___xxtofl@arg+1
  8401  1204  0972               	comf	___xxtofl@val+2,w
  8402  1205  00FC               	movwf	___xxtofl@arg+2
  8403  1206  0973               	comf	___xxtofl@val+3,w
  8404  1207  00FD               	movwf	___xxtofl@arg+3
  8405  1208  0AFA               	incf	___xxtofl@arg,f
  8406  1209  1903               	skipnz
  8407  120A  0AFB               	incf	___xxtofl@arg+1,f
  8408  120B  1903               	skipnz
  8409  120C  0AFC               	incf	___xxtofl@arg+2,f
  8410  120D  1903               	skipnz
  8411  120E  0AFD               	incf	___xxtofl@arg+3,f
  8412  120F  2A18               	goto	l838
  8413  1210                     l2804:	
  8414  1210  0873               	movf	___xxtofl@val+3,w
  8415  1211  00FD               	movwf	___xxtofl@arg+3
  8416  1212  0872               	movf	___xxtofl@val+2,w
  8417  1213  00FC               	movwf	___xxtofl@arg+2
  8418  1214  0871               	movf	___xxtofl@val+1,w
  8419  1215  00FB               	movwf	___xxtofl@arg+1
  8420  1216  0870               	movf	___xxtofl@val,w
  8421  1217  00FA               	movwf	___xxtofl@arg
  8422  1218                     l838:	
  8423  1218  0873               	movf	___xxtofl@val+3,w
  8424  1219  0472               	iorwf	___xxtofl@val+2,w
  8425  121A  0471               	iorwf	___xxtofl@val+1,w
  8426  121B  0470               	iorwf	___xxtofl@val,w
  8427  121C  1D03               	skipz
  8428  121D  2A1F               	goto	u4551
  8429  121E  2A20               	goto	u4550
  8430  121F                     u4551:	
  8431  121F  2A29               	goto	l2810
  8432  1220                     u4550:	
  8433  1220                     l2806:	
  8434  1220  3000               	movlw	0
  8435  1221  00F3               	movwf	?___xxtofl+3
  8436  1222  3000               	movlw	0
  8437  1223  00F2               	movwf	?___xxtofl+2
  8438  1224  3000               	movlw	0
  8439  1225  00F1               	movwf	?___xxtofl+1
  8440  1226  3000               	movlw	0
  8441  1227  00F0               	movwf	?___xxtofl
  8442  1228  2AAF               	goto	l840
  8443  1229                     l2810:	
  8444  1229  3096               	movlw	150
  8445  122A  00F4               	movwf	??___xxtofl
  8446  122B  0874               	movf	??___xxtofl,w
  8447  122C  00F9               	movwf	___xxtofl@exp
  8448  122D  2A3B               	goto	l2814
  8449  122E                     l2812:	
  8450  122E  3001               	movlw	1
  8451  122F  00F4               	movwf	??___xxtofl
  8452  1230  0874               	movf	??___xxtofl,w
  8453  1231  07F9               	addwf	___xxtofl@exp,f
  8454  1232  3001               	movlw	1
  8455  1233                     u4565:	
  8456  1233  1003               	clrc
  8457  1234  0CFD               	rrf	___xxtofl@arg+3,f
  8458  1235  0CFC               	rrf	___xxtofl@arg+2,f
  8459  1236  0CFB               	rrf	___xxtofl@arg+1,f
  8460  1237  0CFA               	rrf	___xxtofl@arg,f
  8461  1238  3EFF               	addlw	-1
  8462  1239  1D03               	skipz
  8463  123A  2A33               	goto	u4565
  8464  123B                     l2814:	
  8465  123B  30FE               	movlw	254
  8466  123C  057D               	andwf	___xxtofl@arg+3,w
  8467  123D  1D03               	btfss	3,2
  8468  123E  2A40               	goto	u4571
  8469  123F  2A41               	goto	u4570
  8470  1240                     u4571:	
  8471  1240  2A2E               	goto	l2812
  8472  1241                     u4570:	
  8473  1241  2A5D               	goto	l844
  8474  1242                     l2816:	
  8475  1242  3001               	movlw	1
  8476  1243  00F4               	movwf	??___xxtofl
  8477  1244  0874               	movf	??___xxtofl,w
  8478  1245  07F9               	addwf	___xxtofl@exp,f
  8479  1246                     l2818:	
  8480  1246  3001               	movlw	1
  8481  1247  07FA               	addwf	___xxtofl@arg,f
  8482  1248  3000               	movlw	0
  8483  1249  1803               	skipnc
  8484  124A  3001               	movlw	1
  8485  124B  07FB               	addwf	___xxtofl@arg+1,f
  8486  124C  3000               	movlw	0
  8487  124D  1803               	skipnc
  8488  124E  3001               	movlw	1
  8489  124F  07FC               	addwf	___xxtofl@arg+2,f
  8490  1250  3000               	movlw	0
  8491  1251  1803               	skipnc
  8492  1252  3001               	movlw	1
  8493  1253  07FD               	addwf	___xxtofl@arg+3,f
  8494  1254                     l2820:	
  8495  1254  3001               	movlw	1
  8496  1255                     u4585:	
  8497  1255  1003               	clrc
  8498  1256  0CFD               	rrf	___xxtofl@arg+3,f
  8499  1257  0CFC               	rrf	___xxtofl@arg+2,f
  8500  1258  0CFB               	rrf	___xxtofl@arg+1,f
  8501  1259  0CFA               	rrf	___xxtofl@arg,f
  8502  125A  3EFF               	addlw	-1
  8503  125B  1D03               	skipz
  8504  125C  2A55               	goto	u4585
  8505  125D                     l844:	
  8506  125D  30FF               	movlw	255
  8507  125E  057D               	andwf	___xxtofl@arg+3,w
  8508  125F  1D03               	btfss	3,2
  8509  1260  2A62               	goto	u4591
  8510  1261  2A63               	goto	u4590
  8511  1262                     u4591:	
  8512  1262  2A42               	goto	l2816
  8513  1263                     u4590:	
  8514  1263  2A6F               	goto	l2824
  8515  1264                     l2822:	
  8516  1264  3001               	movlw	1
  8517  1265  02F9               	subwf	___xxtofl@exp,f
  8518  1266  3001               	movlw	1
  8519  1267  00F4               	movwf	??___xxtofl
  8520  1268                     u4605:	
  8521  1268  1003               	clrc
  8522  1269  0DFA               	rlf	___xxtofl@arg,f
  8523  126A  0DFB               	rlf	___xxtofl@arg+1,f
  8524  126B  0DFC               	rlf	___xxtofl@arg+2,f
  8525  126C  0DFD               	rlf	___xxtofl@arg+3,f
  8526  126D  0BF4               	decfsz	??___xxtofl,f
  8527  126E  2A68               	goto	u4605
  8528  126F                     l2824:	
  8529  126F  1BFC               	btfsc	___xxtofl@arg+2,7
  8530  1270  2A72               	goto	u4611
  8531  1271  2A73               	goto	u4610
  8532  1272                     u4611:	
  8533  1272  2A79               	goto	l851
  8534  1273                     u4610:	
  8535  1273                     l2826:	
  8536  1273  3002               	movlw	2
  8537  1274  0279               	subwf	___xxtofl@exp,w
  8538  1275  1803               	skipnc
  8539  1276  2A78               	goto	u4621
  8540  1277  2A79               	goto	u4620
  8541  1278                     u4621:	
  8542  1278  2A64               	goto	l2822
  8543  1279                     u4620:	
  8544  1279                     l851:	
  8545  1279  1879               	btfsc	___xxtofl@exp,0
  8546  127A  2A7C               	goto	u4631
  8547  127B  2A7D               	goto	u4630
  8548  127C                     u4631:	
  8549  127C  2A85               	goto	l852
  8550  127D                     u4630:	
  8551  127D                     l2828:	
  8552  127D  30FF               	movlw	255
  8553  127E  05FA               	andwf	___xxtofl@arg,f
  8554  127F  30FF               	movlw	255
  8555  1280  05FB               	andwf	___xxtofl@arg+1,f
  8556  1281  307F               	movlw	127
  8557  1282  05FC               	andwf	___xxtofl@arg+2,f
  8558  1283  30FF               	movlw	255
  8559  1284  05FD               	andwf	___xxtofl@arg+3,f
  8560  1285                     l852:	
  8561  1285  1003               	clrc
  8562  1286  0CF9               	rrf	___xxtofl@exp,f
  8563  1287                     l2830:	
  8564  1287  0879               	movf	___xxtofl@exp,w
  8565  1288  00F4               	movwf	??___xxtofl
  8566  1289  01F5               	clrf	??___xxtofl+1
  8567  128A  01F6               	clrf	??___xxtofl+2
  8568  128B  01F7               	clrf	??___xxtofl+3
  8569  128C  3018               	movlw	24
  8570  128D                     u4645:	
  8571  128D  1003               	clrc
  8572  128E  0DF4               	rlf	??___xxtofl,f
  8573  128F  0DF5               	rlf	??___xxtofl+1,f
  8574  1290  0DF6               	rlf	??___xxtofl+2,f
  8575  1291  0DF7               	rlf	??___xxtofl+3,f
  8576  1292                     u4640:	
  8577  1292  3EFF               	addlw	-1
  8578  1293  1D03               	skipz
  8579  1294  2A8D               	goto	u4645
  8580  1295  0874               	movf	??___xxtofl,w
  8581  1296  04FA               	iorwf	___xxtofl@arg,f
  8582  1297  0875               	movf	??___xxtofl+1,w
  8583  1298  04FB               	iorwf	___xxtofl@arg+1,f
  8584  1299  0876               	movf	??___xxtofl+2,w
  8585  129A  04FC               	iorwf	___xxtofl@arg+2,f
  8586  129B  0877               	movf	??___xxtofl+3,w
  8587  129C  04FD               	iorwf	___xxtofl@arg+3,f
  8588  129D                     l2832:	
  8589  129D  0878               	movf	___xxtofl@sign,w
  8590  129E  1903               	btfsc	3,2
  8591  129F  2AA1               	goto	u4651
  8592  12A0  2AA2               	goto	u4650
  8593  12A1                     u4651:	
  8594  12A1  2AA7               	goto	l2838
  8595  12A2                     u4650:	
  8596  12A2                     l2834:	
  8597  12A2  1FF3               	btfss	___xxtofl@val+3,7
  8598  12A3  2AA5               	goto	u4661
  8599  12A4  2AA6               	goto	u4660
  8600  12A5                     u4661:	
  8601  12A5  2AA7               	goto	l2838
  8602  12A6                     u4660:	
  8603  12A6                     l2836:	
  8604  12A6  17FD               	bsf	___xxtofl@arg+3,7
  8605  12A7                     l2838:	
  8606  12A7  087D               	movf	___xxtofl@arg+3,w
  8607  12A8  00F3               	movwf	?___xxtofl+3
  8608  12A9  087C               	movf	___xxtofl@arg+2,w
  8609  12AA  00F2               	movwf	?___xxtofl+2
  8610  12AB  087B               	movf	___xxtofl@arg+1,w
  8611  12AC  00F1               	movwf	?___xxtofl+1
  8612  12AD  087A               	movf	___xxtofl@arg,w
  8613  12AE  00F0               	movwf	?___xxtofl
  8614  12AF                     l840:	
  8615  12AF  0008               	return
  8616  12B0                     __end_of___xxtofl:	
  8617                           
  8618                           	psect	text23
  8619  1578                     __ptext23:	
  8620 ;; *************** function ___fladd *****************
  8621 ;; Defined at:
  8622 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  b               4   50[BANK0 ] unsigned char 
  8625 ;;  a               4   54[BANK0 ] unsigned char 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  grs             1   69[BANK0 ] unsigned char 
  8628 ;;  bexp            1   68[BANK0 ] unsigned char 
  8629 ;;  aexp            1   67[BANK0 ] unsigned char 
  8630 ;;  signs           1   66[BANK0 ] unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  4   50[BANK0 ] unsigned char 
  8633 ;; Registers used:
  8634 ;;		wreg, status,2, status,0, btemp+1
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8640 ;;      Params:         0       8       0       0       0
  8641 ;;      Locals:         0       4       0       0       0
  8642 ;;      Temps:          0       8       0       0       0
  8643 ;;      Totals:         0      20       0       0       0
  8644 ;;Total ram usage:       20 bytes
  8645 ;; Hardware stack levels used:    1
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_toFloat
  8650 ;;		_sprintf
  8651 ;;		___flsub
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           
  8656                           ;psect for function ___fladd
  8657  1578                     ___fladd:	
  8658  1578                     l2464:	
  8659                           ;incstack = 0
  8660                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8661                           
  8662  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8663  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8664  157A  0855               	movf	___fladd@b+3,w
  8665  157B  3980               	andlw	128
  8666  157C  00DA               	movwf	??___fladd
  8667  157D  085A               	movf	??___fladd,w
  8668  157E  00E2               	movwf	___fladd@signs
  8669  157F                     l2466:	
  8670  157F  0855               	movf	___fladd@b+3,w
  8671  1580  00DA               	movwf	??___fladd
  8672  1581  075A               	addwf	??___fladd,w
  8673  1582  00DB               	movwf	??___fladd+1
  8674  1583  085B               	movf	??___fladd+1,w
  8675  1584  00E4               	movwf	___fladd@bexp
  8676  1585                     l2468:	
  8677  1585  1FD4               	btfss	___fladd@b+2,7
  8678  1586  2D88               	goto	u3701
  8679  1587  2D89               	goto	u3700
  8680  1588                     u3701:	
  8681  1588  2D8A               	goto	l2472
  8682  1589                     u3700:	
  8683  1589                     l2470:	
  8684  1589  1464               	bsf	___fladd@bexp,0
  8685  158A                     l2472:	
  8686  158A  0864               	movf	___fladd@bexp,w
  8687  158B  1903               	btfsc	3,2
  8688  158C  2D8E               	goto	u3711
  8689  158D  2D8F               	goto	u3710
  8690  158E                     u3711:	
  8691  158E  2D9F               	goto	l2482
  8692  158F                     u3710:	
  8693  158F                     l2474:	
  8694  158F  0A64               	incf	___fladd@bexp,w
  8695  1590  1D03               	btfss	3,2
  8696  1591  2D93               	goto	u3721
  8697  1592  2D94               	goto	u3720
  8698  1593                     u3721:	
  8699  1593  2D9C               	goto	l2478
  8700  1594                     u3720:	
  8701  1594                     l2476:	
  8702  1594  3000               	movlw	0
  8703  1595  00D5               	movwf	___fladd@b+3
  8704  1596  3000               	movlw	0
  8705  1597  00D4               	movwf	___fladd@b+2
  8706  1598  3000               	movlw	0
  8707  1599  00D3               	movwf	___fladd@b+1
  8708  159A  3000               	movlw	0
  8709  159B  00D2               	movwf	___fladd@b
  8710  159C                     l2478:	
  8711  159C  17D4               	bsf	___fladd@b+2,7
  8712  159D                     l2480:	
  8713  159D  01D5               	clrf	___fladd@b+3
  8714  159E  2DA7               	goto	l2484
  8715  159F                     l2482:	
  8716  159F  3000               	movlw	0
  8717  15A0  00D5               	movwf	___fladd@b+3
  8718  15A1  3000               	movlw	0
  8719  15A2  00D4               	movwf	___fladd@b+2
  8720  15A3  3000               	movlw	0
  8721  15A4  00D3               	movwf	___fladd@b+1
  8722  15A5  3000               	movlw	0
  8723  15A6  00D2               	movwf	___fladd@b
  8724  15A7                     l2484:	
  8725  15A7  0859               	movf	___fladd@a+3,w
  8726  15A8  3980               	andlw	128
  8727  15A9  00DA               	movwf	??___fladd
  8728  15AA  085A               	movf	??___fladd,w
  8729  15AB  00E3               	movwf	___fladd@aexp
  8730  15AC                     l2486:	
  8731  15AC  0863               	movf	___fladd@aexp,w
  8732  15AD  0662               	xorwf	___fladd@signs,w
  8733  15AE  1903               	skipnz
  8734  15AF  2DB1               	goto	u3731
  8735  15B0  2DB2               	goto	u3730
  8736  15B1                     u3731:	
  8737  15B1  2DB3               	goto	l2490
  8738  15B2                     u3730:	
  8739  15B2                     l2488:	
  8740  15B2  1762               	bsf	___fladd@signs,6
  8741  15B3                     l2490:	
  8742  15B3  0859               	movf	___fladd@a+3,w
  8743  15B4  00DA               	movwf	??___fladd
  8744  15B5  075A               	addwf	??___fladd,w
  8745  15B6  00DB               	movwf	??___fladd+1
  8746  15B7  085B               	movf	??___fladd+1,w
  8747  15B8  00E3               	movwf	___fladd@aexp
  8748  15B9                     l2492:	
  8749  15B9  1FD8               	btfss	___fladd@a+2,7
  8750  15BA  2DBC               	goto	u3741
  8751  15BB  2DBD               	goto	u3740
  8752  15BC                     u3741:	
  8753  15BC  2DBE               	goto	l2496
  8754  15BD                     u3740:	
  8755  15BD                     l2494:	
  8756  15BD  1463               	bsf	___fladd@aexp,0
  8757  15BE                     l2496:	
  8758  15BE  0863               	movf	___fladd@aexp,w
  8759  15BF  1903               	btfsc	3,2
  8760  15C0  2DC2               	goto	u3751
  8761  15C1  2DC3               	goto	u3750
  8762  15C2                     u3751:	
  8763  15C2  2DD3               	goto	l2506
  8764  15C3                     u3750:	
  8765  15C3                     l2498:	
  8766  15C3  0A63               	incf	___fladd@aexp,w
  8767  15C4  1D03               	btfss	3,2
  8768  15C5  2DC7               	goto	u3761
  8769  15C6  2DC8               	goto	u3760
  8770  15C7                     u3761:	
  8771  15C7  2DD0               	goto	l2502
  8772  15C8                     u3760:	
  8773  15C8                     l2500:	
  8774  15C8  3000               	movlw	0
  8775  15C9  00D9               	movwf	___fladd@a+3
  8776  15CA  3000               	movlw	0
  8777  15CB  00D8               	movwf	___fladd@a+2
  8778  15CC  3000               	movlw	0
  8779  15CD  00D7               	movwf	___fladd@a+1
  8780  15CE  3000               	movlw	0
  8781  15CF  00D6               	movwf	___fladd@a
  8782  15D0                     l2502:	
  8783  15D0  17D8               	bsf	___fladd@a+2,7
  8784  15D1                     l2504:	
  8785  15D1  01D9               	clrf	___fladd@a+3
  8786  15D2  2DDB               	goto	l704
  8787  15D3                     l2506:	
  8788  15D3  3000               	movlw	0
  8789  15D4  00D9               	movwf	___fladd@a+3
  8790  15D5  3000               	movlw	0
  8791  15D6  00D8               	movwf	___fladd@a+2
  8792  15D7  3000               	movlw	0
  8793  15D8  00D7               	movwf	___fladd@a+1
  8794  15D9  3000               	movlw	0
  8795  15DA  00D6               	movwf	___fladd@a
  8796  15DB                     l704:	
  8797  15DB  0864               	movf	___fladd@bexp,w
  8798  15DC  0263               	subwf	___fladd@aexp,w
  8799  15DD  1803               	skipnc
  8800  15DE  2DE0               	goto	u3771
  8801  15DF  2DE1               	goto	u3770
  8802  15E0                     u3771:	
  8803  15E0  2E25               	goto	l2542
  8804  15E1                     u3770:	
  8805  15E1                     l2508:	
  8806  15E1  1F62               	btfss	___fladd@signs,6
  8807  15E2  2DE4               	goto	u3781
  8808  15E3  2DE5               	goto	u3780
  8809  15E4                     u3781:	
  8810  15E4  2DE9               	goto	l2512
  8811  15E5                     u3780:	
  8812  15E5                     l2510:	
  8813  15E5  3080               	movlw	128
  8814  15E6  00DA               	movwf	??___fladd
  8815  15E7  085A               	movf	??___fladd,w
  8816  15E8  06E2               	xorwf	___fladd@signs,f
  8817  15E9                     l2512:	
  8818  15E9  0864               	movf	___fladd@bexp,w
  8819  15EA  00DA               	movwf	??___fladd
  8820  15EB  085A               	movf	??___fladd,w
  8821  15EC  00E5               	movwf	___fladd@grs
  8822  15ED                     l2514:	
  8823  15ED  0863               	movf	___fladd@aexp,w
  8824  15EE  00DA               	movwf	??___fladd
  8825  15EF  085A               	movf	??___fladd,w
  8826  15F0  00E4               	movwf	___fladd@bexp
  8827  15F1                     l2516:	
  8828  15F1  0865               	movf	___fladd@grs,w
  8829  15F2  00DA               	movwf	??___fladd
  8830  15F3  085A               	movf	??___fladd,w
  8831  15F4  00E3               	movwf	___fladd@aexp
  8832  15F5                     l2518:	
  8833  15F5  0852               	movf	___fladd@b,w
  8834  15F6  00DA               	movwf	??___fladd
  8835  15F7  085A               	movf	??___fladd,w
  8836  15F8  00E5               	movwf	___fladd@grs
  8837  15F9                     l2520:	
  8838  15F9  0856               	movf	___fladd@a,w
  8839  15FA  00DA               	movwf	??___fladd
  8840  15FB  085A               	movf	??___fladd,w
  8841  15FC  00D2               	movwf	___fladd@b
  8842  15FD                     l2522:	
  8843  15FD  0865               	movf	___fladd@grs,w
  8844  15FE  00DA               	movwf	??___fladd
  8845  15FF  085A               	movf	??___fladd,w
  8846  1600  00D6               	movwf	___fladd@a
  8847  1601                     l2524:	
  8848  1601  0853               	movf	___fladd@b+1,w
  8849  1602  00DA               	movwf	??___fladd
  8850  1603  085A               	movf	??___fladd,w
  8851  1604  00E5               	movwf	___fladd@grs
  8852  1605                     l2526:	
  8853  1605  0857               	movf	___fladd@a+1,w
  8854  1606  00DA               	movwf	??___fladd
  8855  1607  085A               	movf	??___fladd,w
  8856  1608  00D3               	movwf	___fladd@b+1
  8857  1609                     l2528:	
  8858  1609  0865               	movf	___fladd@grs,w
  8859  160A  00DA               	movwf	??___fladd
  8860  160B  085A               	movf	??___fladd,w
  8861  160C  00D7               	movwf	___fladd@a+1
  8862  160D                     l2530:	
  8863  160D  0854               	movf	___fladd@b+2,w
  8864  160E  00DA               	movwf	??___fladd
  8865  160F  085A               	movf	??___fladd,w
  8866  1610  00E5               	movwf	___fladd@grs
  8867  1611                     l2532:	
  8868  1611  0858               	movf	___fladd@a+2,w
  8869  1612  00DA               	movwf	??___fladd
  8870  1613  085A               	movf	??___fladd,w
  8871  1614  00D4               	movwf	___fladd@b+2
  8872  1615                     l2534:	
  8873  1615  0865               	movf	___fladd@grs,w
  8874  1616  00DA               	movwf	??___fladd
  8875  1617  085A               	movf	??___fladd,w
  8876  1618  00D8               	movwf	___fladd@a+2
  8877  1619                     l2536:	
  8878  1619  0855               	movf	___fladd@b+3,w
  8879  161A  00DA               	movwf	??___fladd
  8880  161B  085A               	movf	??___fladd,w
  8881  161C  00E5               	movwf	___fladd@grs
  8882  161D                     l2538:	
  8883  161D  0859               	movf	___fladd@a+3,w
  8884  161E  00DA               	movwf	??___fladd
  8885  161F  085A               	movf	??___fladd,w
  8886  1620  00D5               	movwf	___fladd@b+3
  8887  1621                     l2540:	
  8888  1621  0865               	movf	___fladd@grs,w
  8889  1622  00DA               	movwf	??___fladd
  8890  1623  085A               	movf	??___fladd,w
  8891  1624  00D9               	movwf	___fladd@a+3
  8892  1625                     l2542:	
  8893  1625  01E5               	clrf	___fladd@grs
  8894  1626                     l2544:	
  8895  1626  0863               	movf	___fladd@aexp,w
  8896  1627  00DA               	movwf	??___fladd
  8897  1628  01DB               	clrf	??___fladd+1
  8898  1629  085B               	movf	??___fladd+1,w
  8899  162A  00DD               	movwf	??___fladd+3
  8900  162B  0864               	movf	___fladd@bexp,w
  8901  162C  025A               	subwf	??___fladd,w
  8902  162D  00DC               	movwf	??___fladd+2
  8903  162E  1C03               	skipc
  8904  162F  03DD               	decf	??___fladd+3,f
  8905  1630  085D               	movf	??___fladd+3,w
  8906  1631  3A80               	xorlw	128
  8907  1632  00FF               	movwf	btemp+1
  8908  1633  3080               	movlw	128
  8909  1634  027F               	subwf	btemp+1,w
  8910  1635  1D03               	skipz
  8911  1636  2E39               	goto	u3795
  8912  1637  301A               	movlw	26
  8913  1638  025C               	subwf	??___fladd+2,w
  8914  1639                     u3795:	
  8915  1639  1C03               	skipc
  8916  163A  2E3C               	goto	u3791
  8917  163B  2E3D               	goto	u3790
  8918  163C                     u3791:	
  8919  163C  2E7A               	goto	l2560
  8920  163D                     u3790:	
  8921  163D                     l2546:	
  8922  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8923  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8924  163F  0855               	movf	___fladd@b+3,w
  8925  1640  0454               	iorwf	___fladd@b+2,w
  8926  1641  0453               	iorwf	___fladd@b+1,w
  8927  1642  0452               	iorwf	___fladd@b,w
  8928  1643  1D03               	skipz
  8929  1644  2E46               	goto	u3801
  8930  1645  2E48               	goto	u3800
  8931  1646                     u3801:	
  8932  1646  3001               	movlw	1
  8933  1647  2E49               	goto	u3810
  8934  1648                     u3800:	
  8935  1648  3000               	movlw	0
  8936  1649                     u3810:	
  8937  1649  00DA               	movwf	??___fladd
  8938  164A  085A               	movf	??___fladd,w
  8939  164B  00E5               	movwf	___fladd@grs
  8940  164C  3000               	movlw	0
  8941  164D  00D5               	movwf	___fladd@b+3
  8942  164E  3000               	movlw	0
  8943  164F  00D4               	movwf	___fladd@b+2
  8944  1650  3000               	movlw	0
  8945  1651  00D3               	movwf	___fladd@b+1
  8946  1652  3000               	movlw	0
  8947  1653  00D2               	movwf	___fladd@b
  8948  1654  0863               	movf	___fladd@aexp,w
  8949  1655  00DA               	movwf	??___fladd
  8950  1656  085A               	movf	??___fladd,w
  8951  1657  00E4               	movwf	___fladd@bexp
  8952  1658  2E82               	goto	l708
  8953  1659                     l710:	
  8954  1659  1C65               	btfss	___fladd@grs,0
  8955  165A  2E5C               	goto	u3821
  8956  165B  2E5D               	goto	u3820
  8957  165C                     u3821:	
  8958  165C  2E66               	goto	l2550
  8959  165D                     u3820:	
  8960  165D                     l2548:	
  8961  165D  0865               	movf	___fladd@grs,w
  8962  165E  00DA               	movwf	??___fladd
  8963  165F  1003               	clrc
  8964  1660  0C5A               	rrf	??___fladd,w
  8965  1661  3801               	iorlw	1
  8966  1662  00DB               	movwf	??___fladd+1
  8967  1663  085B               	movf	??___fladd+1,w
  8968  1664  00E5               	movwf	___fladd@grs
  8969  1665  2E68               	goto	l2552
  8970  1666                     l2550:	
  8971  1666  1003               	clrc
  8972  1667  0CE5               	rrf	___fladd@grs,f
  8973  1668                     l2552:	
  8974  1668  1C52               	btfss	___fladd@b,0
  8975  1669  2E6B               	goto	u3831
  8976  166A  2E6C               	goto	u3830
  8977  166B                     u3831:	
  8978  166B  2E6D               	goto	l2556
  8979  166C                     u3830:	
  8980  166C                     l2554:	
  8981  166C  17E5               	bsf	___fladd@grs,7
  8982  166D                     l2556:	
  8983  166D  3001               	movlw	1
  8984  166E  00DA               	movwf	??___fladd
  8985  166F                     u3845:	
  8986  166F  0D55               	rlf	___fladd@b+3,w
  8987  1670  0CD5               	rrf	___fladd@b+3,f
  8988  1671  0CD4               	rrf	___fladd@b+2,f
  8989  1672  0CD3               	rrf	___fladd@b+1,f
  8990  1673  0CD2               	rrf	___fladd@b,f
  8991  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8992  1675  2E6F               	goto	u3845
  8993  1676                     l2558:	
  8994  1676  3001               	movlw	1
  8995  1677  00DA               	movwf	??___fladd
  8996  1678  085A               	movf	??___fladd,w
  8997  1679  07E4               	addwf	___fladd@bexp,f
  8998  167A                     l2560:	
  8999  167A  1283               	bcf	3,5	;RP0=0, select bank0
  9000  167B  1303               	bcf	3,6	;RP1=0, select bank0
  9001  167C  0863               	movf	___fladd@aexp,w
  9002  167D  0264               	subwf	___fladd@bexp,w
  9003  167E  1C03               	skipc
  9004  167F  2E81               	goto	u3851
  9005  1680  2E82               	goto	u3850
  9006  1681                     u3851:	
  9007  1681  2E59               	goto	l710
  9008  1682                     u3850:	
  9009  1682                     l708:	
  9010  1682  1B62               	btfsc	___fladd@signs,6
  9011  1683  2E85               	goto	u3861
  9012  1684  2E86               	goto	u3860
  9013  1685                     u3861:	
  9014  1685  2ED1               	goto	l2586
  9015  1686                     u3860:	
  9016  1686                     l2562:	
  9017  1686  0864               	movf	___fladd@bexp,w
  9018  1687  1D03               	btfss	3,2
  9019  1688  2E8A               	goto	u3871
  9020  1689  2E8B               	goto	u3870
  9021  168A                     u3871:	
  9022  168A  2E94               	goto	l2568
  9023  168B                     u3870:	
  9024  168B                     l2564:	
  9025  168B  3000               	movlw	0
  9026  168C  00D5               	movwf	?___fladd+3
  9027  168D  3000               	movlw	0
  9028  168E  00D4               	movwf	?___fladd+2
  9029  168F  3000               	movlw	0
  9030  1690  00D3               	movwf	?___fladd+1
  9031  1691  3000               	movlw	0
  9032  1692  00D2               	movwf	?___fladd
  9033  1693  2FFF               	goto	l717
  9034  1694                     l2568:	
  9035  1694  0856               	movf	___fladd@a,w
  9036  1695  07D2               	addwf	___fladd@b,f
  9037  1696  0857               	movf	___fladd@a+1,w
  9038  1697  1103               	clrz
  9039  1698  1803               	skipnc
  9040  1699  3E01               	addlw	1
  9041  169A  1903               	skipnz
  9042  169B  2E9D               	goto	u3881
  9043  169C  07D3               	addwf	___fladd@b+1,f
  9044  169D                     u3881:	
  9045  169D  0858               	movf	___fladd@a+2,w
  9046  169E  1103               	clrz
  9047  169F  1803               	skipnc
  9048  16A0  3E01               	addlw	1
  9049  16A1  1903               	skipnz
  9050  16A2  2EA4               	goto	u3882
  9051  16A3  07D4               	addwf	___fladd@b+2,f
  9052  16A4                     u3882:	
  9053  16A4  0859               	movf	___fladd@a+3,w
  9054  16A5  1103               	clrz
  9055  16A6  1803               	skipnc
  9056  16A7  3E01               	addlw	1
  9057  16A8  1903               	skipnz
  9058  16A9  2EAB               	goto	u3883
  9059  16AA  07D5               	addwf	___fladd@b+3,f
  9060  16AB                     u3883:	
  9061  16AB                     l2570:	
  9062  16AB  1C55               	btfss	___fladd@b+3,0
  9063  16AC  2EAE               	goto	u3891
  9064  16AD  2EAF               	goto	u3890
  9065  16AE                     u3891:	
  9066  16AE  2F85               	goto	l2620
  9067  16AF                     u3890:	
  9068  16AF                     l2572:	
  9069  16AF  1C65               	btfss	___fladd@grs,0
  9070  16B0  2EB2               	goto	u3901
  9071  16B1  2EB3               	goto	u3900
  9072  16B2                     u3901:	
  9073  16B2  2EBC               	goto	l2576
  9074  16B3                     u3900:	
  9075  16B3                     l2574:	
  9076  16B3  0865               	movf	___fladd@grs,w
  9077  16B4  00DA               	movwf	??___fladd
  9078  16B5  1003               	clrc
  9079  16B6  0C5A               	rrf	??___fladd,w
  9080  16B7  3801               	iorlw	1
  9081  16B8  00DB               	movwf	??___fladd+1
  9082  16B9  085B               	movf	??___fladd+1,w
  9083  16BA  00E5               	movwf	___fladd@grs
  9084  16BB  2EBE               	goto	l2578
  9085  16BC                     l2576:	
  9086  16BC  1003               	clrc
  9087  16BD  0CE5               	rrf	___fladd@grs,f
  9088  16BE                     l2578:	
  9089  16BE  1C52               	btfss	___fladd@b,0
  9090  16BF  2EC1               	goto	u3911
  9091  16C0  2EC2               	goto	u3910
  9092  16C1                     u3911:	
  9093  16C1  2EC3               	goto	l2582
  9094  16C2                     u3910:	
  9095  16C2                     l2580:	
  9096  16C2  17E5               	bsf	___fladd@grs,7
  9097  16C3                     l2582:	
  9098  16C3  3001               	movlw	1
  9099  16C4  00DA               	movwf	??___fladd
  9100  16C5                     u3925:	
  9101  16C5  0D55               	rlf	___fladd@b+3,w
  9102  16C6  0CD5               	rrf	___fladd@b+3,f
  9103  16C7  0CD4               	rrf	___fladd@b+2,f
  9104  16C8  0CD3               	rrf	___fladd@b+1,f
  9105  16C9  0CD2               	rrf	___fladd@b,f
  9106  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  9107  16CB  2EC5               	goto	u3925
  9108  16CC                     l2584:	
  9109  16CC  3001               	movlw	1
  9110  16CD  00DA               	movwf	??___fladd
  9111  16CE  085A               	movf	??___fladd,w
  9112  16CF  07E4               	addwf	___fladd@bexp,f
  9113  16D0  2F85               	goto	l2620
  9114  16D1                     l2586:	
  9115  16D1  0855               	movf	___fladd@b+3,w
  9116  16D2  3A80               	xorlw	128
  9117  16D3  00FF               	movwf	btemp+1
  9118  16D4  0859               	movf	___fladd@a+3,w
  9119  16D5  3A80               	xorlw	128
  9120  16D6  027F               	subwf	btemp+1,w
  9121  16D7  1D03               	skipz
  9122  16D8  2EE3               	goto	u3933
  9123  16D9  0858               	movf	___fladd@a+2,w
  9124  16DA  0254               	subwf	___fladd@b+2,w
  9125  16DB  1D03               	skipz
  9126  16DC  2EE3               	goto	u3933
  9127  16DD  0857               	movf	___fladd@a+1,w
  9128  16DE  0253               	subwf	___fladd@b+1,w
  9129  16DF  1D03               	skipz
  9130  16E0  2EE3               	goto	u3933
  9131  16E1  0856               	movf	___fladd@a,w
  9132  16E2  0252               	subwf	___fladd@b,w
  9133  16E3                     u3933:	
  9134  16E3  1803               	skipnc
  9135  16E4  2EE6               	goto	u3931
  9136  16E5  2EE7               	goto	u3930
  9137  16E6                     u3931:	
  9138  16E6  2F3F               	goto	l2596
  9139  16E7                     u3930:	
  9140  16E7                     l2588:	
  9141  16E7  30FF               	movlw	255
  9142  16E8  00DA               	movwf	??___fladd
  9143  16E9  30FF               	movlw	255
  9144  16EA  00DB               	movwf	??___fladd+1
  9145  16EB  30FF               	movlw	255
  9146  16EC  00DC               	movwf	??___fladd+2
  9147  16ED  30FF               	movlw	255
  9148  16EE  00DD               	movwf	??___fladd+3
  9149  16EF  0856               	movf	___fladd@a,w
  9150  16F0  00DE               	movwf	??___fladd+4
  9151  16F1  0857               	movf	___fladd@a+1,w
  9152  16F2  00DF               	movwf	??___fladd+5
  9153  16F3  0858               	movf	___fladd@a+2,w
  9154  16F4  00E0               	movwf	??___fladd+6
  9155  16F5  0859               	movf	___fladd@a+3,w
  9156  16F6  00E1               	movwf	??___fladd+7
  9157  16F7  0852               	movf	___fladd@b,w
  9158  16F8  02DE               	subwf	??___fladd+4,f
  9159  16F9  0853               	movf	___fladd@b+1,w
  9160  16FA  1C03               	skipc
  9161  16FB  0F53               	incfsz	___fladd@b+1,w
  9162  16FC  2EFE               	goto	u3941
  9163  16FD  2EFF               	goto	u3942
  9164  16FE                     u3941:	
  9165  16FE  02DF               	subwf	??___fladd+5,f
  9166  16FF                     u3942:	
  9167  16FF  0854               	movf	___fladd@b+2,w
  9168  1700  1C03               	skipc
  9169  1701  0F54               	incfsz	___fladd@b+2,w
  9170  1702  2F04               	goto	u3943
  9171  1703  2F05               	goto	u3944
  9172  1704                     u3943:	
  9173  1704  02E0               	subwf	??___fladd+6,f
  9174  1705                     u3944:	
  9175  1705  0855               	movf	___fladd@b+3,w
  9176  1706  1C03               	skipc
  9177  1707  0F55               	incfsz	___fladd@b+3,w
  9178  1708  2F0A               	goto	u3945
  9179  1709  2F0B               	goto	u3946
  9180  170A                     u3945:	
  9181  170A  02E1               	subwf	??___fladd+7,f
  9182  170B                     u3946:	
  9183  170B  085E               	movf	??___fladd+4,w
  9184  170C  07DA               	addwf	??___fladd,f
  9185  170D  085F               	movf	??___fladd+5,w
  9186  170E  1803               	skipnc
  9187  170F  0F5F               	incfsz	??___fladd+5,w
  9188  1710  2F12               	goto	u3950
  9189  1711  2F13               	goto	u3951
  9190  1712                     u3950:	
  9191  1712  07DB               	addwf	??___fladd+1,f
  9192  1713                     u3951:	
  9193  1713  0860               	movf	??___fladd+6,w
  9194  1714  1803               	skipnc
  9195  1715  0F60               	incfsz	??___fladd+6,w
  9196  1716  2F18               	goto	u3952
  9197  1717  2F19               	goto	u3953
  9198  1718                     u3952:	
  9199  1718  07DC               	addwf	??___fladd+2,f
  9200  1719                     u3953:	
  9201  1719  0861               	movf	??___fladd+7,w
  9202  171A  1803               	skipnc
  9203  171B  0A61               	incf	??___fladd+7,w
  9204  171C  07DD               	addwf	??___fladd+3,f
  9205  171D  085D               	movf	??___fladd+3,w
  9206  171E  00D5               	movwf	___fladd@b+3
  9207  171F  085C               	movf	??___fladd+2,w
  9208  1720  00D4               	movwf	___fladd@b+2
  9209  1721  085B               	movf	??___fladd+1,w
  9210  1722  00D3               	movwf	___fladd@b+1
  9211  1723  085A               	movf	??___fladd,w
  9212  1724  00D2               	movwf	___fladd@b
  9213  1725                     l2590:	
  9214  1725  3080               	movlw	128
  9215  1726  00DA               	movwf	??___fladd
  9216  1727  085A               	movf	??___fladd,w
  9217  1728  06E2               	xorwf	___fladd@signs,f
  9218  1729  09E5               	comf	___fladd@grs,f
  9219  172A  0AE5               	incf	___fladd@grs,f
  9220  172B                     l2592:	
  9221  172B  0865               	movf	___fladd@grs,w
  9222  172C  1D03               	btfss	3,2
  9223  172D  2F2F               	goto	u3961
  9224  172E  2F30               	goto	u3960
  9225  172F                     u3961:	
  9226  172F  2F4D               	goto	l725
  9227  1730                     u3960:	
  9228  1730                     l2594:	
  9229  1730  3001               	movlw	1
  9230  1731  07D2               	addwf	___fladd@b,f
  9231  1732  3000               	movlw	0
  9232  1733  1803               	skipnc
  9233  1734  3001               	movlw	1
  9234  1735  07D3               	addwf	___fladd@b+1,f
  9235  1736  3000               	movlw	0
  9236  1737  1803               	skipnc
  9237  1738  3001               	movlw	1
  9238  1739  07D4               	addwf	___fladd@b+2,f
  9239  173A  3000               	movlw	0
  9240  173B  1803               	skipnc
  9241  173C  3001               	movlw	1
  9242  173D  07D5               	addwf	___fladd@b+3,f
  9243  173E  2F4D               	goto	l725
  9244  173F                     l2596:	
  9245  173F  0856               	movf	___fladd@a,w
  9246  1740  02D2               	subwf	___fladd@b,f
  9247  1741  0857               	movf	___fladd@a+1,w
  9248  1742  1C03               	skipc
  9249  1743  0F57               	incfsz	___fladd@a+1,w
  9250  1744  02D3               	subwf	___fladd@b+1,f
  9251  1745  0858               	movf	___fladd@a+2,w
  9252  1746  1C03               	skipc
  9253  1747  0F58               	incfsz	___fladd@a+2,w
  9254  1748  02D4               	subwf	___fladd@b+2,f
  9255  1749  0859               	movf	___fladd@a+3,w
  9256  174A  1C03               	skipc
  9257  174B  0F59               	incfsz	___fladd@a+3,w
  9258  174C  02D5               	subwf	___fladd@b+3,f
  9259  174D                     l725:	
  9260  174D  0855               	movf	___fladd@b+3,w
  9261  174E  0454               	iorwf	___fladd@b+2,w
  9262  174F  0453               	iorwf	___fladd@b+1,w
  9263  1750  0452               	iorwf	___fladd@b,w
  9264  1751  1D03               	skipz
  9265  1752  2F54               	goto	u3971
  9266  1753  2F55               	goto	u3970
  9267  1754                     u3971:	
  9268  1754  2F81               	goto	l2618
  9269  1755                     u3970:	
  9270  1755                     l2598:	
  9271  1755  0865               	movf	___fladd@grs,w
  9272  1756  1D03               	btfss	3,2
  9273  1757  2F59               	goto	u3981
  9274  1758  2F5A               	goto	u3980
  9275  1759                     u3981:	
  9276  1759  2F81               	goto	l2618
  9277  175A                     u3980:	
  9278  175A                     l2600:	
  9279  175A  3000               	movlw	0
  9280  175B  00D5               	movwf	?___fladd+3
  9281  175C  3000               	movlw	0
  9282  175D  00D4               	movwf	?___fladd+2
  9283  175E  3000               	movlw	0
  9284  175F  00D3               	movwf	?___fladd+1
  9285  1760  3000               	movlw	0
  9286  1761  00D2               	movwf	?___fladd
  9287  1762  2FFF               	goto	l717
  9288  1763                     l2604:	
  9289  1763  3001               	movlw	1
  9290  1764  00DA               	movwf	??___fladd
  9291  1765                     u3995:	
  9292  1765  1003               	clrc
  9293  1766  0DD2               	rlf	___fladd@b,f
  9294  1767  0DD3               	rlf	___fladd@b+1,f
  9295  1768  0DD4               	rlf	___fladd@b+2,f
  9296  1769  0DD5               	rlf	___fladd@b+3,f
  9297  176A  0BDA               	decfsz	??___fladd,f
  9298  176B  2F65               	goto	u3995
  9299  176C                     l2606:	
  9300  176C  1FE5               	btfss	___fladd@grs,7
  9301  176D  2F6F               	goto	u4001
  9302  176E  2F70               	goto	u4000
  9303  176F                     u4001:	
  9304  176F  2F71               	goto	l729
  9305  1770                     u4000:	
  9306  1770                     l2608:	
  9307  1770  1452               	bsf	___fladd@b,0
  9308  1771                     l729:	
  9309  1771  1C65               	btfss	___fladd@grs,0
  9310  1772  2F74               	goto	u4011
  9311  1773  2F75               	goto	u4010
  9312  1774                     u4011:	
  9313  1774  2F78               	goto	l2612
  9314  1775                     u4010:	
  9315  1775                     l2610:	
  9316  1775  1403               	setc
  9317  1776  0DE5               	rlf	___fladd@grs,f
  9318  1777  2F7A               	goto	l2614
  9319  1778                     l2612:	
  9320  1778  1003               	clrc
  9321  1779  0DE5               	rlf	___fladd@grs,f
  9322  177A                     l2614:	
  9323  177A  0864               	movf	___fladd@bexp,w
  9324  177B  1903               	btfsc	3,2
  9325  177C  2F7E               	goto	u4021
  9326  177D  2F7F               	goto	u4020
  9327  177E                     u4021:	
  9328  177E  2F81               	goto	l2618
  9329  177F                     u4020:	
  9330  177F                     l2616:	
  9331  177F  3001               	movlw	1
  9332  1780  02E4               	subwf	___fladd@bexp,f
  9333  1781                     l2618:	
  9334  1781  1FD4               	btfss	___fladd@b+2,7
  9335  1782  2F84               	goto	u4031
  9336  1783  2F85               	goto	u4030
  9337  1784                     u4031:	
  9338  1784  2F63               	goto	l2604
  9339  1785                     u4030:	
  9340  1785                     l2620:	
  9341  1785  01E3               	clrf	___fladd@aexp
  9342  1786                     l2622:	
  9343  1786  1FE5               	btfss	___fladd@grs,7
  9344  1787  2F89               	goto	u4041
  9345  1788  2F8A               	goto	u4040
  9346  1789                     u4041:	
  9347  1789  2F98               	goto	l2630
  9348  178A                     u4040:	
  9349  178A                     l2624:	
  9350  178A  0865               	movf	___fladd@grs,w
  9351  178B  397F               	andlw	127
  9352  178C  1903               	btfsc	3,2
  9353  178D  2F8F               	goto	u4051
  9354  178E  2F90               	goto	u4050
  9355  178F                     u4051:	
  9356  178F  2F93               	goto	l735
  9357  1790                     u4050:	
  9358  1790                     l2626:	
  9359  1790  01E3               	clrf	___fladd@aexp
  9360  1791  0AE3               	incf	___fladd@aexp,f
  9361  1792  2F98               	goto	l2630
  9362  1793                     l735:	
  9363  1793  1C52               	btfss	___fladd@b,0
  9364  1794  2F96               	goto	u4061
  9365  1795  2F97               	goto	u4060
  9366  1796                     u4061:	
  9367  1796  2F98               	goto	l2630
  9368  1797                     u4060:	
  9369  1797  2F90               	goto	l2626
  9370  1798                     l2630:	
  9371  1798  0863               	movf	___fladd@aexp,w
  9372  1799  1903               	btfsc	3,2
  9373  179A  2F9C               	goto	u4071
  9374  179B  2F9D               	goto	u4070
  9375  179C                     u4071:	
  9376  179C  2FD1               	goto	l738
  9377  179D                     u4070:	
  9378  179D                     l2632:	
  9379  179D  3001               	movlw	1
  9380  179E  07D2               	addwf	___fladd@b,f
  9381  179F  3000               	movlw	0
  9382  17A0  1803               	skipnc
  9383  17A1  3001               	movlw	1
  9384  17A2  07D3               	addwf	___fladd@b+1,f
  9385  17A3  3000               	movlw	0
  9386  17A4  1803               	skipnc
  9387  17A5  3001               	movlw	1
  9388  17A6  07D4               	addwf	___fladd@b+2,f
  9389  17A7  3000               	movlw	0
  9390  17A8  1803               	skipnc
  9391  17A9  3001               	movlw	1
  9392  17AA  07D5               	addwf	___fladd@b+3,f
  9393  17AB                     l2634:	
  9394  17AB  1C55               	btfss	___fladd@b+3,0
  9395  17AC  2FAE               	goto	u4081
  9396  17AD  2FAF               	goto	u4080
  9397  17AE                     u4081:	
  9398  17AE  2FD1               	goto	l738
  9399  17AF                     u4080:	
  9400  17AF                     l2636:	
  9401  17AF  0852               	movf	___fladd@b,w
  9402  17B0  00DA               	movwf	??___fladd
  9403  17B1  0853               	movf	___fladd@b+1,w
  9404  17B2  00DB               	movwf	??___fladd+1
  9405  17B3  0854               	movf	___fladd@b+2,w
  9406  17B4  00DC               	movwf	??___fladd+2
  9407  17B5  0855               	movf	___fladd@b+3,w
  9408  17B6  00DD               	movwf	??___fladd+3
  9409  17B7  3001               	movlw	1
  9410  17B8  00DE               	movwf	??___fladd+4
  9411  17B9                     u4095:	
  9412  17B9  0D5D               	rlf	??___fladd+3,w
  9413  17BA  0CDD               	rrf	??___fladd+3,f
  9414  17BB  0CDC               	rrf	??___fladd+2,f
  9415  17BC  0CDB               	rrf	??___fladd+1,f
  9416  17BD  0CDA               	rrf	??___fladd,f
  9417  17BE                     u4090:	
  9418  17BE  0BDE               	decfsz	??___fladd+4,f
  9419  17BF  2FB9               	goto	u4095
  9420  17C0  085D               	movf	??___fladd+3,w
  9421  17C1  00D5               	movwf	___fladd@b+3
  9422  17C2  085C               	movf	??___fladd+2,w
  9423  17C3  00D4               	movwf	___fladd@b+2
  9424  17C4  085B               	movf	??___fladd+1,w
  9425  17C5  00D3               	movwf	___fladd@b+1
  9426  17C6  085A               	movf	??___fladd,w
  9427  17C7  00D2               	movwf	___fladd@b
  9428  17C8  0A64               	incf	___fladd@bexp,w
  9429  17C9  1903               	btfsc	3,2
  9430  17CA  2FCC               	goto	u4101
  9431  17CB  2FCD               	goto	u4100
  9432  17CC                     u4101:	
  9433  17CC  2FD1               	goto	l738
  9434  17CD                     u4100:	
  9435  17CD                     l2638:	
  9436  17CD  3001               	movlw	1
  9437  17CE  00DA               	movwf	??___fladd
  9438  17CF  085A               	movf	??___fladd,w
  9439  17D0  07E4               	addwf	___fladd@bexp,f
  9440  17D1                     l738:	
  9441  17D1  0A64               	incf	___fladd@bexp,w
  9442  17D2  1903               	btfsc	3,2
  9443  17D3  2FD5               	goto	u4111
  9444  17D4  2FD6               	goto	u4110
  9445  17D5                     u4111:	
  9446  17D5  2FDB               	goto	l2642
  9447  17D6                     u4110:	
  9448  17D6                     l2640:	
  9449  17D6  0864               	movf	___fladd@bexp,w
  9450  17D7  1D03               	btfss	3,2
  9451  17D8  2FDA               	goto	u4121
  9452  17D9  2FDB               	goto	u4120
  9453  17DA                     u4121:	
  9454  17DA  2FE9               	goto	l2648
  9455  17DB                     u4120:	
  9456  17DB                     l2642:	
  9457  17DB  3000               	movlw	0
  9458  17DC  00D5               	movwf	___fladd@b+3
  9459  17DD  3000               	movlw	0
  9460  17DE  00D4               	movwf	___fladd@b+2
  9461  17DF  3000               	movlw	0
  9462  17E0  00D3               	movwf	___fladd@b+1
  9463  17E1  3000               	movlw	0
  9464  17E2  00D2               	movwf	___fladd@b
  9465  17E3                     l2644:	
  9466  17E3  0864               	movf	___fladd@bexp,w
  9467  17E4  1D03               	btfss	3,2
  9468  17E5  2FE7               	goto	u4131
  9469  17E6  2FE8               	goto	u4130
  9470  17E7                     u4131:	
  9471  17E7  2FE9               	goto	l2648
  9472  17E8                     u4130:	
  9473  17E8                     l2646:	
  9474  17E8  01E2               	clrf	___fladd@signs
  9475  17E9                     l2648:	
  9476  17E9  1C64               	btfss	___fladd@bexp,0
  9477  17EA  2FEC               	goto	u4141
  9478  17EB  2FED               	goto	u4140
  9479  17EC                     u4141:	
  9480  17EC  2FEF               	goto	l2652
  9481  17ED                     u4140:	
  9482  17ED                     l2650:	
  9483  17ED  17D4               	bsf	___fladd@b+2,7
  9484  17EE  2FF3               	goto	l746
  9485  17EF                     l2652:	
  9486  17EF  307F               	movlw	127
  9487  17F0  00DA               	movwf	??___fladd
  9488  17F1  085A               	movf	??___fladd,w
  9489  17F2  05D4               	andwf	___fladd@b+2,f
  9490  17F3                     l746:	
  9491  17F3  0864               	movf	___fladd@bexp,w
  9492  17F4  00DA               	movwf	??___fladd
  9493  17F5  1003               	clrc
  9494  17F6  0C5A               	rrf	??___fladd,w
  9495  17F7  00DB               	movwf	??___fladd+1
  9496  17F8  085B               	movf	??___fladd+1,w
  9497  17F9  00D5               	movwf	___fladd@b+3
  9498  17FA                     l2654:	
  9499  17FA  1FE2               	btfss	___fladd@signs,7
  9500  17FB  2FFD               	goto	u4151
  9501  17FC  2FFE               	goto	u4150
  9502  17FD                     u4151:	
  9503  17FD  2FFF               	goto	l747
  9504  17FE                     u4150:	
  9505  17FE                     l2656:	
  9506  17FE  17D5               	bsf	___fladd@b+3,7
  9507  17FF                     l747:	
  9508  17FF                     l717:	
  9509  17FF  0008               	return
  9510  1800                     __end_of___fladd:	
  9511                           
  9512                           	psect	text24
  9513  1B17                     __ptext24:	
  9514 ;; *************** function _I2C_restart *****************
  9515 ;; Defined at:
  9516 ;;		line 26 in file "./I2C.h"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;		None
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;		None
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  1    wreg      void 
  9523 ;; Registers used:
  9524 ;;		None
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9530 ;;      Params:         0       0       0       0       0
  9531 ;;      Locals:         0       0       0       0       0
  9532 ;;      Temps:          0       0       0       0       0
  9533 ;;      Totals:         0       0       0       0       0
  9534 ;;Total ram usage:        0 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_LM75_read
  9540 ;;		_LM75_readConfig
  9541 ;; This function uses a non-reentrant model
  9542 ;;
  9543                           
  9544                           
  9545                           ;psect for function _I2C_restart
  9546  1B17                     _I2C_restart:	
  9547  1B17                     l2850:	
  9548                           ;incstack = 0
  9549                           ; Regs used in _I2C_restart: []
  9550                           
  9551                           
  9552                           ;./I2C.h: 28:   RSEN = 1;
  9553  1B17  1683               	bsf	3,5	;RP0=1, select bank1
  9554  1B18  1303               	bcf	3,6	;RP1=0, select bank1
  9555  1B19  1491               	bsf	17,1	;volatile
  9556  1B1A                     l88:	
  9557                           ;./I2C.h: 29:   while(!SSPIF);
  9558                           
  9559  1B1A  1283               	bcf	3,5	;RP0=0, select bank0
  9560  1B1B  1D8C               	btfss	12,3	;volatile
  9561  1B1C  2B1E               	goto	u4671
  9562  1B1D  2B1F               	goto	u4670
  9563  1B1E                     u4671:	
  9564  1B1E  2B1A               	goto	l88
  9565  1B1F                     u4670:	
  9566  1B1F                     l90:	
  9567                           
  9568                           ;./I2C.h: 30:   SSPIF = 0;
  9569  1B1F  118C               	bcf	12,3	;volatile
  9570  1B20                     l91:	
  9571  1B20  0008               	return
  9572  1B21                     __end_of_I2C_restart:	
  9573                           
  9574                           	psect	text25
  9575  1B95                     __ptext25:	
  9576 ;; *************** function _I2C_read *****************
  9577 ;; Defined at:
  9578 ;;		line 57 in file "./I2C.h"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  acknowledge     1    wreg     unsigned char 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  acknowledge     1    1[COMMON] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      unsigned char 
  9585 ;; Registers used:
  9586 ;;		wreg, status,2, status,0, pclath, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9592 ;;      Params:         0       0       0       0       0
  9593 ;;      Locals:         1       0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0
  9595 ;;      Totals:         1       0       0       0       0
  9596 ;;Total ram usage:        1 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    1
  9599 ;; This function calls:
  9600 ;;		_I2C_ack
  9601 ;; This function is called by:
  9602 ;;		_LM75_read
  9603 ;;		_LM75_readConfig
  9604 ;; This function uses a non-reentrant model
  9605 ;;
  9606                           
  9607                           
  9608                           ;psect for function _I2C_read
  9609  1B95                     _I2C_read:	
  9610                           
  9611                           ;incstack = 0
  9612                           ; Regs used in _I2C_read: [wreg+status,2+status,0+pclath+cstack]
  9613                           ;I2C_read@acknowledge stored from wreg
  9614  1B95  00F1               	movwf	I2C_read@acknowledge
  9615  1B96                     l2852:	
  9616                           
  9617                           ;./I2C.h: 57: unsigned char I2C_read(char acknowledge);./I2C.h: 58: {;./I2C.h: 59:    RC
      +                          EN = 1;
  9618  1B96  1683               	bsf	3,5	;RP0=1, select bank1
  9619  1B97  1303               	bcf	3,6	;RP1=0, select bank1
  9620  1B98  1591               	bsf	17,3	;volatile
  9621  1B99                     l112:	
  9622                           ;./I2C.h: 60:    while(!SSPIF);
  9623                           
  9624  1B99  1283               	bcf	3,5	;RP0=0, select bank0
  9625  1B9A  1D8C               	btfss	12,3	;volatile
  9626  1B9B  2B9D               	goto	u4681
  9627  1B9C  2B9E               	goto	u4680
  9628  1B9D                     u4681:	
  9629  1B9D  2B99               	goto	l112
  9630  1B9E                     u4680:	
  9631  1B9E                     l114:	
  9632                           
  9633                           ;./I2C.h: 61:    SSPIF = 0;
  9634  1B9E  118C               	bcf	12,3	;volatile
  9635  1B9F                     l2854:	
  9636                           
  9637                           ;./I2C.h: 62:    I2C_ack(acknowledge);
  9638  1B9F  0871               	movf	I2C_read@acknowledge,w
  9639  1BA0  160A  158A  236E  160A  158A  	fcall	_I2C_ack
  9640  1BA5                     l2856:	
  9641                           
  9642                           ;./I2C.h: 64:    return SSPBUF;
  9643  1BA5  1283               	bcf	3,5	;RP0=0, select bank0
  9644  1BA6  1303               	bcf	3,6	;RP1=0, select bank0
  9645  1BA7  0813               	movf	19,w	;volatile
  9646  1BA8                     l115:	
  9647  1BA8  0008               	return
  9648  1BA9                     __end_of_I2C_read:	
  9649                           
  9650                           	psect	text26
  9651  1B6E                     __ptext26:	
  9652 ;; *************** function _I2C_ack *****************
  9653 ;; Defined at:
  9654 ;;		line 40 in file "./I2C.h"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  acknowledge     1    wreg     unsigned char 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  acknowledge     1    0[COMMON] unsigned char 
  9659 ;; Return value:  Size  Location     Type
  9660 ;;                  1    wreg      void 
  9661 ;; Registers used:
  9662 ;;		wreg
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9668 ;;      Params:         0       0       0       0       0
  9669 ;;      Locals:         1       0       0       0       0
  9670 ;;      Temps:          0       0       0       0       0
  9671 ;;      Totals:         1       0       0       0       0
  9672 ;;Total ram usage:        1 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; This function calls:
  9675 ;;		Nothing
  9676 ;; This function is called by:
  9677 ;;		_I2C_read
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           
  9682                           ;psect for function _I2C_ack
  9683  1B6E                     _I2C_ack:	
  9684                           
  9685                           ;incstack = 0
  9686                           ; Regs used in _I2C_ack: [wreg]
  9687                           ;I2C_ack@acknowledge stored from wreg
  9688  1B6E  00F0               	movwf	I2C_ack@acknowledge
  9689  1B6F                     l2304:	
  9690                           
  9691                           ;./I2C.h: 40: void I2C_ack(char acknowledge);./I2C.h: 41: {;./I2C.h: 42:   ACKDT = ackno
      +                          wledge;
  9692  1B6F  1870               	btfsc	I2C_ack@acknowledge,0
  9693  1B70  2B72               	goto	u3271
  9694  1B71  2B76               	goto	u3270
  9695  1B72                     u3271:	
  9696  1B72  1683               	bsf	3,5	;RP0=1, select bank1
  9697  1B73  1303               	bcf	3,6	;RP1=0, select bank1
  9698  1B74  1691               	bsf	17,5	;volatile
  9699  1B75  2B79               	goto	u3284
  9700  1B76                     u3270:	
  9701  1B76  1683               	bsf	3,5	;RP0=1, select bank1
  9702  1B77  1303               	bcf	3,6	;RP1=0, select bank1
  9703  1B78  1291               	bcf	17,5	;volatile
  9704  1B79                     u3284:	
  9705                           
  9706                           ;./I2C.h: 43:   ACKEN = 1;
  9707  1B79  1611               	bsf	17,4	;volatile
  9708  1B7A                     l100:	
  9709                           ;./I2C.h: 44:   while(!SSPIF);
  9710                           
  9711  1B7A  1283               	bcf	3,5	;RP0=0, select bank0
  9712  1B7B  1D8C               	btfss	12,3	;volatile
  9713  1B7C  2B7E               	goto	u3291
  9714  1B7D  2B7F               	goto	u3290
  9715  1B7E                     u3291:	
  9716  1B7E  2B7A               	goto	l100
  9717  1B7F                     u3290:	
  9718  1B7F                     l102:	
  9719                           
  9720                           ;./I2C.h: 45:   SSPIF = 0;
  9721  1B7F  118C               	bcf	12,3	;volatile
  9722  1B80                     l103:	
  9723  1B80  0008               	return
  9724  1B81                     __end_of_I2C_ack:	
  9725                           
  9726                           	psect	text27
  9727  1BEB                     __ptext27:	
  9728 ;; *************** function _LM75_init *****************
  9729 ;; Defined at:
  9730 ;;		line 7 in file "./LM75.h"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;		None
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;		None
  9735 ;; Return value:  Size  Location     Type
  9736 ;;                  1    wreg      void 
  9737 ;; Registers used:
  9738 ;;		wreg, status,2, status,0, pclath, cstack
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9744 ;;      Params:         0       0       0       0       0
  9745 ;;      Locals:         0       0       0       0       0
  9746 ;;      Temps:          0       0       0       0       0
  9747 ;;      Totals:         0       0       0       0       0
  9748 ;;Total ram usage:        0 bytes
  9749 ;; Hardware stack levels used:    1
  9750 ;; Hardware stack levels required when called:    2
  9751 ;; This function calls:
  9752 ;;		_I2C_init
  9753 ;;		_LM75_set
  9754 ;; This function is called by:
  9755 ;;		_main
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           
  9760                           ;psect for function _LM75_init
  9761  1BEB                     _LM75_init:	
  9762  1BEB                     l3182:	
  9763                           ;incstack = 0
  9764                           ; Regs used in _LM75_init: [wreg+status,2+status,0+pclath+cstack]
  9765                           
  9766                           
  9767                           ;./LM75.h: 9:   I2C_init(100000);
  9768  1BEB  3000               	movlw	0
  9769  1BEC  1283               	bcf	3,5	;RP0=0, select bank0
  9770  1BED  1303               	bcf	3,6	;RP1=0, select bank0
  9771  1BEE  00A3               	movwf	I2C_init@speed+3
  9772  1BEF  3001               	movlw	1
  9773  1BF0  00A2               	movwf	I2C_init@speed+2
  9774  1BF1  3086               	movlw	134
  9775  1BF2  00A1               	movwf	I2C_init@speed+1
  9776  1BF3  30A0               	movlw	160
  9777  1BF4  00A0               	movwf	I2C_init@speed
  9778  1BF5  160A  158A  247D  160A  158A  	fcall	_I2C_init
  9779                           
  9780                           ;./LM75.h: 12:   LM75_set(0x03,0x2380);
  9781  1BFA  3080               	movlw	128
  9782  1BFB  00F1               	movwf	LM75_set@data
  9783  1BFC  3023               	movlw	35
  9784  1BFD  00F2               	movwf	LM75_set@data+1
  9785  1BFE  3003               	movlw	3
  9786  1BFF  160A  158A  23C7  160A  158A  	fcall	_LM75_set
  9787                           
  9788                           ;./LM75.h: 13:   LM75_set(0x02,0x1E80);
  9789  1C04  3080               	movlw	128
  9790  1C05  00F1               	movwf	LM75_set@data
  9791  1C06  301E               	movlw	30
  9792  1C07  00F2               	movwf	LM75_set@data+1
  9793  1C08  3002               	movlw	2
  9794  1C09  160A  158A  23C7  160A  158A  	fcall	_LM75_set
  9795  1C0E                     l121:	
  9796  1C0E  0008               	return
  9797  1C0F                     __end_of_LM75_init:	
  9798                           
  9799                           	psect	text28
  9800  1BC7                     __ptext28:	
  9801 ;; *************** function _LM75_set *****************
  9802 ;; Defined at:
  9803 ;;		line 60 in file "./LM75.h"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  regAddress      1    wreg     unsigned char 
  9806 ;;  data            2    1[COMMON] int 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;  regAddress      1    3[COMMON] unsigned char 
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0, pclath, cstack
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9818 ;;      Params:         2       0       0       0       0
  9819 ;;      Locals:         1       0       0       0       0
  9820 ;;      Temps:          0       0       0       0       0
  9821 ;;      Totals:         3       0       0       0       0
  9822 ;;Total ram usage:        3 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    1
  9825 ;; This function calls:
  9826 ;;		_I2C_start
  9827 ;;		_I2C_stop
  9828 ;;		_I2C_write
  9829 ;; This function is called by:
  9830 ;;		_LM75_init
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           
  9835                           ;psect for function _LM75_set
  9836  1BC7                     _LM75_set:	
  9837                           
  9838                           ;incstack = 0
  9839                           ; Regs used in _LM75_set: [wreg+status,2+status,0+pclath+cstack]
  9840                           ;LM75_set@regAddress stored from wreg
  9841  1BC7  00F3               	movwf	LM75_set@regAddress
  9842  1BC8                     l2860:	
  9843                           
  9844                           ;./LM75.h: 60: void LM75_set(char regAddress, int data);./LM75.h: 61: {;./LM75.h: 62:   
      +                          I2C_start();
  9845  1BC8  160A  158A  2303  160A  158A  	fcall	_I2C_start
  9846  1BCD                     l2862:	
  9847                           
  9848                           ;./LM75.h: 64:   I2C_write(0x90);
  9849  1BCD  3090               	movlw	144
  9850  1BCE  160A  158A  2337  160A  158A  	fcall	_I2C_write
  9851  1BD3                     l2864:	
  9852                           
  9853                           ;./LM75.h: 65:   I2C_write(regAddress);
  9854  1BD3  0873               	movf	LM75_set@regAddress,w
  9855  1BD4  160A  158A  2337  160A  158A  	fcall	_I2C_write
  9856  1BD9                     l2866:	
  9857                           
  9858                           ;./LM75.h: 66:   I2C_write(data>>8);
  9859  1BD9  0872               	movf	LM75_set@data+1,w
  9860  1BDA  160A  158A  2337  160A  158A  	fcall	_I2C_write
  9861  1BDF                     l2868:	
  9862                           
  9863                           ;./LM75.h: 67:   I2C_write(data);
  9864  1BDF  0871               	movf	LM75_set@data,w
  9865  1BE0  160A  158A  2337  160A  158A  	fcall	_I2C_write
  9866                           
  9867                           ;./LM75.h: 69:   I2C_stop();
  9868  1BE5  160A  158A  230D  160A  158A  	fcall	_I2C_stop
  9869  1BEA                     l133:	
  9870  1BEA  0008               	return
  9871  1BEB                     __end_of_LM75_set:	
  9872                           
  9873                           	psect	text29
  9874  1B37                     __ptext29:	
  9875 ;; *************** function _I2C_write *****************
  9876 ;; Defined at:
  9877 ;;		line 48 in file "./I2C.h"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  data            1    wreg     unsigned char 
  9880 ;; Auto vars:     Size  Location     Type
  9881 ;;  data            1    0[COMMON] unsigned char 
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  1    wreg      unsigned char 
  9884 ;; Registers used:
  9885 ;;		wreg
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9891 ;;      Params:         0       0       0       0       0
  9892 ;;      Locals:         1       0       0       0       0
  9893 ;;      Temps:          0       0       0       0       0
  9894 ;;      Totals:         1       0       0       0       0
  9895 ;;Total ram usage:        1 bytes
  9896 ;; Hardware stack levels used:    1
  9897 ;; This function calls:
  9898 ;;		Nothing
  9899 ;; This function is called by:
  9900 ;;		_LM75_read
  9901 ;;		_LM75_set
  9902 ;;		_LM75_setConfig
  9903 ;;		_LM75_readConfig
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           
  9908                           ;psect for function _I2C_write
  9909  1B37                     _I2C_write:	
  9910                           
  9911                           ;incstack = 0
  9912                           ; Regs used in _I2C_write: [wreg]
  9913                           ;I2C_write@data stored from wreg
  9914  1B37  00F0               	movwf	I2C_write@data
  9915  1B38                     l2306:	
  9916                           
  9917                           ;./I2C.h: 48: unsigned char I2C_write(unsigned char data);./I2C.h: 49: {;./I2C.h: 50:   
      +                          SSPBUF = data;
  9918  1B38  0870               	movf	I2C_write@data,w
  9919  1B39  1283               	bcf	3,5	;RP0=0, select bank0
  9920  1B3A  1303               	bcf	3,6	;RP1=0, select bank0
  9921  1B3B  0093               	movwf	19	;volatile
  9922  1B3C                     l106:	
  9923                           ;./I2C.h: 51:   while(!SSPIF);
  9924                           
  9925  1B3C  1D8C               	btfss	12,3	;volatile
  9926  1B3D  2B3F               	goto	u3301
  9927  1B3E  2B40               	goto	u3300
  9928  1B3F                     u3301:	
  9929  1B3F  2B3C               	goto	l106
  9930  1B40                     u3300:	
  9931  1B40                     l108:	
  9932                           
  9933                           ;./I2C.h: 52:   SSPIF = 0;
  9934  1B40  118C               	bcf	12,3	;volatile
  9935  1B41                     l109:	
  9936                           ;./I2C.h: 54:   return ACKSTAT;;	Return value of _I2C_write is never used
  9937                           
  9938  1B41  0008               	return
  9939  1B42                     __end_of_I2C_write:	
  9940                           
  9941                           	psect	text30
  9942  1B0D                     __ptext30:	
  9943 ;; *************** function _I2C_stop *****************
  9944 ;; Defined at:
  9945 ;;		line 33 in file "./I2C.h"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;		None
  9948 ;; Auto vars:     Size  Location     Type
  9949 ;;		None
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  1    wreg      void 
  9952 ;; Registers used:
  9953 ;;		None
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9959 ;;      Params:         0       0       0       0       0
  9960 ;;      Locals:         0       0       0       0       0
  9961 ;;      Temps:          0       0       0       0       0
  9962 ;;      Totals:         0       0       0       0       0
  9963 ;;Total ram usage:        0 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; This function calls:
  9966 ;;		Nothing
  9967 ;; This function is called by:
  9968 ;;		_LM75_read
  9969 ;;		_LM75_set
  9970 ;;		_LM75_setConfig
  9971 ;;		_LM75_readConfig
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           
  9976                           ;psect for function _I2C_stop
  9977  1B0D                     _I2C_stop:	
  9978  1B0D                     l2302:	
  9979                           ;incstack = 0
  9980                           ; Regs used in _I2C_stop: []
  9981                           
  9982                           
  9983                           ;./I2C.h: 35:   PEN = 1;
  9984  1B0D  1683               	bsf	3,5	;RP0=1, select bank1
  9985  1B0E  1303               	bcf	3,6	;RP1=0, select bank1
  9986  1B0F  1511               	bsf	17,2	;volatile
  9987  1B10                     l94:	
  9988                           ;./I2C.h: 36:   while(!SSPIF);
  9989                           
  9990  1B10  1283               	bcf	3,5	;RP0=0, select bank0
  9991  1B11  1D8C               	btfss	12,3	;volatile
  9992  1B12  2B14               	goto	u3261
  9993  1B13  2B15               	goto	u3260
  9994  1B14                     u3261:	
  9995  1B14  2B10               	goto	l94
  9996  1B15                     u3260:	
  9997  1B15                     l96:	
  9998                           
  9999                           ;./I2C.h: 37:   SSPIF = 0;
 10000  1B15  118C               	bcf	12,3	;volatile
 10001  1B16                     l97:	
 10002  1B16  0008               	return
 10003  1B17                     __end_of_I2C_stop:	
 10004                           
 10005                           	psect	text31
 10006  1B03                     __ptext31:	
 10007 ;; *************** function _I2C_start *****************
 10008 ;; Defined at:
 10009 ;;		line 19 in file "./I2C.h"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;		None
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		None
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10023 ;;      Params:         0       0       0       0       0
 10024 ;;      Locals:         0       0       0       0       0
 10025 ;;      Temps:          0       0       0       0       0
 10026 ;;      Totals:         0       0       0       0       0
 10027 ;;Total ram usage:        0 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; This function calls:
 10030 ;;		Nothing
 10031 ;; This function is called by:
 10032 ;;		_LM75_read
 10033 ;;		_LM75_set
 10034 ;;		_LM75_setConfig
 10035 ;;		_LM75_readConfig
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           
 10040                           ;psect for function _I2C_start
 10041  1B03                     _I2C_start:	
 10042  1B03                     l2300:	
 10043                           ;incstack = 0
 10044                           ; Regs used in _I2C_start: []
 10045                           
 10046                           
 10047                           ;./I2C.h: 21:   SEN = 1;
 10048  1B03  1683               	bsf	3,5	;RP0=1, select bank1
 10049  1B04  1303               	bcf	3,6	;RP1=0, select bank1
 10050  1B05  1411               	bsf	17,0	;volatile
 10051  1B06                     l82:	
 10052                           ;./I2C.h: 22:   while(!SSPIF);
 10053                           
 10054  1B06  1283               	bcf	3,5	;RP0=0, select bank0
 10055  1B07  1D8C               	btfss	12,3	;volatile
 10056  1B08  2B0A               	goto	u3251
 10057  1B09  2B0B               	goto	u3250
 10058  1B0A                     u3251:	
 10059  1B0A  2B06               	goto	l82
 10060  1B0B                     u3250:	
 10061  1B0B                     l84:	
 10062                           
 10063                           ;./I2C.h: 23:   SSPIF = 0;
 10064  1B0B  118C               	bcf	12,3	;volatile
 10065  1B0C                     l85:	
 10066  1B0C  0008               	return
 10067  1B0D                     __end_of_I2C_start:	
 10068                           
 10069                           	psect	text32
 10070  1C7D                     __ptext32:	
 10071 ;; *************** function _I2C_init *****************
 10072 ;; Defined at:
 10073 ;;		line 9 in file "./I2C.h"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  speed           4    0[BANK0 ] unsigned long 
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		wreg, status,2, status,0, pclath, cstack
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10087 ;;      Params:         0       4       0       0       0
 10088 ;;      Locals:         0       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0
 10090 ;;      Totals:         0       4       0       0       0
 10091 ;;Total ram usage:        4 bytes
 10092 ;; Hardware stack levels used:    1
 10093 ;; Hardware stack levels required when called:    1
 10094 ;; This function calls:
 10095 ;;		___lldiv
 10096 ;; This function is called by:
 10097 ;;		_LM75_init
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           
 10102                           ;psect for function _I2C_init
 10103  1C7D                     _I2C_init:	
 10104  1C7D                     l2842:	
 10105                           ;incstack = 0
 10106                           ; Regs used in _I2C_init: [wreg+status,2+status,0+pclath+cstack]
 10107                           
 10108                           
 10109                           ;./I2C.h: 9: void I2C_init(unsigned long speed);./I2C.h: 10: {;./I2C.h: 11:   TRISC3 = 1
      +                          ;
 10110  1C7D  1683               	bsf	3,5	;RP0=1, select bank1
 10111  1C7E  1303               	bcf	3,6	;RP1=0, select bank1
 10112  1C7F  1587               	bsf	7,3	;volatile
 10113                           
 10114                           ;./I2C.h: 12:   TRISC4 = 1;
 10115  1C80  1607               	bsf	7,4	;volatile
 10116  1C81                     l2844:	
 10117                           
 10118                           ;./I2C.h: 14:   SSPADD = ((4000000/4000)/speed) - 1;
 10119  1C81  1283               	bcf	3,5	;RP0=0, select bank0
 10120  1C82  1303               	bcf	3,6	;RP1=0, select bank0
 10121  1C83  0823               	movf	I2C_init@speed+3,w
 10122  1C84  00F3               	movwf	___lldiv@divisor+3
 10123  1C85  0822               	movf	I2C_init@speed+2,w
 10124  1C86  00F2               	movwf	___lldiv@divisor+2
 10125  1C87  0821               	movf	I2C_init@speed+1,w
 10126  1C88  00F1               	movwf	___lldiv@divisor+1
 10127  1C89  0820               	movf	I2C_init@speed,w
 10128  1C8A  00F0               	movwf	___lldiv@divisor
 10129  1C8B  3000               	movlw	0
 10130  1C8C  00F7               	movwf	___lldiv@dividend+3
 10131  1C8D  3000               	movlw	0
 10132  1C8E  00F6               	movwf	___lldiv@dividend+2
 10133  1C8F  3003               	movlw	3
 10134  1C90  00F5               	movwf	___lldiv@dividend+1
 10135  1C91  30E8               	movlw	232
 10136  1C92  00F4               	movwf	___lldiv@dividend
 10137  1C93  160A  158A  264E  160A  158A  	fcall	___lldiv
 10138  1C98  0870               	movf	?___lldiv,w
 10139  1C99  3EFF               	addlw	255
 10140  1C9A  1683               	bsf	3,5	;RP0=1, select bank1
 10141  1C9B  1303               	bcf	3,6	;RP1=0, select bank1
 10142  1C9C  0093               	movwf	19	;volatile
 10143  1C9D                     l2846:	
 10144                           
 10145                           ;./I2C.h: 15:   SSPSTAT = 0x80;
 10146  1C9D  3080               	movlw	128
 10147  1C9E  0094               	movwf	20	;volatile
 10148  1C9F                     l2848:	
 10149                           
 10150                           ;./I2C.h: 16:   SSPCON = 0x28;
 10151  1C9F  3028               	movlw	40
 10152  1CA0  1283               	bcf	3,5	;RP0=0, select bank0
 10153  1CA1  1303               	bcf	3,6	;RP1=0, select bank0
 10154  1CA2  0094               	movwf	20	;volatile
 10155  1CA3                     l79:	
 10156  1CA3  0008               	return
 10157  1CA4                     __end_of_I2C_init:	
 10158                           
 10159                           	psect	text33
 10160  1E4E                     __ptext33:	
 10161 ;; *************** function ___lldiv *****************
 10162 ;; Defined at:
 10163 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
 10164 ;; Parameters:    Size  Location     Type
 10165 ;;  divisor         4    0[COMMON] unsigned long 
 10166 ;;  dividend        4    4[COMMON] unsigned long 
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;  quotient        4    9[COMMON] unsigned long 
 10169 ;;  counter         1   13[COMMON] unsigned char 
 10170 ;; Return value:  Size  Location     Type
 10171 ;;                  4    0[COMMON] unsigned long 
 10172 ;; Registers used:
 10173 ;;		wreg, status,2, status,0
 10174 ;; Tracked objects:
 10175 ;;		On entry : 0/0
 10176 ;;		On exit  : 0/0
 10177 ;;		Unchanged: 0/0
 10178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10179 ;;      Params:         8       0       0       0       0
 10180 ;;      Locals:         5       0       0       0       0
 10181 ;;      Temps:          1       0       0       0       0
 10182 ;;      Totals:        14       0       0       0       0
 10183 ;;Total ram usage:       14 bytes
 10184 ;; Hardware stack levels used:    1
 10185 ;; This function calls:
 10186 ;;		Nothing
 10187 ;; This function is called by:
 10188 ;;		_I2C_init
 10189 ;;		_sprintf
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193                           
 10194                           ;psect for function ___lldiv
 10195  1E4E                     ___lldiv:	
 10196  1E4E                     l2310:	
 10197                           ;incstack = 0
 10198                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10199                           
 10200  1E4E  3000               	movlw	0
 10201  1E4F  00FC               	movwf	___lldiv@quotient+3
 10202  1E50  3000               	movlw	0
 10203  1E51  00FB               	movwf	___lldiv@quotient+2
 10204  1E52  3000               	movlw	0
 10205  1E53  00FA               	movwf	___lldiv@quotient+1
 10206  1E54  3000               	movlw	0
 10207  1E55  00F9               	movwf	___lldiv@quotient
 10208  1E56  0873               	movf	___lldiv@divisor+3,w
 10209  1E57  0472               	iorwf	___lldiv@divisor+2,w
 10210  1E58  0471               	iorwf	___lldiv@divisor+1,w
 10211  1E59  0470               	iorwf	___lldiv@divisor,w
 10212  1E5A  1903               	skipnz
 10213  1E5B  2E5D               	goto	u3311
 10214  1E5C  2E5E               	goto	u3310
 10215  1E5D                     u3311:	
 10216  1E5D  2EAB               	goto	l2330
 10217  1E5E                     u3310:	
 10218  1E5E                     l2312:	
 10219  1E5E  01FD               	clrf	___lldiv@counter
 10220  1E5F  0AFD               	incf	___lldiv@counter,f
 10221  1E60  2E6E               	goto	l2316
 10222  1E61                     l2314:	
 10223  1E61  3001               	movlw	1
 10224  1E62  00F8               	movwf	??___lldiv
 10225  1E63                     u3325:	
 10226  1E63  1003               	clrc
 10227  1E64  0DF0               	rlf	___lldiv@divisor,f
 10228  1E65  0DF1               	rlf	___lldiv@divisor+1,f
 10229  1E66  0DF2               	rlf	___lldiv@divisor+2,f
 10230  1E67  0DF3               	rlf	___lldiv@divisor+3,f
 10231  1E68  0BF8               	decfsz	??___lldiv,f
 10232  1E69  2E63               	goto	u3325
 10233  1E6A  3001               	movlw	1
 10234  1E6B  00F8               	movwf	??___lldiv
 10235  1E6C  0878               	movf	??___lldiv,w
 10236  1E6D  07FD               	addwf	___lldiv@counter,f
 10237  1E6E                     l2316:	
 10238  1E6E  1FF3               	btfss	___lldiv@divisor+3,7
 10239  1E6F  2E71               	goto	u3331
 10240  1E70  2E72               	goto	u3330
 10241  1E71                     u3331:	
 10242  1E71  2E61               	goto	l2314
 10243  1E72                     u3330:	
 10244  1E72                     l2318:	
 10245  1E72  3001               	movlw	1
 10246  1E73  00F8               	movwf	??___lldiv
 10247  1E74                     u3345:	
 10248  1E74  1003               	clrc
 10249  1E75  0DF9               	rlf	___lldiv@quotient,f
 10250  1E76  0DFA               	rlf	___lldiv@quotient+1,f
 10251  1E77  0DFB               	rlf	___lldiv@quotient+2,f
 10252  1E78  0DFC               	rlf	___lldiv@quotient+3,f
 10253  1E79  0BF8               	decfsz	??___lldiv,f
 10254  1E7A  2E74               	goto	u3345
 10255  1E7B                     l2320:	
 10256  1E7B  0873               	movf	___lldiv@divisor+3,w
 10257  1E7C  0277               	subwf	___lldiv@dividend+3,w
 10258  1E7D  1D03               	skipz
 10259  1E7E  2E89               	goto	u3355
 10260  1E7F  0872               	movf	___lldiv@divisor+2,w
 10261  1E80  0276               	subwf	___lldiv@dividend+2,w
 10262  1E81  1D03               	skipz
 10263  1E82  2E89               	goto	u3355
 10264  1E83  0871               	movf	___lldiv@divisor+1,w
 10265  1E84  0275               	subwf	___lldiv@dividend+1,w
 10266  1E85  1D03               	skipz
 10267  1E86  2E89               	goto	u3355
 10268  1E87  0870               	movf	___lldiv@divisor,w
 10269  1E88  0274               	subwf	___lldiv@dividend,w
 10270  1E89                     u3355:	
 10271  1E89  1C03               	skipc
 10272  1E8A  2E8C               	goto	u3351
 10273  1E8B  2E8D               	goto	u3350
 10274  1E8C                     u3351:	
 10275  1E8C  2E9C               	goto	l2326
 10276  1E8D                     u3350:	
 10277  1E8D                     l2322:	
 10278  1E8D  0870               	movf	___lldiv@divisor,w
 10279  1E8E  02F4               	subwf	___lldiv@dividend,f
 10280  1E8F  0871               	movf	___lldiv@divisor+1,w
 10281  1E90  1C03               	skipc
 10282  1E91  0F71               	incfsz	___lldiv@divisor+1,w
 10283  1E92  02F5               	subwf	___lldiv@dividend+1,f
 10284  1E93  0872               	movf	___lldiv@divisor+2,w
 10285  1E94  1C03               	skipc
 10286  1E95  0F72               	incfsz	___lldiv@divisor+2,w
 10287  1E96  02F6               	subwf	___lldiv@dividend+2,f
 10288  1E97  0873               	movf	___lldiv@divisor+3,w
 10289  1E98  1C03               	skipc
 10290  1E99  0F73               	incfsz	___lldiv@divisor+3,w
 10291  1E9A  02F7               	subwf	___lldiv@dividend+3,f
 10292  1E9B                     l2324:	
 10293  1E9B  1479               	bsf	___lldiv@quotient,0
 10294  1E9C                     l2326:	
 10295  1E9C  3001               	movlw	1
 10296  1E9D                     u3365:	
 10297  1E9D  1003               	clrc
 10298  1E9E  0CF3               	rrf	___lldiv@divisor+3,f
 10299  1E9F  0CF2               	rrf	___lldiv@divisor+2,f
 10300  1EA0  0CF1               	rrf	___lldiv@divisor+1,f
 10301  1EA1  0CF0               	rrf	___lldiv@divisor,f
 10302  1EA2  3EFF               	addlw	-1
 10303  1EA3  1D03               	skipz
 10304  1EA4  2E9D               	goto	u3365
 10305  1EA5                     l2328:	
 10306  1EA5  3001               	movlw	1
 10307  1EA6  02FD               	subwf	___lldiv@counter,f
 10308  1EA7  1D03               	btfss	3,2
 10309  1EA8  2EAA               	goto	u3371
 10310  1EA9  2EAB               	goto	u3370
 10311  1EAA                     u3371:	
 10312  1EAA  2E72               	goto	l2318
 10313  1EAB                     u3370:	
 10314  1EAB                     l2330:	
 10315  1EAB  087C               	movf	___lldiv@quotient+3,w
 10316  1EAC  00F3               	movwf	?___lldiv+3
 10317  1EAD  087B               	movf	___lldiv@quotient+2,w
 10318  1EAE  00F2               	movwf	?___lldiv+2
 10319  1EAF  087A               	movf	___lldiv@quotient+1,w
 10320  1EB0  00F1               	movwf	?___lldiv+1
 10321  1EB1  0879               	movf	___lldiv@quotient,w
 10322  1EB2  00F0               	movwf	?___lldiv
 10323  1EB3                     l413:	
 10324  1EB3  0008               	return
 10325  1EB4                     __end_of___lldiv:	
 10326                           
 10327                           	psect	text34
 10328  1CA4                     __ptext34:	
 10329 ;; *************** function _LCD_string *****************
 10330 ;; Defined at:
 10331 ;;		line 29 in file "./Lcd4.h"
 10332 ;; Parameters:    Size  Location     Type
 10333 ;;  row             1    wreg     unsigned char 
 10334 ;;  column          1    9[BANK0 ] unsigned char 
 10335 ;;  text            1   10[BANK0 ] PTR unsigned char 
 10336 ;;		 -> out(15), 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  row             1    9[COMMON] unsigned char 
 10339 ;; Return value:  Size  Location     Type
 10340 ;;                  1    wreg      void 
 10341 ;; Registers used:
 10342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10343 ;; Tracked objects:
 10344 ;;		On entry : 0/0
 10345 ;;		On exit  : 0/0
 10346 ;;		Unchanged: 0/0
 10347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10348 ;;      Params:         0       2       0       0       0
 10349 ;;      Locals:         1       0       0       0       0
 10350 ;;      Temps:          1       0       0       0       0
 10351 ;;      Totals:         2       2       0       0       0
 10352 ;;Total ram usage:        4 bytes
 10353 ;; Hardware stack levels used:    1
 10354 ;; Hardware stack levels required when called:    4
 10355 ;; This function calls:
 10356 ;;		_LCD_command
 10357 ;;		_LCD_data
 10358 ;; This function is called by:
 10359 ;;		_main
 10360 ;; This function uses a non-reentrant model
 10361 ;;
 10362                           
 10363                           
 10364                           ;psect for function _LCD_string
 10365  1CA4                     _LCD_string:	
 10366                           
 10367                           ;incstack = 0
 10368                           ; Regs used in _LCD_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10369                           ;LCD_string@row stored from wreg
 10370  1CA4  00F9               	movwf	LCD_string@row
 10371  1CA5                     l3212:	
 10372                           
 10373                           ;./Lcd4.h: 29: void LCD_string(char row, char column, char text[]);./Lcd4.h: 30: {;./Lcd
      +                          4.h: 31:   LCD_command(rowAddr[row] + column);
 10374  1CA5  0879               	movf	LCD_string@row,w
 10375  1CA6  3EE7               	addlw	(low (_rowAddr| 0))& (0+255)
 10376  1CA7  0084               	movwf	4
 10377  1CA8  1283               	bcf	3,5	;RP0=0, select bank0
 10378  1CA9  1303               	bcf	3,6	;RP1=0, select bank0
 10379  1CAA  0829               	movf	LCD_string@column,w
 10380  1CAB  1383               	bcf	3,7	;select IRP bank1
 10381  1CAC  0700               	addwf	0,w
 10382  1CAD  160A  158A  2321  160A  158A  	fcall	_LCD_command
 10383                           
 10384                           ;./Lcd4.h: 32:   while(*text)
 10385  1CB2  2CC1               	goto	l3218
 10386  1CB3                     l3214:	
 10387                           
 10388                           ;./Lcd4.h: 33:   {;./Lcd4.h: 34:     LCD_data(*text++);
 10389  1CB3  082A               	movf	LCD_string@text,w
 10390  1CB4  0084               	movwf	4
 10391  1CB5  0800               	movf	0,w
 10392  1CB6  160A  158A  232C  160A  158A  	fcall	_LCD_data
 10393  1CBB                     l3216:	
 10394  1CBB  3001               	movlw	1
 10395  1CBC  00F8               	movwf	??_LCD_string
 10396  1CBD  0878               	movf	??_LCD_string,w
 10397  1CBE  1283               	bcf	3,5	;RP0=0, select bank0
 10398  1CBF  1303               	bcf	3,6	;RP1=0, select bank0
 10399  1CC0  07AA               	addwf	LCD_string@text,f
 10400  1CC1                     l3218:	
 10401                           
 10402                           ;./Lcd4.h: 32:   while(*text)
 10403  1CC1  1283               	bcf	3,5	;RP0=0, select bank0
 10404  1CC2  1303               	bcf	3,6	;RP1=0, select bank0
 10405  1CC3  082A               	movf	LCD_string@text,w
 10406  1CC4  0084               	movwf	4
 10407  1CC5  1383               	bcf	3,7	;select IRP bank0
 10408  1CC6  0800               	movf	0,w
 10409  1CC7  1D03               	btfss	3,2
 10410  1CC8  2CCA               	goto	u5551
 10411  1CC9  2CCB               	goto	u5550
 10412  1CCA                     u5551:	
 10413  1CCA  2CB3               	goto	l3214
 10414  1CCB                     u5550:	
 10415  1CCB                     l154:	
 10416  1CCB  0008               	return
 10417  1CCC                     __end_of_LCD_string:	
 10418                           
 10419                           	psect	text35
 10420  1B2C                     __ptext35:	
 10421 ;; *************** function _LCD_data *****************
 10422 ;; Defined at:
 10423 ;;		line 23 in file "./Lcd4.h"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;  data            1    wreg     unsigned char 
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;  data            1    7[COMMON] unsigned char 
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  1    wreg      void 
 10430 ;; Registers used:
 10431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10437 ;;      Params:         0       0       0       0       0
 10438 ;;      Locals:         1       0       0       0       0
 10439 ;;      Temps:          0       0       0       0       0
 10440 ;;      Totals:         1       0       0       0       0
 10441 ;;Total ram usage:        1 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:    3
 10444 ;; This function calls:
 10445 ;;		_LCD_transmit
 10446 ;; This function is called by:
 10447 ;;		_LCD_string
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           
 10452                           ;psect for function _LCD_data
 10453  1B2C                     _LCD_data:	
 10454                           
 10455                           ;incstack = 0
 10456                           ; Regs used in _LCD_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10457                           ;LCD_data@data stored from wreg
 10458  1B2C  00F7               	movwf	LCD_data@data
 10459  1B2D                     l2888:	
 10460                           
 10461                           ;./Lcd4.h: 23: void LCD_data(char data);./Lcd4.h: 24: {;./Lcd4.h: 25:   RD0 = 1;
 10462  1B2D  1283               	bcf	3,5	;RP0=0, select bank0
 10463  1B2E  1303               	bcf	3,6	;RP1=0, select bank0
 10464  1B2F  1408               	bsf	8,0	;volatile
 10465  1B30                     l2890:	
 10466                           
 10467                           ;./Lcd4.h: 26:   LCD_transmit(data);
 10468  1B30  0877               	movf	LCD_data@data,w
 10469  1B31  160A  158A  2381  160A  158A  	fcall	_LCD_transmit
 10470  1B36                     l148:	
 10471  1B36  0008               	return
 10472  1B37                     __end_of_LCD_data:	
 10473                           
 10474                           	psect	text36
 10475  1BA9                     __ptext36:	
 10476 ;; *************** function _LCD_init *****************
 10477 ;; Defined at:
 10478 ;;		line 7 in file "./Lcd4.h"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;		None
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;		None
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  1    wreg      void 
 10485 ;; Registers used:
 10486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10492 ;;      Params:         0       0       0       0       0
 10493 ;;      Locals:         0       0       0       0       0
 10494 ;;      Temps:          0       0       0       0       0
 10495 ;;      Totals:         0       0       0       0       0
 10496 ;;Total ram usage:        0 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    4
 10499 ;; This function calls:
 10500 ;;		_LCD_command
 10501 ;;		_LCD_pinDirs
 10502 ;; This function is called by:
 10503 ;;		_main
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           
 10508                           ;psect for function _LCD_init
 10509  1BA9                     _LCD_init:	
 10510  1BA9                     l3202:	
 10511                           ;incstack = 0
 10512                           ; Regs used in _LCD_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10513                           
 10514                           
 10515                           ;./Lcd4.h: 9:   LCD_pinDirs();
 10516  1BA9  160A  158A  22FA  160A  158A  	fcall	_LCD_pinDirs
 10517  1BAE                     l3204:	
 10518                           
 10519                           ;./Lcd4.h: 11:   LCD_command(0x02);
 10520  1BAE  3002               	movlw	2
 10521  1BAF  160A  158A  2321  160A  158A  	fcall	_LCD_command
 10522  1BB4                     l3206:	
 10523                           
 10524                           ;./Lcd4.h: 12:   LCD_command(0x28);
 10525  1BB4  3028               	movlw	40
 10526  1BB5  160A  158A  2321  160A  158A  	fcall	_LCD_command
 10527  1BBA                     l3208:	
 10528                           
 10529                           ;./Lcd4.h: 13:   LCD_command(0x0C);
 10530  1BBA  300C               	movlw	12
 10531  1BBB  160A  158A  2321  160A  158A  	fcall	_LCD_command
 10532  1BC0                     l3210:	
 10533                           
 10534                           ;./Lcd4.h: 14:   LCD_command(0x06);
 10535  1BC0  3006               	movlw	6
 10536  1BC1  160A  158A  2321  160A  158A  	fcall	_LCD_command
 10537  1BC6                     l142:	
 10538  1BC6  0008               	return
 10539  1BC7                     __end_of_LCD_init:	
 10540                           
 10541                           	psect	text37
 10542  1AFA                     __ptext37:	
 10543 ;; *************** function _LCD_pinDirs *****************
 10544 ;; Defined at:
 10545 ;;		line 78 in file "./Lcd4.h"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;		None
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;		None
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      void 
 10552 ;; Registers used:
 10553 ;;		None
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10559 ;;      Params:         0       0       0       0       0
 10560 ;;      Locals:         0       0       0       0       0
 10561 ;;      Temps:          0       0       0       0       0
 10562 ;;      Totals:         0       0       0       0       0
 10563 ;;Total ram usage:        0 bytes
 10564 ;; Hardware stack levels used:    1
 10565 ;; This function calls:
 10566 ;;		Nothing
 10567 ;; This function is called by:
 10568 ;;		_LCD_init
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           
 10573                           ;psect for function _LCD_pinDirs
 10574  1AFA                     _LCD_pinDirs:	
 10575  1AFA                     l2882:	
 10576                           ;incstack = 0
 10577                           ; Regs used in _LCD_pinDirs: []
 10578                           
 10579                           
 10580                           ;./Lcd4.h: 80:   TRISD0 = 0;
 10581  1AFA  1683               	bsf	3,5	;RP0=1, select bank1
 10582  1AFB  1303               	bcf	3,6	;RP1=0, select bank1
 10583  1AFC  1008               	bcf	8,0	;volatile
 10584                           
 10585                           ;./Lcd4.h: 81:   TRISD1 = 0;
 10586  1AFD  1088               	bcf	8,1	;volatile
 10587                           
 10588                           ;./Lcd4.h: 82:   TRISD4 = 0;
 10589  1AFE  1208               	bcf	8,4	;volatile
 10590                           
 10591                           ;./Lcd4.h: 83:   TRISD5 = 0;
 10592  1AFF  1288               	bcf	8,5	;volatile
 10593                           
 10594                           ;./Lcd4.h: 84:   TRISD6 = 0;
 10595  1B00  1308               	bcf	8,6	;volatile
 10596                           
 10597                           ;./Lcd4.h: 85:   TRISD7 = 0;
 10598  1B01  1388               	bcf	8,7	;volatile
 10599  1B02                     l171:	
 10600  1B02  0008               	return
 10601  1B03                     __end_of_LCD_pinDirs:	
 10602                           
 10603                           	psect	text38
 10604  1B21                     __ptext38:	
 10605 ;; *************** function _LCD_command *****************
 10606 ;; Defined at:
 10607 ;;		line 17 in file "./Lcd4.h"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;  command         1    wreg     unsigned char 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;  command         1    7[COMMON] unsigned char 
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  1    wreg      void 
 10614 ;; Registers used:
 10615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10621 ;;      Params:         0       0       0       0       0
 10622 ;;      Locals:         1       0       0       0       0
 10623 ;;      Temps:          0       0       0       0       0
 10624 ;;      Totals:         1       0       0       0       0
 10625 ;;Total ram usage:        1 bytes
 10626 ;; Hardware stack levels used:    1
 10627 ;; Hardware stack levels required when called:    3
 10628 ;; This function calls:
 10629 ;;		_LCD_transmit
 10630 ;; This function is called by:
 10631 ;;		_LCD_init
 10632 ;;		_LCD_string
 10633 ;;		_main
 10634 ;; This function uses a non-reentrant model
 10635 ;;
 10636                           
 10637                           
 10638                           ;psect for function _LCD_command
 10639  1B21                     _LCD_command:	
 10640                           
 10641                           ;incstack = 0
 10642                           ; Regs used in _LCD_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10643                           ;LCD_command@command stored from wreg
 10644  1B21  00F7               	movwf	LCD_command@command
 10645  1B22                     l2884:	
 10646                           
 10647                           ;./Lcd4.h: 17: void LCD_command(char command);./Lcd4.h: 18: {;./Lcd4.h: 19:   RD0 = 0;
 10648  1B22  1283               	bcf	3,5	;RP0=0, select bank0
 10649  1B23  1303               	bcf	3,6	;RP1=0, select bank0
 10650  1B24  1008               	bcf	8,0	;volatile
 10651  1B25                     l2886:	
 10652                           
 10653                           ;./Lcd4.h: 20:   LCD_transmit(command);
 10654  1B25  0877               	movf	LCD_command@command,w
 10655  1B26  160A  158A  2381  160A  158A  	fcall	_LCD_transmit
 10656  1B2B                     l145:	
 10657  1B2B  0008               	return
 10658  1B2C                     __end_of_LCD_command:	
 10659                           
 10660                           	psect	text39
 10661  1B81                     __ptext39:	
 10662 ;; *************** function _LCD_transmit *****************
 10663 ;; Defined at:
 10664 ;;		line 38 in file "./Lcd4.h"
 10665 ;; Parameters:    Size  Location     Type
 10666 ;;  data            1    wreg     unsigned char 
 10667 ;; Auto vars:     Size  Location     Type
 10668 ;;  data            1    8[BANK0 ] unsigned char 
 10669 ;;  pinBit          8    0[BANK0 ] unsigned char [8]
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      void 
 10672 ;; Registers used:
 10673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10679 ;;      Params:         0       0       0       0       0
 10680 ;;      Locals:         0       9       0       0       0
 10681 ;;      Temps:          1       0       0       0       0
 10682 ;;      Totals:         1       9       0       0       0
 10683 ;;Total ram usage:       10 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:    2
 10686 ;; This function calls:
 10687 ;;		_LCD_getBits
 10688 ;;		_LCD_sendBits
 10689 ;; This function is called by:
 10690 ;;		_LCD_command
 10691 ;;		_LCD_data
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           
 10696                           ;psect for function _LCD_transmit
 10697  1B81                     _LCD_transmit:	
 10698                           
 10699                           ;incstack = 0
 10700                           ; Regs used in _LCD_transmit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10701                           ;LCD_transmit@data stored from wreg
 10702  1B81  1283               	bcf	3,5	;RP0=0, select bank0
 10703  1B82  1303               	bcf	3,6	;RP1=0, select bank0
 10704  1B83  00A8               	movwf	LCD_transmit@data
 10705  1B84                     l2308:	
 10706                           
 10707                           ;./Lcd4.h: 38: void LCD_transmit(char data);./Lcd4.h: 39: {;./Lcd4.h: 40:   char pinBit[
      +                          8];;./Lcd4.h: 42:   LCD_getBits(data,pinBit);
 10708  1B84  3020               	movlw	(low (LCD_transmit@pinBit| 0))& (0+255)
 10709  1B85  00F6               	movwf	??_LCD_transmit
 10710  1B86  0876               	movf	??_LCD_transmit,w
 10711  1B87  00F0               	movwf	LCD_getBits@pinBit
 10712  1B88  0828               	movf	LCD_transmit@data,w
 10713  1B89  160A  158A  2433  160A  158A  	fcall	_LCD_getBits
 10714                           
 10715                           ;./Lcd4.h: 43:   LCD_sendBits(pinBit);
 10716  1B8E  3020               	movlw	(low (LCD_transmit@pinBit| 0))& (0+255)
 10717  1B8F  160A  158A  2786  160A  158A  	fcall	_LCD_sendBits
 10718  1B94                     l157:	
 10719  1B94  0008               	return
 10720  1B95                     __end_of_LCD_transmit:	
 10721                           
 10722                           	psect	text40
 10723  1F86                     __ptext40:	
 10724 ;; *************** function _LCD_sendBits *****************
 10725 ;; Defined at:
 10726 ;;		line 54 in file "./Lcd4.h"
 10727 ;; Parameters:    Size  Location     Type
 10728 ;;  pinBit          1    wreg     PTR unsigned char 
 10729 ;;		 -> LCD_transmit@pinBit(8), 
 10730 ;; Auto vars:     Size  Location     Type
 10731 ;;  pinBit          1    2[COMMON] PTR unsigned char 
 10732 ;;		 -> LCD_transmit@pinBit(8), 
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  1    wreg      void 
 10735 ;; Registers used:
 10736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10742 ;;      Params:         0       0       0       0       0
 10743 ;;      Locals:         1       0       0       0       0
 10744 ;;      Temps:          0       0       0       0       0
 10745 ;;      Totals:         1       0       0       0       0
 10746 ;;Total ram usage:        1 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; Hardware stack levels required when called:    1
 10749 ;; This function calls:
 10750 ;;		_latch
 10751 ;; This function is called by:
 10752 ;;		_LCD_transmit
 10753 ;; This function uses a non-reentrant model
 10754 ;;
 10755                           
 10756                           
 10757                           ;psect for function _LCD_sendBits
 10758  1F86                     _LCD_sendBits:	
 10759                           
 10760                           ;incstack = 0
 10761                           ; Regs used in _LCD_sendBits: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10762                           ;LCD_sendBits@pinBit stored from wreg
 10763  1F86  00F2               	movwf	LCD_sendBits@pinBit
 10764  1F87                     l2272:	
 10765                           
 10766                           ;./Lcd4.h: 54: void LCD_sendBits(char pinBit[]);./Lcd4.h: 55: {;./Lcd4.h: 57:   RD4 = pi
      +                          nBit[4];
 10767  1F87  0872               	movf	LCD_sendBits@pinBit,w
 10768  1F88  3E04               	addlw	4
 10769  1F89  0084               	movwf	4
 10770  1F8A  1383               	bcf	3,7	;select IRP bank0
 10771  1F8B  1800               	btfsc	0,0
 10772  1F8C  2F8E               	goto	u3061
 10773  1F8D  2F92               	goto	u3060
 10774  1F8E                     u3061:	
 10775  1F8E  1283               	bcf	3,5	;RP0=0, select bank0
 10776  1F8F  1303               	bcf	3,6	;RP1=0, select bank0
 10777  1F90  1608               	bsf	8,4	;volatile
 10778  1F91  2F95               	goto	u3074
 10779  1F92                     u3060:	
 10780  1F92  1283               	bcf	3,5	;RP0=0, select bank0
 10781  1F93  1303               	bcf	3,6	;RP1=0, select bank0
 10782  1F94  1208               	bcf	8,4	;volatile
 10783  1F95                     u3074:	
 10784                           
 10785                           ;./Lcd4.h: 58:   RD5 = pinBit[5];
 10786  1F95  0872               	movf	LCD_sendBits@pinBit,w
 10787  1F96  3E05               	addlw	5
 10788  1F97  0084               	movwf	4
 10789  1F98  1383               	bcf	3,7	;select IRP bank0
 10790  1F99  1800               	btfsc	0,0
 10791  1F9A  2F9C               	goto	u3081
 10792  1F9B  2FA0               	goto	u3080
 10793  1F9C                     u3081:	
 10794  1F9C  1283               	bcf	3,5	;RP0=0, select bank0
 10795  1F9D  1303               	bcf	3,6	;RP1=0, select bank0
 10796  1F9E  1688               	bsf	8,5	;volatile
 10797  1F9F  2FA3               	goto	u3094
 10798  1FA0                     u3080:	
 10799  1FA0  1283               	bcf	3,5	;RP0=0, select bank0
 10800  1FA1  1303               	bcf	3,6	;RP1=0, select bank0
 10801  1FA2  1288               	bcf	8,5	;volatile
 10802  1FA3                     u3094:	
 10803                           
 10804                           ;./Lcd4.h: 59:   RD6 = pinBit[6];
 10805  1FA3  0872               	movf	LCD_sendBits@pinBit,w
 10806  1FA4  3E06               	addlw	6
 10807  1FA5  0084               	movwf	4
 10808  1FA6  1383               	bcf	3,7	;select IRP bank0
 10809  1FA7  1800               	btfsc	0,0
 10810  1FA8  2FAA               	goto	u3101
 10811  1FA9  2FAE               	goto	u3100
 10812  1FAA                     u3101:	
 10813  1FAA  1283               	bcf	3,5	;RP0=0, select bank0
 10814  1FAB  1303               	bcf	3,6	;RP1=0, select bank0
 10815  1FAC  1708               	bsf	8,6	;volatile
 10816  1FAD  2FB1               	goto	u3114
 10817  1FAE                     u3100:	
 10818  1FAE  1283               	bcf	3,5	;RP0=0, select bank0
 10819  1FAF  1303               	bcf	3,6	;RP1=0, select bank0
 10820  1FB0  1308               	bcf	8,6	;volatile
 10821  1FB1                     u3114:	
 10822                           
 10823                           ;./Lcd4.h: 60:   RD7 = pinBit[7];
 10824  1FB1  0872               	movf	LCD_sendBits@pinBit,w
 10825  1FB2  3E07               	addlw	7
 10826  1FB3  0084               	movwf	4
 10827  1FB4  1383               	bcf	3,7	;select IRP bank0
 10828  1FB5  1800               	btfsc	0,0
 10829  1FB6  2FB8               	goto	u3121
 10830  1FB7  2FBC               	goto	u3120
 10831  1FB8                     u3121:	
 10832  1FB8  1283               	bcf	3,5	;RP0=0, select bank0
 10833  1FB9  1303               	bcf	3,6	;RP1=0, select bank0
 10834  1FBA  1788               	bsf	8,7	;volatile
 10835  1FBB  2FBF               	goto	u3134
 10836  1FBC                     u3120:	
 10837  1FBC  1283               	bcf	3,5	;RP0=0, select bank0
 10838  1FBD  1303               	bcf	3,6	;RP1=0, select bank0
 10839  1FBE  1388               	bcf	8,7	;volatile
 10840  1FBF                     u3134:	
 10841  1FBF                     l2274:	
 10842                           
 10843                           ;./Lcd4.h: 61:   latch();
 10844  1FBF  160A  158A  234D  160A  158A  	fcall	_latch
 10845  1FC4                     l2276:	
 10846                           
 10847                           ;./Lcd4.h: 64:   RD4 = pinBit[0];
 10848  1FC4  0872               	movf	LCD_sendBits@pinBit,w
 10849  1FC5  0084               	movwf	4
 10850  1FC6  1383               	bcf	3,7	;select IRP bank0
 10851  1FC7  1800               	btfsc	0,0
 10852  1FC8  2FCA               	goto	u3141
 10853  1FC9  2FCE               	goto	u3140
 10854  1FCA                     u3141:	
 10855  1FCA  1283               	bcf	3,5	;RP0=0, select bank0
 10856  1FCB  1303               	bcf	3,6	;RP1=0, select bank0
 10857  1FCC  1608               	bsf	8,4	;volatile
 10858  1FCD  2FD1               	goto	u3154
 10859  1FCE                     u3140:	
 10860  1FCE  1283               	bcf	3,5	;RP0=0, select bank0
 10861  1FCF  1303               	bcf	3,6	;RP1=0, select bank0
 10862  1FD0  1208               	bcf	8,4	;volatile
 10863  1FD1                     u3154:	
 10864  1FD1                     l2278:	
 10865                           
 10866                           ;./Lcd4.h: 65:   RD5 = pinBit[1];
 10867  1FD1  0A72               	incf	LCD_sendBits@pinBit,w
 10868  1FD2  0084               	movwf	4
 10869  1FD3  1383               	bcf	3,7	;select IRP bank0
 10870  1FD4  1800               	btfsc	0,0
 10871  1FD5  2FD7               	goto	u3161
 10872  1FD6  2FDB               	goto	u3160
 10873  1FD7                     u3161:	
 10874  1FD7  1283               	bcf	3,5	;RP0=0, select bank0
 10875  1FD8  1303               	bcf	3,6	;RP1=0, select bank0
 10876  1FD9  1688               	bsf	8,5	;volatile
 10877  1FDA  2FDE               	goto	u3174
 10878  1FDB                     u3160:	
 10879  1FDB  1283               	bcf	3,5	;RP0=0, select bank0
 10880  1FDC  1303               	bcf	3,6	;RP1=0, select bank0
 10881  1FDD  1288               	bcf	8,5	;volatile
 10882  1FDE                     u3174:	
 10883  1FDE                     l2280:	
 10884                           
 10885                           ;./Lcd4.h: 66:   RD6 = pinBit[2];
 10886  1FDE  0872               	movf	LCD_sendBits@pinBit,w
 10887  1FDF  3E02               	addlw	2
 10888  1FE0  0084               	movwf	4
 10889  1FE1  1383               	bcf	3,7	;select IRP bank0
 10890  1FE2  1800               	btfsc	0,0
 10891  1FE3  2FE5               	goto	u3181
 10892  1FE4  2FE9               	goto	u3180
 10893  1FE5                     u3181:	
 10894  1FE5  1283               	bcf	3,5	;RP0=0, select bank0
 10895  1FE6  1303               	bcf	3,6	;RP1=0, select bank0
 10896  1FE7  1708               	bsf	8,6	;volatile
 10897  1FE8  2FEC               	goto	u3194
 10898  1FE9                     u3180:	
 10899  1FE9  1283               	bcf	3,5	;RP0=0, select bank0
 10900  1FEA  1303               	bcf	3,6	;RP1=0, select bank0
 10901  1FEB  1308               	bcf	8,6	;volatile
 10902  1FEC                     u3194:	
 10903  1FEC                     l2282:	
 10904                           
 10905                           ;./Lcd4.h: 67:   RD7 = pinBit[3];
 10906  1FEC  0872               	movf	LCD_sendBits@pinBit,w
 10907  1FED  3E03               	addlw	3
 10908  1FEE  0084               	movwf	4
 10909  1FEF  1383               	bcf	3,7	;select IRP bank0
 10910  1FF0  1800               	btfsc	0,0
 10911  1FF1  2FF3               	goto	u3201
 10912  1FF2  2FF7               	goto	u3200
 10913  1FF3                     u3201:	
 10914  1FF3  1283               	bcf	3,5	;RP0=0, select bank0
 10915  1FF4  1303               	bcf	3,6	;RP1=0, select bank0
 10916  1FF5  1788               	bsf	8,7	;volatile
 10917  1FF6  2FFA               	goto	u3214
 10918  1FF7                     u3200:	
 10919  1FF7  1283               	bcf	3,5	;RP0=0, select bank0
 10920  1FF8  1303               	bcf	3,6	;RP1=0, select bank0
 10921  1FF9  1388               	bcf	8,7	;volatile
 10922  1FFA                     u3214:	
 10923  1FFA                     l2284:	
 10924                           
 10925                           ;./Lcd4.h: 68:   latch();
 10926  1FFA  160A  158A  234D  160A  158A  	fcall	_latch
 10927  1FFF                     l165:	
 10928  1FFF  0008               	return
 10929  2000                     __end_of_LCD_sendBits:	
 10930                           
 10931                           	psect	text41
 10932  1B4D                     __ptext41:	
 10933 ;; *************** function _latch *****************
 10934 ;; Defined at:
 10935 ;;		line 71 in file "./Lcd4.h"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;		None
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      void 
 10942 ;; Registers used:
 10943 ;;		wreg
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10949 ;;      Params:         0       0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0
 10951 ;;      Temps:          2       0       0       0       0
 10952 ;;      Totals:         2       0       0       0       0
 10953 ;;Total ram usage:        2 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; This function calls:
 10956 ;;		Nothing
 10957 ;; This function is called by:
 10958 ;;		_LCD_sendBits
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           
 10963                           ;psect for function _latch
 10964  1B4D                     _latch:	
 10965  1B4D                     l2254:	
 10966                           ;incstack = 0
 10967                           ; Regs used in _latch: [wreg]
 10968                           
 10969                           
 10970                           ;./Lcd4.h: 73:   RD1 = 1;
 10971  1B4D  1283               	bcf	3,5	;RP0=0, select bank0
 10972  1B4E  1303               	bcf	3,6	;RP1=0, select bank0
 10973  1B4F  1488               	bsf	8,1	;volatile
 10974  1B50                     l2256:	
 10975                           
 10976                           ;./Lcd4.h: 74:   _delay((unsigned long)((5)*(4000000/4000.0)));
 10977  1B50  3007               	movlw	7
 10978  1B51  00F1               	movwf	??_latch+1
 10979  1B52  307D               	movlw	125
 10980  1B53  00F0               	movwf	??_latch
 10981  1B54                     u6047:	
 10982  1B54  0BF0               	decfsz	??_latch,f
 10983  1B55  2B54               	goto	u6047
 10984  1B56  0BF1               	decfsz	??_latch+1,f
 10985  1B57  2B54               	goto	u6047
 10986  1B58                     l2258:	
 10987                           
 10988                           ;./Lcd4.h: 75:   RD1 = 0;
 10989  1B58  1283               	bcf	3,5	;RP0=0, select bank0
 10990  1B59  1303               	bcf	3,6	;RP1=0, select bank0
 10991  1B5A  1088               	bcf	8,1	;volatile
 10992  1B5B                     l168:	
 10993  1B5B  0008               	return
 10994  1B5C                     __end_of_latch:	
 10995                           
 10996                           	psect	text42
 10997  1C33                     __ptext42:	
 10998 ;; *************** function _LCD_getBits *****************
 10999 ;; Defined at:
 11000 ;;		line 46 in file "./Lcd4.h"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;  data            1    wreg     unsigned char 
 11003 ;;  pinBit          1    0[COMMON] PTR unsigned char 
 11004 ;;		 -> LCD_transmit@pinBit(8), 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;  data            1    4[COMMON] unsigned char 
 11007 ;;  i               1    5[COMMON] unsigned char 
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  1    wreg      void 
 11010 ;; Registers used:
 11011 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11017 ;;      Params:         1       0       0       0       0
 11018 ;;      Locals:         2       0       0       0       0
 11019 ;;      Temps:          3       0       0       0       0
 11020 ;;      Totals:         6       0       0       0       0
 11021 ;;Total ram usage:        6 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; This function calls:
 11024 ;;		Nothing
 11025 ;; This function is called by:
 11026 ;;		_LCD_transmit
 11027 ;; This function uses a non-reentrant model
 11028 ;;
 11029                           
 11030                           
 11031                           ;psect for function _LCD_getBits
 11032  1C33                     _LCD_getBits:	
 11033                           
 11034                           ;incstack = 0
 11035                           ; Regs used in _LCD_getBits: [wreg-fsr0h+status,2+status,0]
 11036                           ;LCD_getBits@data stored from wreg
 11037  1C33  00F4               	movwf	LCD_getBits@data
 11038  1C34                     l2260:	
 11039                           
 11040                           ;./Lcd4.h: 46: void LCD_getBits(char data, char pinBit[]);./Lcd4.h: 47: {;./Lcd4.h: 48: 
      +                            for(char i = 0; i < 8; i++)
 11041  1C34  01F5               	clrf	LCD_getBits@i
 11042  1C35                     l2266:	
 11043                           
 11044                           ;./Lcd4.h: 49:   {;./Lcd4.h: 50:     pinBit[i] = ((data >> i) & 0x01) ? 1 : 0;
 11045  1C35  0874               	movf	LCD_getBits@data,w
 11046  1C36  00F1               	movwf	??_LCD_getBits
 11047  1C37  0A75               	incf	LCD_getBits@i,w
 11048  1C38  2C3B               	goto	u3024
 11049  1C39                     u3025:	
 11050  1C39  1003               	clrc
 11051  1C3A  0CF1               	rrf	??_LCD_getBits,f
 11052  1C3B                     u3024:	
 11053  1C3B  3EFF               	addlw	-1
 11054  1C3C  1D03               	skipz
 11055  1C3D  2C39               	goto	u3025
 11056  1C3E  1871               	btfsc	??_LCD_getBits,0
 11057  1C3F  2C41               	goto	u3031
 11058  1C40  2C43               	goto	u3030
 11059  1C41                     u3031:	
 11060  1C41  3001               	movlw	1
 11061  1C42  2C44               	goto	u3040
 11062  1C43                     u3030:	
 11063  1C43  3000               	movlw	0
 11064  1C44                     u3040:	
 11065  1C44  00F2               	movwf	??_LCD_getBits+1
 11066  1C45  0875               	movf	LCD_getBits@i,w
 11067  1C46  0770               	addwf	LCD_getBits@pinBit,w
 11068  1C47  00F3               	movwf	??_LCD_getBits+2
 11069  1C48  0873               	movf	??_LCD_getBits+2,w
 11070  1C49  0084               	movwf	4
 11071  1C4A  0872               	movf	??_LCD_getBits+1,w
 11072  1C4B  1383               	bcf	3,7	;select IRP bank0
 11073  1C4C  0080               	movwf	0
 11074  1C4D                     l2268:	
 11075                           
 11076                           ;./Lcd4.h: 51:   }
 11077  1C4D  3001               	movlw	1
 11078  1C4E  00F1               	movwf	??_LCD_getBits
 11079  1C4F  0871               	movf	??_LCD_getBits,w
 11080  1C50  07F5               	addwf	LCD_getBits@i,f
 11081  1C51                     l2270:	
 11082  1C51  3008               	movlw	8
 11083  1C52  0275               	subwf	LCD_getBits@i,w
 11084  1C53  1C03               	skipc
 11085  1C54  2C56               	goto	u3051
 11086  1C55  2C57               	goto	u3050
 11087  1C56                     u3051:	
 11088  1C56  2C35               	goto	l2266
 11089  1C57                     u3050:	
 11090  1C57                     l162:	
 11091  1C57  0008               	return
 11092  1C58                     __end_of_LCD_getBits:	
 11093  007E                     btemp	set	126	;btemp
 11094  007E                     wtemp0	set	126


Data Sizes:
    Strings     13
    Constant    144
    Data        4
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     56      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 15
		 -> out(BANK1[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    LCD_sendBits@pinBit	PTR unsigned char  size(1) Largest target is 8
		 -> LCD_transmit@pinBit(BANK0[8]), 

    LCD_getBits@pinBit	PTR unsigned char  size(1) Largest target is 8
		 -> LCD_transmit@pinBit(BANK0[8]), 

    LCD_string@text	PTR unsigned char  size(1) Largest target is 15
		 -> out(BANK1[15]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _toFloat->___xxtofl
    _I2C_read->_I2C_ack
    _LM75_set->_I2C_write
    _I2C_init->___lldiv
    _LCD_string->_LCD_command
    _LCD_string->_LCD_data
    _LCD_data->_LCD_transmit
    _LCD_init->_LCD_command
    _LCD_command->_LCD_transmit
    _LCD_transmit->_LCD_getBits
    _LCD_sendBits->_latch

Critical Paths under _main in BANK0

    _main->_LM75_read
    _sprintf->_LM75_read
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    _LM75_read->_toFloat
    _toFloat->___fladd
    ___fladd->_fround
    _LM75_init->_I2C_init
    _LCD_data->_LCD_transmit
    _LCD_command->_LCD_transmit

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_LM75_read
    _LM75_read->_toFloat

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4   38130
                                             49 BANK1      7     3      4
                        _LCD_command
                           _LCD_init
                         _LCD_string
                          _LM75_init
                          _LM75_read
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31628
                                             12 BANK1     37    32      5
                          _LM75_read (ARG)
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _LM75_read                                           11     7      4    3237
                                             76 BANK0      4     0      4
                                              5 BANK1      7     7      0
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                            _toFloat
 ---------------------------------------------------------------------------------
 (2) _toFloat                                             11     7      4    3103
                                             70 BANK0      6     2      4
                                              0 BANK1      5     5      0
                            ___fladd
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             1     1      0      44
                                              1 COMMON     1     1      0
                            _I2C_ack
 ---------------------------------------------------------------------------------
 (3) _I2C_ack                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LM75_init                                            0     0      0     956
                           _I2C_init
                           _LM75_set
 ---------------------------------------------------------------------------------
 (2) _LM75_set                                             3     1      2     240
                                              1 COMMON     3     1      2
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             4     0      4     716
                                              0 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _LCD_string                                           4     2      2    1275
                                              8 COMMON     2     2      0
                                              9 BANK0      2     0      2
                        _LCD_command
                           _LCD_data
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             1     1      0     517
                                              7 COMMON     1     1      0
                       _LCD_transmit
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0     517
                        _LCD_command
                        _LCD_pinDirs
 ---------------------------------------------------------------------------------
 (2) _LCD_pinDirs                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          1     1      0     517
                                              7 COMMON     1     1      0
                       _LCD_transmit
 ---------------------------------------------------------------------------------
 (3) _LCD_transmit                                        10    10      0     495
                                              6 COMMON     1     1      0
                                              0 BANK0      9     9      0
                        _LCD_getBits
                       _LCD_sendBits
 ---------------------------------------------------------------------------------
 (4) _LCD_sendBits                                         1     1      0     209
                                              2 COMMON     1     1      0
                              _latch
 ---------------------------------------------------------------------------------
 (5) _latch                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _LCD_getBits                                          6     5      1     210
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_command
     _LCD_transmit
       _LCD_getBits
       _LCD_sendBits
         _latch
   _LCD_init
     _LCD_command
       _LCD_transmit
         _LCD_getBits
         _LCD_sendBits
           _latch
     _LCD_pinDirs
   _LCD_string
     _LCD_command
       _LCD_transmit
         _LCD_getBits
         _LCD_sendBits
           _latch
     _LCD_data
       _LCD_transmit
         _LCD_getBits
         _LCD_sendBits
           _latch
   _LM75_init
     _I2C_init
       ___lldiv
     _LM75_set
       _I2C_start
       _I2C_stop
       _I2C_write
   _LM75_read
     _I2C_read
       _I2C_ack
     _I2C_restart
     _I2C_start
     _I2C_stop
     _I2C_write
     _toFloat
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl
   _sprintf
     _LM75_read (ARG)
       _I2C_read
         _I2C_ack
       _I2C_restart
       _I2C_start
       _I2C_stop
       _I2C_write
       _toFloat
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl
     ___awdiv (ARG)
       ___awmod (ARG)
     ___fladd (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq (ARG)
     ___flge (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg (ARG)
     ___flsub (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     38      4B       7       93.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A9      12        0.0%
ABS                  0      0      A9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed May 06 18:27:38 2020

                       pc 0002               __CFG_CP$OFF 0000                        l82 1B06  
                      l90 1B1F                        l91 1B20                        l84 1B0B  
                      l85 1B0C                        l94 1B10                        l79 1CA3  
                      l96 1B15                        l88 1B1A                        l97 1B16  
            ___awdiv@sign 0021                        fsr 0004       ___wmul@multiplicand 0072  
      __size_of_I2C_start 000A       __Umul8_16@word_mpld 0076        __size_of_I2C_write 000B  
                     l100 1B7A                       l102 1B7F                       l103 1B80  
                     l112 1B99                       l121 1C0E                       l106 1B3C  
                     l114 1B9E                       l115 1BA8                       l108 1B40  
                     l124 1F1C                       l109 1B41                       l133 1BEA  
                     l142 1BC6                       l312 011D                       l145 1B2B  
                     l137 1153                       l162 1C57                       l154 1CCB  
                     l171 1B02                       l148 1B36                       l165 1FFF  
                     l157 1B94                       l413 1EB3                       l350 05A6  
                     l343 0562                       l168 1B5B                       l530 1F85  
                     l290 0C9E                       l283 1577                       l605 135F  
                     l373 07D2                       l710 1659                       l358 070D  
                     l551 0902                       l543 1DF0                       l704 15DB  
                     l800 0FFF                       l633 0057                       l377 1C64  
                     l563 1D66                       l571 11DC                       l379 1C7C  
                     l547 093F                       l708 1682                       l564 1D82  
                     l572 11F5                       l580 0881                       l548 08A4  
                     l812 0FF3                       l725 174D                       l717 17FF  
                     l565 1D97                       l750 1C32                       l590 0881  
                     l558 0932                       l806 0F6B                       l735 1793  
                     l840 12AF                       l568 1170                       l576 1B4C  
                     l729 1771                       l746 17F3                       l738 17D1  
                     l594 136C                       l747 17FF                       l851 1279  
                     l587 086C                       l595 12DE                       l683 1D49  
                     l852 1285                       l844 125D                       l693 1D05  
                     l838 1218                       l598 132F                       l866 10B7  
                     l858 1B6D                       l868 10C9                       _RD0 0040  
                     _RD1 0041                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       _PEN 048A  
            __CFG_CPD$OFF 0000                       _SEN 0488                       _R_W 04A2  
                     fsr0 0004                       _out 00D8                       indf 0000  
         __end_of_I2C_ack 1B81              ___awmod@sign 0076       I2C_read@acknowledge 0071  
            __CFG_IESO$ON 0000              ___flmul@aexp 0036               ?_LCD_string 0029  
            ___flmul@bexp 0037               _sprintf$885 00B6              ___flmul@sign 0031  
            ___flmul@temp 003C              ___flmul@prod 0038              __CFG_LVP$OFF 0000  
            ?_LCD_getBits 0070              ___fltol@exp1 005B                      l3000 133B  
                    l3010 1364                      l3002 134D                      l2300 1B03  
                    l3100 1190                      l3020 0898                      l2310 1E4E  
                    l2302 1B0D                      l3102 11B4                      l3030 08BE  
                    l3014 0882                      l2320 1E7B                      l2312 1E5E  
                    l2304 1B6F                      l3104 11B8                      l3112 1B42  
                    l3120 0806                      l3040 08F2                      l3032 08C0  
                    l3016 088F                      l3008 1354                      l2400 1DC5  
                    l3210 1BC0                      l3202 1BA9                      l2322 1E8D  
                    l2314 1E61                      l2330 1EAB                      l2306 1B38  
                    l3106 11F2                      l3114 1B4A                      l3130 0832  
                    l3122 0813                      l3042 08F3                      l3034 08C9  
                    l3026 08A5                      l2410 1DE7                      l2402 1DCF  
                    l2260 1C34                      l2308 1B84                      l3204 1BAE  
                    l3212 1CA5                      l2324 1E9B                      l2316 1E6E  
                    l2500 15C8                      l3108 11F4                      l3116 1B4C  
                    l3132 083A                      l3060 0927                      l3052 090E  
                    l3044 08FC                      l3036 08D2                      l3028 08AD  
                    l2420 1D0E                      l2340 1F29                      l2412 1DEC  
                    l2404 1DD5                      l3300 0214                      l3220 005B  
                    l2270 1C51                      l2254 1B4D                      l3206 1BB4  
                    l3214 1CB3                      l2326 1E9C                      l2318 1E72  
                    l2510 15E5                      l2502 15D0                      l3150 0861  
                    l3142 0848                      l3134 083C                      l3126 081C  
                    l3070 1C5E                      l3062 0937                      l3046 0906  
                    l3054 0920                      l3038 08E4                      l2430 1D31  
                    l2422 1D11                      l2350 1F3A                      l2342 1F2B  
                    l2334 1F1D                      l2406 1DDC                      l3302 025F  
                    l3310 02A4                      l3230 0076                      l3222 0060  
                    l2256 1B50                      l2280 1FDE                      l2272 1F87  
                    l3208 1BBA                      l3216 1CBB                      l2328 1EA5  
                    l2600 175A                      l2520 15F9                      l2512 15E9  
                    l2504 15D1                      l3080 1D4A                      l3152 0871  
                    l3136 0840                      l3144 085A                      l3128 0831  
                    l3160 000F                      l3072 1C6B                      l2432 1D37  
                    l2424 1D18                      l2416 1D06                      l2360 1F52  
                    l2352 1F40                      l2344 1F2F                      l2336 1F20  
                    l2408 1DE2                      l3400 05BB                      l3320 034B  
                    l3312 02B3                      l3304 0278                      l3240 00B6  
                    l3232 0086                      l3224 0066                      l2266 1C35  
                    l2258 1B58                      l2282 1FEC                      l2274 1FBF  
                    l3218 1CC1                      l2610 1775                      l2530 160D  
                    l2522 15FD                      l2514 15ED                      l2506 15D3  
                    l3082 1D5E                      l3154 0876                      l3170 0049  
                    l3162 001C                      l3074 1C72                      l3066 1C58  
                    l2290 10AD                      l2434 1D38                      l2426 1D1C  
                    l2418 1D08                      l2450 1CE0                      l2442 1CCC  
                    l2362 1F63                      l2354 1F43                      l2370 1F77  
                    l2346 1F34                      l2338 1F24                      l3410 0692  
                    l3402 05BF                      l3330 03A4                      l3322 035A  
                    l3314 02FA                      l3306 0281                      l3250 00DC  
                    l3234 008A                      l3242 00C6                      l3226 006D  
                    l2268 1C4D                      l2284 1FFA                      l2276 1FC4  
                    l2612 1778                      l2604 1763                      l2620 1785  
                    l2540 1621                      l2532 1611                      l2524 1601  
                    l2516 15F1                      l2508 15E1                      l3084 1D7A  
                    l3092 1154                      l3164 0020                      l3172 004F  
                    l3156 0004                      l3076 1C78                      l3068 1C5A  
                    l2292 10B1                      l2436 1D3F                      l2428 1D20  
                    l2452 1CE4                      l2444 1CD2                      l2460 1D01  
                    l2372 1F7C                      l2364 1F69                      l2356 1F4A  
                    l2348 1F38                      l2380 1D99                      l3420 06EC  
                    l3412 069E                      l3404 05DD                      l3340 044E  
                    l3324 0375                      l3316 0309                      l3308 029C  
                    l3260 011B                      l3252 00F1                      l3244 00D4  
                    l3236 009F                      l3228 0072                      l2278 1FD1  
                    l3182 1BEB                      l2630 1798                      l2622 1786  
                    l2614 177A                      l2606 176C                      l2550 1666  
                    l2534 1615                      l2526 1605                      l2518 15F5  
                    l2542 1625                      l2470 1589                      l3190 1ECF  
                    l3086 1D94                      l3094 1168                      l3166 0032  
                    l3158 000C                      l2294 10C0                      l2286 10A4  
                    l2710 0D62                      l2702 0D0C                      l2438 1D45  
                    l2454 1CEE                      l2446 1CD5                      l2374 1F81  
                    l2366 1F6A                      l2358 1F4E                      l2390 1DAD  
                    l2382 1D9D                      l3430 0718                      l3422 06F2  
                    l3406 0638                      l3414 06D9                      l3342 0450  
                    l3334 03C3                      l3326 037E                      l3318 0324  
                    l3270 014B                      l3254 0104                      l3246 00D5  
                    l3238 00B2                      l3510 1E25                      l2640 17D6  
                    l2632 179D                      l2624 178A                      l2616 177F  
                    l2608 1770                      l2552 1668                      l2560 167A  
                    l2544 1626                      l2536 1619                      l2528 1609  
                    l2480 159D                      l2472 158A                      l2464 1578  
                    l2800 11FC                      l3192 1ED5                      l3184 1EB7  
                    l3088 1D96                      l3096 1184                      l3176 1C0F  
                    l3168 0040                      l2296 10C5                      l2288 10A6  
                    l2720 0DDF                      l2712 0D8E                      l2704 0D1C  
                    l2456 1CF4                      l2448 1CDC                      l2368 1F71  
                    l2392 1DB3                      l2384 1DA2                      l3440 074B  
                    l3432 071F                      l3416 06E1                      l3408 0673  
                    l3360 04C0                      l3352 0489                      l3328 0386  
                    l3336 03CC                      l3280 0193                      l3272 014F  
                    l3424 06F9                      l3264 011F                      l3256 0108  
                    l3248 00D9                      l3512 1E36                      l3504 1DF1  
                    l2650 17ED                      l2642 17DB                      l2634 17AB  
                    l2626 1790                      l2618 1781                      l2570 16AB  
                    l2562 1686                      l2554 166C                      l2546 163D  
                    l2538 161D                      l2490 15B3                      l2474 158F  
                    l2482 159F                      l2466 157F                      l2810 1229  
                    l2802 1200                      l3194 1EE3                      l3186 1EBC  
                    l3098 118C                      l3178 1C13                      l2730 0E5F  
                    l2722 0DFC                      l2714 0DAA                      l2706 0D29  
                    l2458 1CFB                      l2394 1DB6                      l2386 1DA4  
                    l2378 1D98                      l3450 0770                      l3442 0751  
                    l3434 072E                      l3426 06FF                      l3418 06E8  
                    l3370 04E2                      l3362 04C7                      l3354 0493  
                    l3338 0401                      l3290 01C5                      l3282 0197  
                    l3274 015D                      l3266 013B                      l3258 0119  
                    l3514 1E44                      l3506 1DF6                      l2652 17EF  
                    l2644 17E3                      l2636 17AF                      l2580 16C2  
                    l2572 16AF                      l2564 168B                      l2556 166D  
                    l2548 165D                      l2492 15B9                      l2484 15A7  
                    l2476 1594                      l2468 1585                      l2820 1254  
                    l2812 122E                      l2804 1210                      l3196 1EF1  
                    l3188 1EC2                      l2740 0F17                      l2732 0E8C  
                    l2724 0E0C                      l2716 0DC6                      l2708 0D46  
                    l2660 0CA6                      l2900 1483                      l2396 1DBD  
                    l2388 1DA8                      l3460 0798                      l3452 077B  
                    l3444 0755                      l3436 0737                      l3428 0707  
                    l3380 0556                      l3372 04F0                      l3364 04D0  
                    l3356 04AE                      l3348 0452                      l3292 01D8  
                    l3284 019B                      l3276 0161                      l3268 0147  
                    l3508 1DFB                      l2654 17FA                      l2646 17E8  
                    l2638 17CD                      l2590 1725                      l2582 16C3  
                    l2574 16B3                      l2558 1676                      l2494 15BD  
                    l2486 15AC                      l2478 159C                      l2830 1287  
                    l2822 1264                      l2814 123B                      l2806 1220  
                    l3198 1EF6                      l2750 0F3C                      l2742 0F20  
                    l2734 0E9C                      l2726 0E29                      l2718 0DCF  
                    l2670 0CBB                      l2662 0CAC                      l2902 1489  
                    l2398 1DC1                      l2910 0943                      l3462 079C  
                    l3454 0787                      l3446 0763                      l3438 073F  
                    l3390 058A                      l3382 056A                      l3374 04F7  
                    l3358 04B4                      l3294 01EB                      l3286 01B4  
                    l3278 017A                      l3470 07BC                      l2656 17FE  
                    l2648 17E9                      l2592 172B                      l2584 16CC  
                    l2576 16BC                      l2568 1694                      l2496 15BE  
                    l2488 15B2                      l2832 129D                      l2824 126F  
                    l2816 1242                      l2760 0F54                      l2752 0F45  
                    l2744 0F2E                      l2736 0EC9                      l2728 0E42  
                    l2680 0CD8                      l2672 0CC3                      l2664 0CB0  
                    l2912 0947                      l3464 07A8                      l3456 078B  
                    l3448 076C                      l3392 0599                      l3384 0573  
                    l3376 04FC                      l3368 04D5                      l3296 01EF  
                    l3288 01BF                      l3472 07CE                      l2842 1C7D  
                    l2850 1B17                      l2594 1730                      l2578 16BE  
                    l2586 16D1                      l2498 15C3                      l2834 12A2  
                    l2826 1273                      l2818 1246                      l2770 0F83  
                    l2762 0F68                      l2746 0F37                      l2754 0F4B  
                    l2738 0EEF                      l2690 0CEF                      l2682 0CDC  
                    l2674 0CC5                      l2666 0CB1                      l2658 0C9F  
                    l2906 1534                      l2922 0A38                      l2914 0949  
                    l3466 07B4                      l3458 0791                      l3394 05A0  
                    l3386 0577                      l3378 0537                      l3298 01F5  
                    l3546 0133                      l2844 1C81                      l2860 1BC8  
                    l2852 1B96                      l2588 16E7                      l2596 173F  
                    l2836 12A6                      l2828 127D                      l2780 0FBE  
                    l2772 0F87                      l2756 0F4F                      l2748 0F3B  
                    l2692 0CF1                      l2684 0CDD                      l2676 0CCD  
                    l2668 0CB6                      l2940 0BE3                      l2924 0A3F  
                    l2916 0950                      l2932 0AF4                      l3396 05AF  
                    l3388 057D                      l2846 1C9D                      l2862 1BCD  
                    l2854 1B9F                      l2598 1755                      l2838 12A7  
                    l2870 10CA                      l2790 0FEB                      l2782 0FCD  
                    l2774 0FA0                      l2766 0F70                      l2758 0F50  
                    l2694 0CF9                      l2686 0CE2                      l2678 0CD2  
                    l2950 1B5D                      l2942 0BEA                      l2934 0AFB  
                    l3398 05B4                      l2848 1C9F                      l2864 1BD3  
                    l2856 1BA5                      l2872 10F0                      l2792 0FEC  
                    l2784 0FD7                      l2768 0F75                      l2776 0FA6  
                    l2696 0CFE                      l2688 0CE7                      l2952 1B5E  
                    l2928 0AC7                      l2882 1AFA                      l2890 1B30  
                    l2866 1BD9                      l2874 10F9                      l2962 12B0  
                    l2794 0FF7                      l2786 0FD9                      l2778 0FB3  
                    l2698 0D03                      l2954 1B64                      l2946 0C72  
                    l2884 1B22                      l2868 1BDF                      l2876 10FE  
                    l2980 12F6                      l2964 12C3                      l2788 0FE7  
                    l2892 1370                      l2956 1B6A                      l2886 1B25  
                    l2798 11F7                      l2878 113D                      l2990 1321  
                    l2982 12FF                      l2974 12DF                      l2894 1376  
                    l2958 1B6C                      l2888 1B2D                      l2992 1329  
                    l2984 1308                      l2976 12E5                      l2968 12CC  
                    l2994 1333                      l2986 1316                      l2978 12F4  
                    l2988 1320                      STR_1 1096              ?_LCD_command 0070  
                    u3100 1FAE                      u3101 1FAA                      u3030 1C43  
                    u3031 1C41                      u3040 1C44                      u3024 1C3B  
                    u3200 1FF7                      u3120 1FBC                      u4000 1770  
                    u3025 1C39                      u3201 1FF3                      u3121 1FB8  
                    u4001 176F                      u3050 1C57                      u3114 1FB1  
                    u4010 1775                      u3051 1C56                      u4011 1774  
                    u3140 1FCE                      u3060 1F92                      u3300 1B40  
                    u4100 17CD                      u4020 177F                      u3220 10B1  
                    u3141 1FCA                      u3061 1F8E                      u3301 1B3F  
                    u4101 17CC                      u4021 177E                      u3221 10B0  
                    u3214 1FFA                      u3134 1FBF                      u3310 1E5E  
                    u4110 17D6                      u4030 1785                      u3311 1E5D  
                    u4111 17D5                      u4031 1784                      u3160 1FDB  
                    u3080 1FA0                      u4120 17DB                      u4040 178A  
                    u3240 10C5                      u4200 0CE2                      u3400 1F40  
                    u3161 1FD7                      u3081 1F9C                      u4121 17DA  
                    u4041 1789                      u3241 10C4                      u4201 0CE1  
                    u3401 1F3F                      u3154 1FD1                      u3074 1F95  
                    u3330 1E72                      u3250 1B0B                      u4130 17E8  
                    u4050 1790                      u5010 1316                      u4210 0CE7  
                    u3331 1E71                      u3251 1B0A                      u4131 17E7  
                    u4051 178F                      u5011 1315                      u3235 10B8  
                    u4211 0CE6                      u3180 1FE9                      u3260 1B15  
                    u4140 17ED                      u4060 1797                      u5100 1364  
                    u4220 0CFE                      u3420 1F52                      u3500 1DB3  
                    u3181 1FE5                      u3325 1E63                      u3261 1B14  
                    u4141 17EC                      u4061 1796                      u5101 1363  
                    u5005 1301                      u4301 0E1B                      u4221 0CFD  
                    u3421 1F51                      u3501 1DB2                      u3174 1FDE  
                    u3094 1FA3                      u3350 1E8D                      u3270 1B76  
                    u4150 17FE                      u4070 179D                      u5110 088F  
                    u5030 132F                      u4302 0E22                      u4230 0D03  
                    u3351 1E8C                      u3271 1B72                      u4151 17FD  
                    u4071 179C                      u5111 088E                      u5031 132E  
                    u5015 1312                      u4303 0E29                      u4231 0D02  
                    u3415 1F44                      u4080 17AF                      u5200 091F  
                    u5120 08A3                      u5040 1333                      u4160 0CB0  
                    u3440 1F63                      u3520 1DC5                      u6000 07A8  
                    u3345 1E74                      u4081 17AE                      u5201 091E  
                    u5121 08A2                      u5041 1332                      u5025 1322  
                    u4321 0E51                      u4241 0D54                      u4161 0CAF  
                    u3441 1F62                      u3521 1DC4                      u6001 07A7  
                    u3194 1FEC                      u3370 1EAB                      u3290 1B7F  
                    u4090 17BE                      u5210 0926                      u5050 133A  
                    u4410 0F3B                      u4322 0E58                      u4242 0D5B  
                    u4170 0CB6                      u3610 1D31                      u3530 1DCF  
                    u6010 07B4                      u3371 1EAA                      u3355 1E89  
                    u3291 1B7E                      u5211 0925                      u5051 1339  
                    u4411 0F3A                      u4331 0E7E                      u4323 0E5F  
                    u4315 0E2B                      u4251 0D70                      u4243 0D62  
                    u4171 0CB5                      u3611 1D30                      u3435 1F53  
                    u3531 1DCE                      u3515 1DB7                      u6011 07B3  
                    u3284 1B79                      u3700 1589                      u5300 1D94  
                    u5140 08E4                      u4500 0FB3                      u4332 0E85  
                    u4252 0D77                      u4180 0CBB                      u3460 1F77  
                    u3380 1F24                      u6020 07CE                      u3365 1E9D  
                    u3701 1588                      u5301 1D93                      u5141 08E3  
                    u4501 0FB2                      u4405 0F30                      u4341 0EAB  
                    u4333 0E8C                      u4261 0D9C                      u4253 0D7E  
                    u4181 0CBA                      u3605 1D21                      u3461 1F76  
                    u3445 1F5F                      u3381 1F23                      u6021 07CD  
                    u3710 158F                      u5310 1168                      u5230 0937  
                    u5070 134C                      u4510 0FCD                      u4430 0F4F  
                    u4350 0ED5                      u4342 0EB2                      u4262 0DA3  
                    u4190 0CDC                      u3630 1D45                      u3470 1F7C  
                    u3390 1F2F                      u3550 1DE2                      u4095 17B9  
                    u3711 158E                      u5311 1167                      u5231 0936  
                    u5135 08CB                      u5071 134B                      u4511 0FCC  
                    u4431 0F4E                      u4343 0EB9                      u4271 0DB8  
                    u4263 0DAA                      u4191 0CDB                      u3631 1D44  
                    u3615 1D2D                      u3471 1F7B                      u3455 1F6B  
                    u3391 1F2E                      u3551 1DE1                      u3535 1DCB  
                    u3800 1648                      u3720 1594                      u5320 1184  
                    u5400 082A                      u5240 1C5E                      u5160 0902  
                    u5080 1353                      u4520 0FEB                      u4440 0F54  
                    u4272 0DBF                      u3640 1CD2                      u3560 1DE7  
                    u3480 1D9D                      u3801 1646                      u3721 1593  
                    u5305 1D90                      u5321 1183                      u5241 1C5D  
                    u5225 0929                      u5161 0901                      u5145 08E0  
                    u5081 1352                      u5065 133C                      u4521 0FEA  
                    u4505 0FAF                      u4441 0F53                      u4425 0F3E  
                    u4361 0EE1                      u4273 0DC6                      u3625 1D39  
                    u3641 1CD1                      u3561 1DE6                      u3545 1DD6  
                    u3481 1D9C                      u3810 1649                      u3730 15B2  
                    u4610 1273                      u4530 11FC                      u5330 1190  
                    u5410 0840                      u5170 0906                      u4450 0F68  
                    u4370 0EFD                      u4362 0EE8                      u3570 1D0E  
                    u3490 1DA8                      u3731 15B1                      u4611 1272  
                    u4531 11FB                      u5331 118F                      u5411 083F  
                    u5171 0905                      u5155 08F5                      u4515 0FC9  
                    u4451 0F67                      u4363 0EEF                      u4355 0ED0  
                    u4291 0DEE                      u3571 1D0D                      u3491 1DA7  
                    u3900 16B3                      u3820 165D                      u3740 15BD  
                    u4620 1279                      u4540 1200                      u4700 10FE  
                    u5420 0847                      u5180 090D                      u4460 0F6F  
                    u4292 0DF5                      u3660 1CE4                      u3901 16B2  
                    u3821 165C                      u3741 15BC                      u4621 1278  
                    u4605 1268                      u4541 11FF                      u4701 10FD  
                    u5341 119F                      u5421 0846                      u5405 0825  
                    u5181 090C                      u4461 0F6E                      u4381 0F09  
                    u4293 0DFC                      u4285 0DC8                      u3661 1CE3  
                    u6037 1E3E                      u3910 16C2                      u3830 166C  
                    u3750 15C3                      u4630 127D                      u4550 1220  
                    u5350 11B8                      u5342 11A0                      u5510 0020  
                    u5270 1C78                      u4470 0F75                      u4382 0F10  
                    u3590 1D20                      u3670 1CEE                      u4710 1376  
                    u6047 1B54                      u3911 16C1                      u3831 166B  
                    u3751 15C2                      u4631 127C                      u4551 121F  
                    u5351 11B7                      u5343 11A5                      u5511 001F  
                    u5271 1C77                      u5255 1C65                      u5095 1356  
                    u4471 0F74                      u4383 0F17                      u4375 0EF8  
                    u3591 1D1F                      u3671 1CED                      u3655 1CD6  
                    u4711 1375                      u3760 15C8                      u4640 1292  
                    u5280 1D5E                      u5344 11A6                      u5440 0859  
                    u5520 0032                      u4480 0F87                      u4800 0950  
                    u5600 0118                      u3761 15C7                      u5281 1D5D  
                    u5361 11C7                      u5345 11AB                      u5441 0858  
                    u5521 0031                      u5505 0011                      u5265 1C6C  
                    u4481 0F86                      u3585 1D12                      u4801 094F  
                    u5601 0117                      u3930 16E7                      u3850 1682  
                    u3770 15E1                      u4650 12A2                      u4570 1241  
                    u5290 1D7A                      u5370 11F2                      u5362 11C8  
                    u5346 11AC                      u5450 0860                      u4490 0F96  
                    u3690 1D01                      u5610 0147                      u3931 16E6  
                    u3851 1681                      u3771 15E0                      u4651 12A1  
                    u4571 1240                      u5291 1D79                      u5371 11F1  
                    u5363 11CD                      u5451 085F                      u5435 0849  
                    u5195 090F                      u4395 0F19                      u3691 1D00  
                    u3675 1CEA                      u5611 0146                      u3860 1686  
                    u3780 15E5                      u4660 12A6                      u5364 11CE  
                    u5380 1B4A                      u5540 004F                      u5700 0324  
                    u5620 014B                      _RCEN 048B                      u3941 16FE  
                    u3933 16E3                      u3925 16C5                      u3861 1685  
                    u3845 166F                      u3781 15E4                      u4661 12A5  
                    u4645 128D                      u4565 1233                      u5365 11D3  
                    u5381 1B49                      u5541 004E                      u5525 002E  
                    u3685 1CF5                      u4725 1393                      u5701 0323  
                    u5621 014A                      u5550 1CCB                      u4670 1B1F  
                    u3950 1712                      u3942 16FF                      u3870 168B  
                    u3790 163D                      u4590 1263                      u5366 11D4  
                    u5470 0871                      u5390 0813                      u4750 1489  
                    u5710 034B                      u5630 017A                      u5551 1CCA  
                    u4671 1B1E                      u3951 1713                      u3943 1704  
                    u3871 168A                      u3791 163C                      u4591 1262  
                    u5375 11EE                      u5471 0870                      u5391 0812  
                    u5535 0041                      u4495 0F91                      u4751 1488  
                    u4735 13ED                      u4815 0970                      u5711 034A  
                    u5631 0179                      u4680 1B9E                      u3960 1730  
                    u3952 1718                      u3944 1705                      u5480 0876  
                    u4920 0BEA                      u4840 0A3F                      u5800 04F0  
                    u5720 035A                      u5640 01B4                      u5560 0066  
                    u4681 1B9D                      u3961 172F                      u3953 1719  
                    u3945 170A                      u3881 169D                      u4585 1255  
                    u5481 0875                      u5465 0863                      u4745 1442  
                    u4921 0BE9                      u4905 0B57                      u4841 0A3E  
                    u4825 09AC                      u5801 04EF                      u5721 0359  
                    u5641 01B3                      u5561 0065                      u3970 1755  
                    u3946 170B                      u3890 16AF                      u3882 16A4  
                    u5490 000C                      u5730 0375                      u5650 01EF  
                    u5570 0086                      u3971 1754                      u3891 16AE  
                    u3883 16AB                      u3795 1639                      u5491 000B  
                    u4915 0BA2                      u4835 09F7                      u5731 0374  
                    u5651 01EE                      u5571 0085                      u3980 175A  
                    u5900 06FF                      u5820 0569                      u5660 0278  
                    u5580 00C6                      u3981 1759                      u4765 14A6  
                    u5901 06FE                      u5821 0568                      u5725 0356  
                    u5661 0277                      u5581 00C5                      u4790 0947  
                    u5910 0707                      u5830 058A                      u5750 0488  
                    u5670 029C                      u5590 00D4                      u4695 10D2  
                    u4775 14F3                      u4935 0BFD                      u4855 0A52  
                    u4791 0946                      u5911 0706                      u5831 0589  
                    u5815 04FF                      u5751 0487                      u5671 029B  
                    u5591 00D3                      u4960 1B64                      u4880 0AFB  
                    u5920 0718                      u5840 0599                      u5760 0493  
                    u5680 02B3                      u4785 153F                      u4961 1B63  
                    u4945 0C39                      u4881 0AFA                      u4865 0A8E  
                    u5921 0717                      u5841 0598                      u5761 0492  
                    u5745 0455                      u5681 02B2                      u4970 1B6A  
                    u5930 072E                      u5850 05B4                      u5770 04AE  
                    u5690 0309                      u3995 1765                      u4971 1B69  
                    u4955 0C75                      u4875 0ACA                      u5931 072D  
                    u5851 05B3                      u5835 0586                      u5771 04AD  
                    u5755 0484                      u5691 0308                      u4980 12C3  
                    u5940 073F                      u5780 04C0                      u4981 12C2  
                    u5941 073E                      u5925 0714                      u5845 0595  
                    u5781 04BF                      u5685 02AF                      u4990 12DD  
                    u5950 074B                      u5790 04E2                      u4991 12DC  
                    u4895 0B1B                      u5951 074A                      u5935 072A  
                    u5791 04E1                      u5695 0305                      u5960 0755  
                    u5880 06E0                      u5961 0754                      u5881 06DF  
                    u5865 063B                      u5970 0763                      u5890 06F8  
                    u5971 0762                      u5891 06F7                      u5875 06A1  
                    u5795 04DE                      u5980 077B                      u5981 077A  
                    u5990 0791                      u5991 0790                      u5975 075F  
                    u5985 0777                      _RSEN 0489        __size_of_LM75_init 0024  
      __size_of_LM75_read 0069              __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000  
            ?_LCD_pinDirs 0070                      _main 1DF1                      btemp 007E  
           __CFG_BOREN$ON 0000          __end_of_I2C_init 1CA4          __end_of_I2C_read 1BA9  
                    start 0000          __end_of_I2C_stop 1B17      __size_of_I2C_restart 000A  
        __end_of_LM75_set 1BEB             I2C_write@data 0070          __end_of_LCD_data 1B37  
        __end_of_LCD_init 1BC7             ___fltol@sign1 005A           __end_of___fladd 1800  
                   ?_main 00D1                     _ACKEN 048C                     _ACKDT 048D  
         __end_of___awdiv 1F86           __end_of___flneg 1B4D             __CFG_WDTE$OFF 0000  
         __end_of___awmod 1DF1           __end_of___flmul 1000           __end_of___flsub 1C33  
         __end_of___fltol 0882           __end_of___lldiv 1EB4           ___awdiv@divisor 0077  
         __end_of___llmod 0058           __end_of___lwdiv 1D4A           __end_of___lwmod 1D06  
         ___awdiv@counter 0020                     _SSPIF 0063           __end_of_dpowers 1096  
                   _latch 1B4D             ?_LCD_sendBits 0070                     _scale 0940  
         __end_of_isdigit 1B6E           __end_of_toFloat 1154                     pclath 000A  
                   status 0003         __end_of_I2C_start 1B0D                     wtemp0 007E  
         __end_of_sprintf 07D3         __end_of_I2C_write 1B42             ?_LCD_transmit 0070  
        LCD_transmit@data 0028            __CFG_MCLRE$OFF 0000           __initialization 07D3  
     __size_of_LCD_string 0028              __end_of_main 1E4E                 ??_I2C_ack 0070  
       __end_of_LM75_init 1C0F         __end_of_LM75_read 1F1D                    ??_main 00D5  
    __size_of__tdiv_to_l_ 00BD            ??_LCD_sendBits 0072                    ?_latch 0070  
        ___llmod@dividend 0074                    ?_scale 003E          ___awdiv@dividend 0079  
                  _SSPADD 0093                    _TRISD0 0440                    _TRISC3 043B  
                  _TRISD1 0441                    _TRISC4 043C                    _TRISD4 0444  
                  _TRISD5 0445                    _TRISD6 0446                    _TRISD7 0447  
                  _SSPCON 0014                    _SSPBUF 0013            ??_LCD_transmit 0076  
        __end_of___xxtofl 12B0         toFloat@isfraction 00A0            __CFG_PWRTE$OFF 0000  
        __end_of__powers_ 103A             toFloat@result 00A1                    ___flge 1154  
                  ___fleq 1D4A                 ??___fladd 005A                    ___wmul 1C58  
               ??___awdiv 007B                 ??___flneg 0074                 ??___awmod 0074  
               ??___flmul 002C                 ??___flsub 007E                 ??___fltol 0055  
               ??___lldiv 0078                 ??___llmod 0078                 ??___lwdiv 007A  
               ??___lwmod 0074                    _fround 136D          ___awdiv@quotient 0022  
      I2C_ack@acknowledge 0070              LCD_data@data 0077           ___awmod@divisor 0070  
         ___awmod@counter 0075        LCD_sendBits@pinBit 0072                 ??_isdigit 0070  
      __size_of__Umul8_16 0027                 ??_toFloat 006A                 ?_I2C_init 0020  
               ?_I2C_read 0070              LCD_getBits@i 0075                 ?_I2C_stop 0070  
               ??_sprintf 00B1                ___flge@ff1 0070                ___flge@ff2 0074  
               ?_LM75_set 0071              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
    __size_of_LCD_getBits 0025   __end_of__initialization 07FC                ___flneg@f1 0070  
    __size_of_LCD_command 000B                 ?_LCD_data 0070                 ?_LCD_init 0070  
              ___fltol@f1 0051      __size_of_LCD_pinDirs 0009            __pcstackCOMMON 0070  
            __pidataBANK1 0802             __end_of_latch 1B5C             __end_of_scale 0C9F  
              __div_to_l_ 0882                ??_I2C_init 007E                ??_I2C_read 0071  
            ??_LCD_string 0078                ??_I2C_stop 0070          LCD_string@column 0029  
         __div_to_l_@exp1 0025                   ??_latch 0070           __div_to_l_@cntr 0024  
                 ??_scale 0042           __div_to_l_@quot 0020              sprintf@width 00C1  
              __pbssBANK1 00D8                ??_LM75_set 0073                ??_LCD_data 0077  
              ??_LCD_init 0078             __div_to_l_@f1 0070             __div_to_l_@f2 0074  
          LCD_string@text 002A         __end_of__Umul8_16 10CA                __pmaintext 1DF1  
                 ?___flge 0070                   ?___fleq 0070                   ?___wmul 0070  
    __end_of_LCD_sendBits 2000        __end_of_LCD_string 1CCC                   _ACKSTAT 048E  
                 ?_fround 003E                   _I2C_ack 1B6E      __end_of_LCD_transmit 1B95  
               ?___xxtofl 0070                   _SSPCON2 0091                   _SSPSTAT 0094  
              __stringtab 1000             ??_I2C_restart 0070         __end_of__npowers_ 106E  
               _I2C_start 1B03                 _I2C_write 1B37           __size_of___flge 00A2  
         __size_of___fleq 004E                   ___fladd 1578                   ___awdiv 1F1D  
                 ___flneg 1B42                   ___awmod 1D98                   ___flmul 0C9F  
                 ___flsub 1C0F                   ___fltol 0806                   ___lldiv 1E4E  
         __size_of___wmul 0025                   ___llmod 0004                   ___lwdiv 1D06  
              _fround$882 004D                _fround$883 0049                   ___lwmod 1CCC  
      LM75_set@regAddress 0073           __size_of_fround 020B                   __ptext1 0058  
                 __ptext2 0940                   __ptext3 1D98                   __ptext4 1F1D  
                 __ptext5 1B5C                   __ptext6 136D                   __ptext7 1CCC  
                 __ptext8 1D06                   __ptext9 0C9F               ?__div_to_l_ 0070  
                 _dpowers 106E                   _isdigit 1B5C                ??___xxtofl 0074  
               _LM75_init 1BEB                 _LM75_read 1EB4          ___awmod@dividend 0072  
                 _toFloat 10CA                   _rowAddr 00E7                   _sprintf 0058  
    end_of_initialization 07FC         LCD_getBits@pinBit 0070           ___lldiv@divisor 0070  
         ___lldiv@counter 007D                ?_I2C_start 0070                ?_I2C_write 0070  
     __end_of_I2C_restart 1B21            __tdiv_to_l_@f1 0070            __tdiv_to_l_@f2 0074  
           ??__tdiv_to_l_ 0078               ___fladd@grs 0065                ?_LM75_init 0070  
              ?_LM75_read 006C             ___xxtofl@sign 0078         __size_of_I2C_init 0027  
       __size_of_I2C_read 0014         __size_of_I2C_stop 000A               ___flmul@grs 0032  
       __size_of_LM75_set 0024     __size_of_LCD_sendBits 007A       __size_of__div_to_l_ 00BE  
      LCD_transmit@pinBit 0020         __size_of_LCD_data 000B         __size_of_LCD_init 001E  
          __end_of___flge 11F6            __end_of___fleq 1D98     __size_of_LCD_transmit 0014  
          __end_of___wmul 1C7D            __end_of_fround 1578       start_initialization 07D3  
     __end_of__tdiv_to_l_ 136D             ??_LCD_getBits 0071              _LCD_sendBits 1F86  
           ??_LCD_command 0077             ??_LCD_pinDirs 0070           ___llmod@divisor 0070  
         ___llmod@counter 0079  __CFG_FOSC$INTRC_NOCLKOUT 0000              _LCD_transmit 1B81  
             _I2C_restart 1B17               ??_I2C_start 0070               ??_I2C_write 0070  
            toFloat@tempr 0066                  ??___flge 0078                  ??___fleq 0078  
                ??___wmul 0074                 __Umul8_16 10A3               __pdataBANK1 00E7  
                ??_fround 0042                  ?_I2C_ack 0070             sprintf@tmpval 00C3  
               ___fladd@a 0056                 ___fladd@b 0052                fround@prec 0051  
             ??_LM75_init 007E               ??_LM75_read 00A5                 ___flmul@a 0028  
               ___flmul@b 0024                 ___flsub@a 0066                 ___flsub@b 006A  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
       __size_of___xxtofl 00BA               sprintf@flag 00BF               sprintf@eexp 00C7  
             sprintf@fval 00C9               sprintf@prec 00CE       __end_of_LCD_getBits 1C58  
     __end_of_LCD_command 1B2C             LCD_string@row 0079          ___lwdiv@dividend 0078  
     __end_of_LCD_pinDirs 1B03                  ?___fladd 0052                  ?___awdiv 0077  
                ?___flneg 0070                  ?___awmod 0070                  ?___flmul 0024  
                ?___flsub 0066                  ?___fltol 0051                  ?___lldiv 0070  
                ?___llmod 0070                 __npowers_ 103A                ?__Umul8_16 0070  
                ?___lwdiv 0076                  ?___lwmod 0070                 __pstrings 1000  
             __tdiv_to_l_ 12B0              ??__div_to_l_ 0078                  ?_isdigit 0070  
                ?_toFloat 0066                  _I2C_init 1C7D                  _I2C_read 1B95  
               _scale$884 004C                  _I2C_stop 1B0D          ___lwdiv@quotient 007B  
                ?_sprintf 00AC            __size_of_latch 000F            __size_of_scale 035F  
                _LM75_set 1BC7            ___wmul@product 0074                  _LCD_data 1B2C  
                _LCD_init 1BA9        __end_of__div_to_l_ 0940          __size_of_I2C_ack 0013  
             __stringbase 1005         ___wmul@multiplier 0070               _LCD_getBits 1C33  
             _LCD_command 1B21               _LCD_pinDirs 1AFA       LM75_read@regAddress 00AB  
             ??__Umul8_16 0072          __size_of___fladd 0288          __size_of___awdiv 0069  
        __size_of___flneg 000B          __size_of___awmod 0059          __size_of___flmul 0361  
        __size_of___flsub 0024          __size_of___fltol 007C          __size_of___lldiv 0066  
        __size_of___llmod 0054          __size_of___lwdiv 0044          __size_of___lwmod 003A  
      __end_of__stringtab 1006               _isdigit$678 0070                sprintf@val 00BB  
                ___xxtofl 11F6          __size_of_isdigit 0012           ___lwdiv@divisor 0076  
        __size_of_toFloat 008A           ___lwdiv@counter 007D                  __ptext10 10A3  
                __ptext11 12B0                  __ptext20 1EB4                  __ptext12 0882  
                __ptext21 10CA                  __ptext13 1C58                  __ptext30 1B0D  
                __ptext22 11F6                  __ptext14 0004                  __ptext31 1B03  
                __ptext23 1578                  __ptext15 0806                  __ptext40 1F86  
                __ptext32 1C7D                  __ptext24 1B17                  __ptext16 1C0F  
                __ptext41 1B4D                  __ptext33 1E4E                  __ptext25 1B95  
                __ptext17 1B42                  __ptext42 1C33                  __ptext34 1CA4  
                __ptext26 1B6E                  __ptext18 1154                  __ptext35 1B2C  
                __ptext27 1BEB                  __ptext19 1D4A                  __ptext36 1BA9  
                __ptext28 1BC7                  __ptext37 1AFA                  __ptext29 1B37  
                __ptext38 1B21                  __ptext39 1B81         __CFG_BOR4V$BOR40V 0000  
                __powers_ 1006          __size_of_sprintf 077B             __size_of_main 005D  
            ?_I2C_restart 0070           LCD_getBits@data 0074                  main@argc 00D1  
                main@argv 00D3                _LCD_string 1CA4                  isdigit@c 0071  
                scale@scl 0050        LCD_command@command 0077                 sprintf@ap 00BA  
        __tdiv_to_l_@exp1 0025          __tdiv_to_l_@cntr 0024                 sprintf@sp 00CD  
        __tdiv_to_l_@quot 0020          ___lwmod@dividend 0072          ___lldiv@dividend 0074  
               stringcode 1000             I2C_init@speed 0020              ?__tdiv_to_l_ 0070  
  __Umul8_16@multiplicand 0070                  sprintf@c 00D0                  sprintf@f 00AC  
        ___lldiv@quotient 0079           ___lwmod@divisor 0070           ___lwmod@counter 0075  
                stringdir 1000                  stringtab 1000             ___fladd@signs 0062  
            LM75_read@LSB 00A9              LM75_read@MSB 00A7              ___fladd@aexp 0063  
            ___fladd@bexp 0064      __Umul8_16@multiplier 0078              LM75_set@data 0071  
       __Umul8_16@product 0074  
