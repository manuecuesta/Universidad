#ifndef TC74_H
#define	TC74_H
//------------------------------------------------------------------------------
#include "I2C.h"
#include "LM75_Prototypes.h"
//------------------------------------------------------------------------------
void TC74_init()
{
  I2C_init(100000);
}
//------------------------------------------------------------------------------
float LM75_read()
{
  signed int MSB,LSB;
  
  I2C_start();                      
  
  I2C_write(LM75_ADDRESS + 0);        // 0 = Write            
  //I2C_write(TEMPERATURE_ADDRESS);     THYST_ADDRESS    
  I2C_write(CONFIGURATION_ADDRESS);        
  I2C_restart();                           
  I2C_write(LM75_ADDRESS + 1);        // 1 = Read   
  MSB = I2C_read(ACK);
  LSB = I2C_read(NACK);
  
  I2C_stop();
  
  return toFloat((MSB << 8) + LSB);
}
//------------------------------------------------------------------------------
char TC74_readConfig()
{  
  I2C_start();                      
  
  I2C_write(LM75_ADDRESS + 0);        // 0 = Write               
  I2C_write(CONFIGURATION_ADDRESS);        
  I2C_restart();                           
  I2C_write(LM75_ADDRESS + 1);        // 1 = Read   
  char config = I2C_read(NACK);
  
  I2C_stop();
  
  return config;
}
//------------------------------------------------------------------------------
float toFloat(signed int tempr)
{
  float result = (float)(tempr>>8);      //Discard LSByte (Only holds fraction flag bit - see datasheet)
  char isfraction = tempr & FRACTION_FLAG;          
  
  if(isfraction) 
  {
    result = result + 0.5;
  }
  
  return (result);
}
//------------------------------------------------------------------------------
#endif